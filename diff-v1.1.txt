This page is best viewed with JavaScript enabled! {#this-page-is-best-viewed-with-jav	This page is best viewed with JavaScript enabled! {#this-page-is-best-viewed-with-jav
=================================================					=================================================

::: {.center}										::: {.center}
![NIAP Logo](images/niaplogo.png)\							![NIAP Logo](images/niaplogo.png)\
										      |	Version: 1.2-draft\
Version: 1.1									      |	2022-08-01\
										      |	**National Information Assurance Partnership**\
2019-03-01									      <
										      <
**National Information Assurance Partnership**					      <
:::											:::

Revision History {#revision-history style="page-break-before:always;"}			Revision History {#revision-history style="page-break-before:always;"}
----------------									----------------

  Version   Date         Comment							  Version   Date         Comment
  --------- ------------ ------------------------------------------------------------ |	  --------- ------------ ------------------------------------------------------------
  1.0       2018-12-17   First publication						  1.0       2018-12-17   First publication
  1.1       2019-03-01   Clarifications regarding override for invalid certificates,  |	  1.1       2019-03-01   Clarifications regarding override for invalid certificates, 
										      >	  1.2       2022-08-01   Added audit events

Contents										Contents
--------										--------

::: {#toc .toc}										::: {#toc .toc}
[1Introduction](#int)[1.1Overview](#ppoverview)[1.2Terms](#glossary)[1.2.1Common      |	[1Introduction](#Introduction)[1.1Overview](#ppoverview)[1.2Terms](#glossary)[1.2.1Co
Criteria Terms](#ccterms)[1.2.2Technology Terms](#techterms)[1.3Format		      |	Criteria Terms](#cc-terms)[1.2.2Technical
of this Document](#docformat)[1.4Compliant Targets of				      |	Terms](#tech-terms)[1.3Compliant Targets of
Evaluation](#TOEdescription)[2Conformance Claims](#conf)[3Security		      |	Evaluation](#Compliant_Targets_of_Evaluation)[2Conformance
Requirements](#req)[3.1Security Functional					      |	Claims](#Conformance_Claims)[3Security Functional
Requirements](#SFRs)[3.1.1Cryptographic Support (FCS)](#fcs)[Appendix A		      |	Requirements](#Security_Functional_Requirements)[3.1Auditable Events for
- Optional Requirements](#optional)[Appendix B - Selection-Based		      |	Mandatory SFRs](#ss-audit-table)[3.2Cryptographic Support
Requirements](#sel-based)[Appendix C - Objective				      |	(FCS)](#fcs)[Appendix A - Optional Requirements](#opt-app)[A.1Strictly
Requirements](#objective)[Appendix D - References](#biblio)[Appendix E -	      |	Optional Requirements ](#optional-reqs)[A.2Objective Requirements
Acronyms](#acronyms)								      |	](#objective-reqs)[A.2.1 Auditable Events for Objective Requirements
										      >	](#objective-reqs-audit)[A.2.2Cryptographic Support
										      >	(FCS)](#fcs-objective)[A.3Implementation-Based Requirements
										      >	](#feat-based-reqs)[Appendix B - Selection-Based Requirements
										      >	](#sel-based-reqs)[B.1 Auditable Events for Selection-Based Requirements
										      >	](#sel-based-reqs-audit)[B.2Cryptographic Support
										      >	(FCS)](#fcs-sel-based)[Appendix C - Acronyms](#acronyms)[Appendix D -
										      >	Bibliography](#appendix-bibliography)
:::											:::

1 Introduction {#int .indexable data-level="1"}					      |	1 Introduction {#Introduction .indexable data-level="1"}
==============										==============

1.1 Overview {#ppoverview .indexable data-level="2"}					1.1 Overview {#ppoverview .indexable data-level="2"}
------------										------------

Transport Layer Security (TLS) and the closely-related Datagram TLS		      |	Transport Layer Security ([TLS](#abbr_TLS)) and the closely-related
(DTLS) are cryptographic protocols designed to provide communications		      |	Datagram [TLS](#abbr_TLS) ([DTLS](#abbr_DTLS)) are cryptographic
security over IP networks[.](#ajq_1){#ajq_1} Several versions of the		      |	protocols designed to provide communications security over
protocol are in widespread use in software that provides functionality		      |	[IP](#abbr_IP) networks. Several versions of the protocol are in
such as web browsing, email, instant messaging, and voice-over-IP		      |	widespread use in software that provides functionality such as web
(VoIP)[.](#ajq_2){#ajq_2} Major web sites use TLS to protect			      |	browsing, email, instant messaging, and voice-over-IP (VoIP). Major web
communications to and from their servers[.](#ajq_3){#ajq_3} TLS is also		      |	sites use [TLS](#abbr_TLS) to protect communications to and from their
used to protect communications between hosts and network infrastructure		      |	servers. [TLS](#abbr_TLS) is also used to protect communications between
devices for administration[.](#ajq_4){#ajq_4} The underlying platform,		      |	hosts and network infrastructure devices for administration. The
such as an operating system, often provides the actual TLS			      |	underlying platform, such as an operating system, often provides the
implementation[.](#ajq_5){#ajq_5} The primary goal of the TLS protocol		      |	actual [TLS](#abbr_TLS) implementation. The primary goal of the
is to provide confidentiality and integrity of data transmitted between		      |	[TLS](#abbr_TLS) protocol is to provide confidentiality and integrity of
two communicating endpoints, as well as authentication of at least the		      |	data transmitted between two communicating endpoints, as well as
server endpoint[.](#ajq_6){#ajq_6}						      |	authentication of at least the server endpoint.
										      |
TLS supports many different methods for exchanging keys, encrypting		      |	[TLS](#abbr_TLS) supports many different methods for exchanging keys,
data, and authenticating message integrity[.](#ajq_7){#ajq_7} These		      |	encrypting data, and authenticating message integrity. These methods are
methods are dynamically negotiated between the client and server when		      |	dynamically negotiated between the client and server when the
the TLS connection is established[.](#ajq_8){#ajq_8} As a result,		      |	[TLS](#abbr_TLS) connection is established. As a result, evaluating the
evaluating the implementation of both endpoints is typically necessary		      |	implementation of both endpoints is typically necessary to provide
to provide assurance for the operating environment[.](#ajq_9){#ajq_9}		      |	assurance for the operating environment.

This \"Functional Package for Transport Layer Security\" (short name			This \"Functional Package for Transport Layer Security\" (short name
\"TLS-PKG\") defines functional requirements for the implementation of		      |	\"[TLS](#abbr_TLS)-PKG\") defines functional requirements for the
the Transport Layer Security (TLS) and Datagram TLS (DTLS)			      |	implementation of the Transport Layer Security ([TLS](#abbr_TLS)) and
protocols[.](#ajq_10){#ajq_10} The requirements are intended to improve		      |	Datagram [TLS](#abbr_TLS) ([DTLS](#abbr_DTLS)) protocols. The
the security of products by enabling their					      |	requirements are intended to improve the security of products by
evaluation[.](#ajq_11){#ajq_11}							      |	enabling their evaluation.

1.2 Terms {#glossary .indexable data-level="2"}						1.2 Terms {#glossary .indexable data-level="2"}
---------										---------

### 1.2.1 Common Criteria Terms {#ccterms .indexable data-level="3"}		      |	The following sections list Common Criteria and technology terms used in
										      >	this document.
										      >
										      >	### 1.2.1 Common Criteria Terms {#cc-terms .indexable data-level="3"}
										      >
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Assurance}                  | Grounds for confidence that a     |
										      >	| Assurance                         | [TOE](#abbr_TOE) meets the SFRs   |
										      >	| :::                               | [\[CC\]](#bibCC).                 |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Base_Protection_Profile}    | Protection Profile used as a      |
										      >	| Base Protection Profile           | basis to build a                  |
										      >	| ([Base-PP](#abbr_Base-PP))        | [PP-Configuration](#abbr_PP-Confi |
										      >	| :::                               | guration).                        |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Collaborative_Protection_Pr | A Protection Profile developed by |
										      >	| ofile}                            | international technical           |
										      >	| Collaborative Protection Profile  | communities and approved by       |
										      >	| ([cPP](#abbr_cPP))                | multiple schemes                  |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Common_Criteria}            | Common Criteria for Information   |
										      >	| Common Criteria ([CC](#abbr_CC))  | Technology Security Evaluation    |
										      >	| :::                               | (International Standard ISO/IEC   |
										      >	|                                   | 15408).                           |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Common_Criteria_Testing_Lab | Within the context of the Common  |
										      >	| oratory}                          | Criteria Evaluation and           |
										      >	| Common Criteria Testing           | Validation Scheme (CCEVS), an IT  |
										      >	| Laboratory                        | security evaluation facility,     |
										      >	| :::                               | accredited by the National        |
										      >	|                                   | Voluntary Laboratory              |
										      >	|                                   | Accreditation Program (NVLAP) and |
										      >	|                                   | approved by the NIAP Validation   |
										      >	|                                   | Body to conduct Common            |
										      >	|                                   | Criteria-based evaluations.       |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Common_Evaluation_Methodolo | Common Evaluation Methodology for |
										      >	| gy}                               | Information Technology Security   |
										      >	| Common Evaluation Methodology     | Evaluation.                       |
										      >	| ([CEM](#abbr_CEM))                |                                   |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Distributed_TOE}            | A [TOE](#abbr_TOE) composed of    |
										      >	| Distributed [TOE](#abbr_TOE)      | multiple components operating as  |
										      >	| :::                               | a logical whole.                  |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Extended_Package}           | A deprecated document form for    |
										      >	| Extended Package ([EP](#abbr_EP)) | collecting SFRs that implement a  |
										      >	| :::                               | particular protocol, technology,  |
										      >	|                                   | or functionality. See Functional  |
										      >	|                                   | Packages.                         |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Functional_Package}         | A document that collects SFRs for |
										      >	| Functional Package                | a particular protocol,            |
										      >	| ([FP](#abbr_FP))                  | technology, or functionality.     |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Operational_Environment}    | Hardware and software that are    |
										      >	| Operational Environment           | outside the [TOE](#abbr_TOE)      |
										      >	| ([OE](#abbr_OE))                  | boundary that support the         |
										      >	| :::                               | [TOE](#abbr_TOE) functionality    |
										      >	|                                   | and security policy.              |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Protection_Profile}         | An implementation-independent set |
										      >	| Protection Profile                | of security requirements for a    |
										      >	| ([PP](#abbr_PP))                  | category of products.             |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Protection_Profile_Configur | A comprehensive set of security   |
										      >	| ation}                            | requirements for a product type   |
										      >	| Protection Profile Configuration  | that consists of at least one     |
										      >	| ([PP-Configuration](#abbr_PP-Conf | [Base-PP](#abbr_Base-PP) and at   |
										      >	| iguration))                       | least one                         |
										      >	| :::                               | [PP-Module](#abbr_PP-Module).     |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Protection_Profile_Module}  | An implementation-independent     |
										      >	| Protection Profile Module         | statement of security needs for a |
										      >	| ([PP-Module](#abbr_PP-Module))    | [TOE](#abbr_TOE) type             |
										      >	| :::                               | complementary to one or more Base |
										      >	|                                   | Protection Profiles.              |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Security_Assurance_Requirem | A requirement to assure the       |
										      >	| ent}                              | security of the [TOE](#abbr_TOE). |
										      >	| Security Assurance Requirement    |                                   |
										      >	| ([SAR](#abbr_SAR))                |                                   |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Security_Functional_Require | A requirement for security        |
										      >	| ment}                             | enforcement by the                |
										      >	| Security Functional Requirement   | [TOE](#abbr_TOE).                 |
										      >	| ([SFR](#abbr_SFR))                |                                   |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Security_Target}            | A set of implementation-dependent |
										      >	| Security Target ([ST](#abbr_ST))  | security requirements for a       |
										      >	| :::                               | specific product.                 |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#Target_of_Evaluation}       | The product under evaluation.     |
										      >	| Target of Evaluation              |                                   |
										      >	| ([TOE](#abbr_TOE))                |                                   |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#TOE_Security_Functionality} | The security functionality of the |
										      >	| [TOE](#abbr_TOE) Security         | product under evaluation.         |
										      >	| Functionality ([TSF](#abbr_TSF))  |                                   |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >	| ::: {#TOE_Summary_Specification}  | A description of how a            |
										      >	| [TOE](#abbr_TOE) Summary          | [TOE](#abbr_TOE) satisfies the    |
										      >	| Specification ([TSS](#abbr_TSS))  | SFRs in an [ST](#abbr_ST).        |
										      >	| :::                               |                                   |
										      >	+-----------------------------------+-----------------------------------+
										      >
										      >	### 1.2.2 Technical Terms {#tech-terms .indexable data-level="3"}

  ---------------------------------------------------------- ------------------------ |	+-----------------------------------+-----------------------------------+
  [Common Criteria (CC)]{#abbr_CC}                           Common Criteria for Info |	| ::: {#Certificate_Authority}      | Issuer of digital certificates    |
  [Package (Package)]{#abbr_Package}                         A named set of security  |	| Certificate Authority             |                                   |
  [Protection Profile (PP)]{#abbr_PP}                        An implementation-indepe |	| ([CA](#abbr_CA))                  |                                   |
  [Protection Profile Module (PP-Module)]{#abbr_PP-Module}   An extension of the secu |	| :::                               |                                   |
  [Security Target (ST)]{#abbr_ST}                           A set of implementation- |	+-----------------------------------+-----------------------------------+
  [Target of Evaluation (TOE)]{#abbr_TOE}                    The product under evalua |	| ::: {#Datagram_Transport_Layer_Se | Cryptographic network protocol,   |
  [TOE Security Functionality (TSF)]{#abbr_TSF}              The security functionali |	| curity}                           | based on [TLS](#abbr_TLS), which  |
  [TOE Summary Specification (TSS)]{#abbr_TSS}               A description of how a [ |	| Datagram Transport Layer Security | provides communications security  |
  [Security Functional Requirement (SFR)]{#abbr_SFR}         A requirement for securi |	| ([DTLS](#abbr_DTLS))              | for datagram protocols            |
  ---------------------------------------------------------- ------------------------ |	| :::                               |                                   |
										      |	+-----------------------------------+-----------------------------------+
### 1.2.2 Technology Terms {#techterms .indexable data-level="3"}		      |	| ::: {#Transport_Layer_Security}   | Cryptographic network protocol    |
										      |	| Transport Layer Security          | for providing communications      |
  -------------------------------------------------------- -------------------------- |	| ([TLS](#abbr_TLS))                | security over a                   |
  [Transport Layer Security (TLS)]{#abbr_TLS}              Cryptographic network prot |	| :::                               | [TCP](#abbr_TCP)/[IP](#abbr_IP)   |
  [Datagram Transport Layer Security (DTLS)]{#abbr_DTLS}   Cryptographic network prot |	|                                   | network                           |
  [Certificate Authority (CA)]{#abbr_CA}                   Issuer of digital certific |	+-----------------------------------+-----------------------------------+
  -------------------------------------------------------- -------------------------- <
										      <
1.3 Format of this Document {#docformat .indexable data-level="2"}		      <
---------------------------							      <
										      <
[Section 3 Security Requirements](#req){.dynref} contains baseline		      <
requirements which must be implemented in the product and included in		      <
any PP/PP-Module/ST that claims conformance to this				      <
Package[.](#ajq_23){#ajq_23} There are three other types of requirements	      <
that can be included in a PP/PP-Module/ST claiming conformance to this		      <
Package:									      <
										      <
-   [Appendix A - Optional Requirements](#optional){.dynref} contains		      <
    requirements that may optionally be included in the PP/PP-Module/ST,	      <
    but inclusion is at the discretion of the PP/PP-Module/ST			      <
    author[.](#ajq_24){#ajq_24} For requirements that have selections,		      <
    if the PP/PP-Module allows the selection (or the ST selects			      <
    particular selections), then there are additional requirements based	      <
    on these selections contained in this appendix that will need to be		      <
    included in the PP/PP-Module/ST[.](#ajq_25){#ajq_25}			      <
-   [Appendix B - Selection-Based Requirements](#sel-based){.dynref}		      <
    contains requirements based on selections in the requirements in		      <
    [Section 3 Security Requirements](#req){.dynref} or the			      <
    PP/PP-Module/ST: if certain selections are made, then the			      <
    corresponding requirements in that appendix must be				      <
    included[.](#ajq_26){#ajq_26}						      <
-   [Appendix C - Objective Requirements](#objective){.dynref} contains		      <
    requirements that will be included in the baseline requirements in		      <
    future versions of this package[.](#ajq_27){#ajq_27} Earlier		      <
    adoption by vendors is encouraged[.](#ajq_28){#ajq_28} Otherwise,		      <
    these are treated the same as Optional					      <
    Requirements[.](#ajq_29){#ajq_29}						      <

1.4 Compliant Targets of Evaluation {#TOEdescription .indexable data-level="2"}	      |	1.3 Compliant Targets of Evaluation {#Compliant_Targets_of_Evaluation .indexable data
-----------------------------------							-----------------------------------

The Target of Evaluation (TOE) in this Package is a product which acts		      |	The Target of Evaluation ([TOE](#abbr_TOE)) in this Package is a product
as a TLS client or server, or both[.](#ajq_30){#ajq_30} This Package		      |	which acts as a [TLS](#abbr_TLS) client or server, or both. This Package
describes the security functionality of TLS in terms of				      |	describes the security functionality of [TLS](#abbr_TLS) in terms of
[\[CC\]](#bibCC)[.](#ajq_31){#ajq_31}						      |	[\[CC\]](#bibCC).

The contents of this Package must be appropriately combined with a			The contents of this Package must be appropriately combined with a
[PP](#abbr_PP){.abbr} or							      |	[PP](#abbr_PP) or [PP-Module](#abbr_PP-Module). When this Package is
[PP-Module](#abbr_PP-Module){.abbr}[.](#ajq_32){#ajq_32} When this		      |	instantiated by a [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module), the
Package is instantiated by a PP or PP-Module, the Package must include		      |	Package must include selection-based requirements in accordance with the
selection-based requirements in accordance with the selections or		      |	selections or assignments indicated in the [PP](#abbr_PP) or
assignments indicated in the PP or PP-Module[.](#ajq_33){#ajq_33} These		      |	[PP-Module](#abbr_PP-Module). These may be expanded by the the
may be expanded by the the ST author[.](#ajq_34){#ajq_34}			      |	[ST](#abbr_ST) author.
										      |
The PP or PP-Module which instantiates this Package must typically		      |	The [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) which instantiates
include the following components in order to satisfy dependencies of		      |	this Package must typically include the following components in order to
this Package[.](#ajq_35){#ajq_35} It is the responsibility of the PP or		      |	satisfy dependencies of this Package. It is the responsibility of the
PP-Module author who instantiates this Package to ensure that dependence	      |	[PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) author who instantiates
on these components is satisfied:\						      |	this Package to ensure that dependence on these components is
										      |	satisfied:\
  Component          Explanation						      |
  ------------------ ---------------------------------------------------------------- |	  -----------------------------------------------------------------------------------
  FCS\_CKM.2         To support TLS ciphersuites that use RSA, DHE or ECDHE for key e |	  Component                             Explanation
  FCS\_COP.1         To support TLS ciphersuites that use AES for encryption/decrypti |	  ------------------------------------- ---------------------------------------------
  FCS\_RBG\_EXT.1    To support random bit generation needed for the TLS handshake, t |	  [FCS\_CKM.2](#FCS_CKM.2)              To support [TLS](#abbr_TLS) ciphersuites that
  FIA\_X509\_EXT.1   To support validation of certificates needed during TLS connecti |
  FIA\_X509\_EXT.2   To support the use of X509 certificates for authentication in TL |	  [FCS\_COP.1](#FCS_COP.1)              To support [TLS](#abbr_TLS) ciphersuites that
										      |
An ST must identify the applicable version of the [PP](#abbr_PP){.abbr}		      |	  [FCS\_RBG\_EXT.1](#FCS_RBG_EXT.1)     To support random bit generation needed for t
or [PP-Module](#abbr_PP-Module){.abbr} and this Package in its			      |
conformance claims[.](#ajq_42){#ajq_42}						      |	  [FIA\_X509\_EXT.1](#FIA_X509_EXT.1)   To support validation of certificates needed 
										      >
										      >	  [FIA\_X509\_EXT.2](#FIA_X509_EXT.2)   To support the use of X509 certificates for a
										      >	  -----------------------------------------------------------------------------------
										      >
										      >	An [ST](#abbr_ST) must identify the applicable version of the
										      >	[PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) and this Package in its
										      >	conformance claims.

2 Conformance Claims {#conf .indexable data-level="1"}				      |	2 Conformance Claims {#Conformance_Claims .indexable data-level="1"}
====================									====================

										      >	Conformance Statement
										      >	:   An [ST](#abbr_ST) must claim exact conformance to this Package, as
										      >	    defined in the [CC](#abbr_CC) and [CEM](#abbr_CEM) addenda for Exact
										      >	    Conformance, Selection-Based SFRs, and Optional SFRs (dated May
										      >	    2017).
										      >
										      >	CC Conformance Claims
										      >	:   This Package is conformant to Parts 2 (extended) and 3 (conformant)
										      >	    of Common Criteria Version 3.1, Revision 5.
										      >
										      >	PP Claim 
										      >	:   This Package does not claim conformance to any Protection Profile.
										      >
										      >	Package Claim
										      >	:   This Package does not claim conformance to any packages.
										      >
										      >	<!-- -->
										      >
										      >	Conformance Statement
:   This Package serves to provide Protection Profiles with additional			:   This Package serves to provide Protection Profiles with additional
    SFRs and associated Evaluation Activities specific to TLS clients		      |	    SFRs and associated Evaluation Activities specific to
    and servers[.](#ajq_43){#ajq_43}						      |	    [TLS](#abbr_TLS) clients and servers.
    This Package conforms to Common Criteria [\[CC\]](#bibCC) for			    This Package conforms to Common Criteria [\[CC\]](#bibCC) for
    Information Technology Security Evaluation, Version 3.1, Revision		      |	    Information Technology Security Evaluation, Version 3.1, Revision 5.
    5[.](#ajq_44){#ajq_44} It is CC Part 2 extended				      |	    It is [CC](#abbr_CC) Part 2 extended conformant.
    conformant[.](#ajq_45){#ajq_45}						      |	    In accordance with [CC](#abbr_CC) Part 1, dependencies are not
    In accordance with CC Part 1, dependencies are not included when		      |	    included when they are addressed by other SFRs. The evaluation
    they are addressed by other SFRs[.](#ajq_46){#ajq_46} The evaluation	      <
    activities provide adequate proof that any dependencies are also			    activities provide adequate proof that any dependencies are also
    satisfied[.](#ajq_47){#ajq_47}						      |	    satisfied.
										      <
3 Security Requirements {#req .indexable data-level="1"}			      <
=======================								      <

This chapter describes the security requirements to be fulfilled by the		      |	3 Security Functional Requirements {#Security_Functional_Requirements .indexable data
product[.](#ajq_48){#ajq_48} Those requirements comprise functional		      |	==================================
components from Part 2 of [\[CC\]](#bibCC)[.](#ajq_49){#ajq_49} The		      <
following notations are used:							      <

										      >	This chapter describes the security requirements which have to be
										      >	fulfilled by the product under evaluation. Those requirements comprise
										      >	functional components from Part 2 of [\[CC\]](#bibCC). The following
										      >	conventions are used for the completion of operations:
										      >
										      >	-   **Refinement** operation (denoted by **bold text** or
										      >	    ~~strikethrough text~~): is used to add details to a requirement
										      >	    (including replacing an assignment with a more restrictive
										      >	    selection) or to remove part of the requirement that is made
										      >	    irrelevant through the completion of another operation, and thus
										      >	    further restricts a requirement.
-   **Selection** (denoted by *italicized text*): is used to select one			-   **Selection** (denoted by *italicized text*): is used to select one
    or more options provided by the \[CC\] in stating a				      |	    or more options provided by the \[[CC](#abbr_CC)\] in stating a
    requirement[.](#ajq_50){#ajq_50}						      |	    requirement.
-   **Assignment** operation (denoted by [italicized					-   **Assignment** operation (denoted by [italicized
    text]{.assignable-content}): is used to assign a specific value to			    text]{.assignable-content}): is used to assign a specific value to
    an unspecified parameter, such as the length of a				      |	    an unspecified parameter, such as the length of a password. Showing
    password[.](#ajq_51){#ajq_51} Showing the value in square brackets		      |	    the value in square brackets indicates assignment.
    indicates assignment[.](#ajq_52){#ajq_52}					      |	-   **Iteration** operation: is indicated by appending the
-   **Iteration** operation: are identified with a number inside		      |	    [SFR](#abbr_SFR) name with a slash and unique identifier suggesting
    parentheses (e.g[.](#ajq_53){#ajq_53} \"(1)\")[.](#ajq_54){#ajq_54}		      |	    the purpose of the operation, e.g. \"/EXAMPLE1.\"
										      |
3.1 Security Functional Requirements {#SFRs .indexable data-level="2"}		      |	3.1 Auditable Events for Mandatory SFRs {#ss-audit-table .indexable data-level="2"}
------------------------------------						      |	---------------------------------------
										      |
The Security Functional Requirements included in this section are		      |	The auditable events specified in this Functional Package are included
derived from Part 2 of the Common Criteria for Information Technology		      |	in a Security Target if the incorporating [PP](#abbr_PP) or
Security Evaluation, Version 3.1, Revision 5, with additional extended		      |	[PP-Module](#abbr_PP-Module) supports audit event reporting through
functional components[.](#ajq_55){#ajq_55}					      |	FAU\_GEN.1 and all other criteria in the incorporating [PP](#abbr_PP) or
										      >	[PP-Module](#abbr_PP-Module) are met.
										      >
										      >	  Requirement                         Auditable Events       Additional Audit Record 
										      >	  ----------------------------------- ---------------------- ------------------------
										      >	  [FCS\_TLS\_EXT.1](#FCS_TLS_EXT.1)   No events specified.   N/A
										      >
										      >	  : [Table [1]{.counter}]{#t-audit-mandatory .ctr
										      >	  data-myid="t-audit-mandatory" data-counter-type="ct-Table"}: Auditable
										      >	  Events for Mandatory Requirements

### 3.1.1 Cryptographic Support (FCS) {#fcs .indexable data-level="3"}		      |	3.2 Cryptographic Support (FCS) {#fcs .indexable data-level="2"}
										      >	-------------------------------

::: {#FCS_TLS_EXT.1 .comp}								::: {#FCS_TLS_EXT.1 .comp}
#### FCS\_TLS\_EXT.1 TLS Protocol							#### FCS\_TLS\_EXT.1 TLS Protocol

::: {.element}										::: {.element}
::: {#FCS_TLS_EXT.1.1 .reqid}								::: {#FCS_TLS_EXT.1.1 .reqid}
[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1){.abbr}						[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall implement \[**selection**:						The product shall implement \[**selection**:

-   *TLS as a client*,								      |	-   *[TLS](#abbr_TLS) as a client*,
-   *TLS as a server*,								      |	-   *[TLS](#abbr_TLS) as a server*,
-   *DTLS as a client*,								      |	-   *[DTLS](#abbr_DTLS) as a client*,
-   *DTLS as a server*								      |	-   *[DTLS](#abbr_DTLS) as a server*
										      |
\][.](#ajq_56){#ajq_56}								      |	\].
										      |
::: {.appnote}									      |	::: {.appnote}
[Application Note: ]{.note-header}[ If *TLS as a client* is selected,		      |	[Application Note: ]{.note-header}[ If *[TLS](#abbr_TLS) as a client* is
then the ST must include the requirements from					      |	selected, then the [ST](#abbr_ST) must include the requirements from
[FCS\_TLSC\_EXT.1](#FCS_TLSC_EXT.1){.linkref}[.](#ajq_57){#ajq_57}\		      |	[FCS\_TLSC\_EXT.1](#FCS_TLSC_EXT.1).\
If *TLS as a server* is selected, then the ST must include the			      |	If *[TLS](#abbr_TLS) as a server* is selected, then the [ST](#abbr_ST)
requirements from								      |	must include the requirements from [FCS\_TLSS\_EXT.1](#FCS_TLSS_EXT.1).\
[FCS\_TLSS\_EXT.1](#FCS_TLSS_EXT.1){.linkref}[.](#ajq_58){#ajq_58}\		      |	\
\										      |	If *[DTLS](#abbr_DTLS) as a client* is selected, then the [ST](#abbr_ST)
If *DTLS as a client* is selected, then the ST must include the			      |	must include the requirements from
requirements from								      |	[FCS\_DTLSC\_EXT.1](#FCS_DTLSC_EXT.1).\
[FCS\_DTLSC\_EXT.1](#FCS_DTLSC_EXT.1){.linkref}[.](#ajq_59){#ajq_59}\		      |	If *[DTLS](#abbr_DTLS) as a server* is selected, then the [ST](#abbr_ST)
If *DTLS as a server* is selected, then the ST must include the			      |	must include the requirements from
requirements from								      |	[FCS\_DTLSS\_EXT.1](#FCS_DTLSS_EXT.1). ]{.note}
[FCS\_DTLSS\_EXT.1](#FCS_DTLSS_EXT.1){.linkref}[.](#ajq_60){#ajq_60}		      |	:::
]{.note}									      |	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLS\_EXT.1](#FCS_TLS_EXT.1)
										      >	:::

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall ensure that the selections indicated in the ST are		      |	The evaluator shall ensure that the selections indicated in the
consistent with selections in the dependent					      |	[ST](#abbr_ST) are consistent with selections in the dependent
components[.](#ajq_61){#ajq_61}							      |	components.
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	Appendix A - Optional Requirements {#opt-app .indexable data-level="A"}
										      >	==================================
										      >
										      >	As indicated in the introduction to this Package, the baseline
										      >	requirements (those that must be performed by the [TOE](#abbr_TOE)) are
										      >	contained in the body of this Package. This appendix contains three
										      >	other types of optional requirements that may be included in the
										      >	[ST](#abbr_ST), but are not required in order to conform to this
										      >	Package. However, applied modules, packages and/or use cases may refine
										      >	specific requirements as mandatory.\
										      >	\
										      >	The first type ([A.1 Strictly Optional
										      >	Requirements](#optional-reqs){.dynref}) are strictly optional
										      >	requirements that are independent of the [TOE](#abbr_TOE) implementing
										      >	any function. If the [TOE](#abbr_TOE) fulfills any of these requirements
										      >	or supports a certain functionality, the vendor is encouraged to include
										      >	the SFRs in the [ST](#abbr_ST), but are not required in order to conform
										      >	to this Package.\
										      >	\
										      >	The second type ([A.2 Objective Requirements](#objective-reqs){.dynref})
										      >	are objective requirements that describe security functionality not yet
										      >	widely available in commercial technology. The requirements are not
										      >	currently mandated in the body of this Package, but will be included in
										      >	the baseline requirements in future versions of this Package. Adoption
										      >	by vendors is encouraged and expected as soon as possible.\
										      >	\
										      >	The third type ([A.3 Implementation-Based
										      >	Requirements](#feat-based-reqs){.dynref}) are dependent on the
										      >	[TOE](#abbr_TOE) implementing a particular function. If the
										      >	[TOE](#abbr_TOE) fulfills any of these requirements, the vendor must
										      >	either add the related [SFR](#abbr_SFR) or disable the functionality for
										      >	the evaluated configuration.
										      >
										      >	A.1 Strictly Optional Requirements {#optional-reqs .indexable data-level="2"}
										      >	----------------------------------
										      >
										      >	This Package does not define any Strictly Optional requirements.
										      >
										      >	A.2 Objective Requirements {#objective-reqs .indexable data-level="2"}
										      >	--------------------------
										      >
										      >	### A.2.1 Auditable Events for Objective Requirements {#objective-reqs-audit .indexab
										      >
										      >	The auditable events in the table below are included in a Security
										      >	Target if both the associated requirement is included and the
										      >	incorporating [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) supports
										      >	audit event reporting through FAU\_GEN.1 and any other criteria in the
										      >	incorporating [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) are met.
										      >
										      >	  Requirement                           Auditable Events       Additional Audit Recor
										      >	  ------------------------------------- ---------------------- ----------------------
										      >	  [FCS\_TLSC\_EXT.3](#FCS_TLSC_EXT.3)   No events specified.   N/A
										      >	  [FCS\_TLSS\_EXT.3](#FCS_TLSS_EXT.3)   No events specified.   N/A
										      >
										      >	  : [Table [2]{.counter}]{#t-audit-objective .ctr
										      >	  data-myid="t-audit-objective" data-counter-type="ct-Table"}: Auditable
										      >	  Events for Objective Requirements
										      >
										      >	### A.2.2 Cryptographic Support (FCS) {#fcs-objective .indexable data-level="3"}
										      >
										      >	::: {#FCS_TLSC_EXT.3 .comp}
										      >	#### FCS\_TLSC\_EXT.3 TLS Client Support for Signature Algorithms Extension
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSC_EXT.3.1 .reqid}
										      >	[FCS\_TLSC\_EXT.3.1](#FCS_TLSC_EXT.3.1){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall present the signature\_algorithms extension in the
										      >	Client Hello with the supported\_signature\_algorithms value containing
										      >	the following hash algorithms: \[**selection**: *SHA256*, *SHA384*,
										      >	*SHA512*\] and no other hash algorithms.
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[ This requirement limits the hashing
										      >	algorithms supported for the purpose of digital signature verification
										      >	by the client and limits the server to the supported hashes for the
										      >	purpose of digital signature generation by the server. The
										      >	signature\_algorithms extension is only supported by [TLS](#abbr_TLS)
										      >	1.2. ]{.note}
:::											:::
:::											:::
:::											:::
										      >
										      >	::: {.activity_pane .hide}
										      >	::: {.activity_pane_header}
										      >	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::
										      >
										      >	::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSC\_EXT.3](#FCS_TLSC_EXT.3)
:::											:::

Appendix A - Optional Requirements {#optional .indexable data-level="A"}	      |	::: {.eacategory}
==================================						      |	[TSS](#abbr_TSS)
										      >	:::
										      >
										      >	The evaluator shall verify that [TSS](#abbr_TSS) describes the
										      >	signature\_algorithm extension and whether the required behavior is
										      >	performed by default or may be configured.
										      >
										      >	::: {.eacategory}
										      >	Guidance
										      >	:::
										      >
										      >	If the [TSS](#abbr_TSS) indicates that the signature\_algorithm
										      >	extension must be configured to meet the requirement, the evaluator
										      >	shall verify that AGD guidance includes configuration of the
										      >	signature\_algorithm extension.
										      >
										      >	::: {.eacategory}
										      >	Tests
										      >	:::

There are currently no Optional Requirements in this				      |	The evaluator shall also perform the following tests:
Package[.](#ajq_62){#ajq_62}							      <

Appendix B - Selection-Based Requirements {#sel-based .indexable data-level="A"}      |	-   **Test 1:** The evaluator shall configure the server to send a
										      >	    certificate in the [TLS](#abbr_TLS) connection that is not supported
										      >	    according to the Client\'s HashAlgorithm enumeration within the
										      >	    signature\_algorithms extension (for example, send a certificate
										      >	    with a [SHA](#abbr_SHA)-1 signature). The evaluator shall verify
										      >	    that the product disconnects after receiving the server\'s
										      >	    Certificate handshake message.
										      >	-   **Test 2:** \[conditional\] If the client supports a
										      >	    [DHE](#abbr_DHE) or [ECDHE](#abbr_ECDHE) cipher suite, the evaluator
										      >	    shall configure the server to send a Key Exchange handshake message
										      >	    including a signature not supported according to the client\'s
										      >	    HashAlgorithm enumeration (for example, the server signed the Key
										      >	    Exchange parameters using a [SHA](#abbr_SHA)-1 signature). The
										      >	    evaluator shall verify that the product disconnects after receiving
										      >	    the server\'s Key Exchange handshake message.
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {#FCS_TLSS_EXT.3 .comp}
										      >	#### FCS\_TLSS\_EXT.3 TLS Server Support for Signature Algorithms Extension
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSS_EXT.3.1 .reqid}
										      >	[FCS\_TLSS\_EXT.3.1](#FCS_TLSS_EXT.3.1){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall present the HashAlgorithm enumeration in
										      >	supported\_signature\_algorithms in the Certificate Request with the
										      >	following hash algorithms: \[**selection**: *SHA256*, *SHA384*,
										      >	*SHA512*\] and no other hash algorithms.
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[ This requirement limits the hashing
										      >	algorithms supported for the purpose of digital signature verification
										      >	by the server and limits the client to the supported hashes for the
										      >	purpose of digital signature generation by the client. The
										      >	supported\_signature\_algorithms is only supported by [TLS](#abbr_TLS)
										      >	1.2. ]{.note}
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {.activity_pane .hide}
										      >	::: {.activity_pane_header}
										      >	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
										      >	:::
										      >
										      >	::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSS\_EXT.3](#FCS_TLSS_EXT.3)
										      >	:::
										      >
										      >	::: {.eacategory}
										      >	[TSS](#abbr_TSS)
										      >	:::
										      >
										      >	The evaluator shall verify that [TSS](#abbr_TSS) describes the
										      >	supported\_signature\_algorithms field of the Certificate Request and
										      >	whether the required behavior is performed by default or may be
										      >	configured.
										      >
										      >	::: {.eacategory}
										      >	Guidance
										      >	:::
										      >
										      >	If the [TSS](#abbr_TSS) indicates that the
										      >	supported\_signature\_algorithms field must be configured to meet the
										      >	requirement, the evaluator shall verify that AGD guidance includes
										      >	configuration of the supported\_signature\_algorithms field.
										      >
										      >	::: {.eacategory}
										      >	Tests
										      >	:::
										      >
										      >	The evaluator shall also perform the following test:\
										      >	The evaluator shall configure the server to send the
										      >	signature\_algorithms extension in the Certificate Request message
										      >	indicating that the hash algorithm used by the client's certificate is
										      >	not supported. The evaluator shall attempt a connection using that
										      >	client certificate and verify that the server denies the client's
										      >	connection.
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	A.3 Implementation-Based Requirements {#feat-based-reqs .indexable data-level="2"}
										      >	-------------------------------------
										      >
										      >	This Package does not define any Implementation-Based requirements.
										      >
										      >	Appendix B - Selection-Based Requirements {#sel-based-reqs .indexable data-level="A"}
=========================================						=========================================

As indicated in the introduction to this Package, this appendix lists		      |	As indicated in the introduction to this Package, the baseline
requirements that are activated based on selections made in the			      |	requirements (those that must be performed by the [TOE](#abbr_TOE) or
PP/PP-Module/ST or in other portions of this Package				      |	its underlying platform) are contained in the body of this Package.
itself[.](#ajq_63){#ajq_63}							      |	There are additional requirements based on selections in the body of the
										      >	Package: if certain selections are made, then additional requirements
										      >	below must be included.
										      >
										      >	B.1 Auditable Events for Selection-Based Requirements {#sel-based-reqs-audit .indexab
										      >	-----------------------------------------------------
										      >
										      >	The auditable events in the table below are included in a Security
										      >	Target if both the associated requirement is included and the
										      >	incorporating [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) supports
										      >	audit event reporting through FAU\_GEN.1 and any other criteria in the
										      >	incorporating [PP](#abbr_PP) or [PP-Module](#abbr_PP-Module) are met.
										      >
										      >	  -----------------------------------------------------------------------------------
										      >	  Requirement                             Auditable Events                           
										      >	  --------------------------------------- -------------------------------------------
										      >	  [FCS\_TLSC\_EXT.1](#FCS_TLSC_EXT.1)     **\[selection:** *Failure to establish a [T
										      >
										      >	  [FCS\_TLSC\_EXT.1](#FCS_TLSC_EXT.1)     **\[selection:** *Failure to verify present
										      >
										      >	  [FCS\_TLSC\_EXT.1](#FCS_TLSC_EXT.1)     **\[selection:** *Establishment/termination
										      >
										      >	  [FCS\_TLSC\_EXT.2](#FCS_TLSC_EXT.2)     No events specified.                       
										      >
										      >	  [FCS\_TLSC\_EXT.4](#FCS_TLSC_EXT.4)     No events specified.                       
										      >
										      >	  [FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5)     No events specified.                       
										      >
										      >	  [FCS\_TLSS\_EXT.1](#FCS_TLSS_EXT.1)     **\[selection:** *Failure to establish a [T
										      >
										      >	  [FCS\_TLSS\_EXT.2](#FCS_TLSS_EXT.2)     No events specified.                       
										      >
										      >	  [FCS\_TLSS\_EXT.4](#FCS_TLSS_EXT.4)     No events specified.                       
										      >
										      >	  [FCS\_DTLSC\_EXT.1](#FCS_DTLSC_EXT.1)   **\[selection:** *Failure of the certificat
										      >
										      >	  [FCS\_DTLSC\_EXT.2](#FCS_DTLSC_EXT.2)   No events specified.                       
										      >
										      >	  [FCS\_DTLSS\_EXT.1](#FCS_DTLSS_EXT.1)   **\[selection:** *Failure of the certificat
										      >
										      >	  [FCS\_DTLSS\_EXT.2](#FCS_DTLSS_EXT.2)   No events specified.                       
										      >	  -----------------------------------------------------------------------------------
										      >
										      >	  : [Table [3]{.counter}]{#t-audit-sel-based .ctr
										      >	  data-myid="t-audit-sel-based" data-counter-type="ct-Table"}: Auditable
										      >	  Events for Selection-based Requirements
										      >
										      >	B.2 Cryptographic Support (FCS) {#fcs-sel-based .indexable data-level="2"}
										      >	-------------------------------

::: {#FCS_TLSC_EXT.1 .comp}								::: {#FCS_TLSC_EXT.1 .comp}
#### FCS\_TLSC\_EXT.1 TLS Client Protocol						#### FCS\_TLSC\_EXT.1 TLS Client Protocol

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1)***[.](#ajq_64){#ajq_64}***		      |	selection in [FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSC_EXT.1.1 .reqid}								::: {#FCS_TLSC_EXT.1.1 .reqid}
[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1){.abbr}						[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall implement TLS 1.2 (RFC 5246) and \[**selection**: *TLS	      |	The product shall implement [TLS](#abbr_TLS) 1.2 ([RFC](#abbr_RFC) 5246)
1.1 (RFC 4346)*, *no earlier TLS versions*\] as a client that supports		      |	and \[**selection**: *[TLS](#abbr_TLS) 1.1 ([RFC](#abbr_RFC) 4346)*, *no
the cipher suites \[**selection**:						      |	earlier [TLS](#abbr_TLS) versions*\] as a client that supports the
										      |	cipher suites \[**selection**:
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in RFC 5246*,		      |
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in [RFC](#abbr_RFC)
-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,		      |	    5246*,
-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5288*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5288*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*									      |	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*

\] and also supports functionality for \[**selection**:					\] and also supports functionality for \[**selection**:

-   *mutual authentication*,								-   *mutual authentication*,
-   *session renegotiation*,								-   *session renegotiation*,
-   *none*										-   *none*

\][.](#ajq_65){#ajq_65}								      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ The [ST](#abbr_ST){.abbr} author		      |	[Application Note: ]{.note-header}[ The [ST](#abbr_ST) author should
should select the cipher suites that are supported, and must select at		      |	select the cipher suites that are supported, and must select at least
least one cipher suite[.](#ajq_66){#ajq_66} The cipher suites to be		      |	one cipher suite. The cipher suites to be tested in the evaluated
tested in the evaluated configuration are limited by this			      |	configuration are limited by this requirement. However, this requirement
requirement[.](#ajq_67){#ajq_67} However, this requirement does not		      |	does not restrict the [TOE](#abbr_TOE)\'s ability to propose additional
restrict the TOE\'s ability to propose additional cipher suites beyond		      |	cipher suites beyond the ones listed in this requirement in its Client
the ones listed in this requirement in its Client Hello				      |	Hello message. That is, the [TOE](#abbr_TOE) may propose any cipher
message[.](#ajq_68){#ajq_68} That is, the TOE may propose any cipher		      <
suite but the evaluation will only test cipher suites from the above			suite but the evaluation will only test cipher suites from the above
list[.](#ajq_69){#ajq_69} It is necessary to limit the cipher suites		      |	list. It is necessary to limit the cipher suites that can be used in an
that can be used in an evaluated configuration administratively on the		      |	evaluated configuration administratively on the server in the test
server in the test environment[.](#ajq_70){#ajq_70} GCM cipher suites		      |	environment. [GCM](#abbr_GCM) cipher suites are preferred over
are preferred over CBC cipher suites, ECDHE preferred over RSA and DHE,		      |	[CBC](#abbr_CBC) cipher suites, [ECDHE](#abbr_ECDHE) preferred over
and SHA256 or SHA384 over SHA[.](#ajq_71){#ajq_71}\				      |	[RSA](#abbr_RSA) and [DHE](#abbr_DHE), and SHA256 or SHA384 over
										      >	[SHA](#abbr_SHA).\
\											\
TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA is not required despite being			TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA is not required despite being
mandated by RFC 5246[.](#ajq_72){#ajq_72}\					      |	mandated by [RFC](#abbr_RFC) 5246.\
										      >	\
										      >	These requirements will be revisited as new [TLS](#abbr_TLS) versions
										      >	are standardized by the [IETF](#abbr_IETF).\
										      >	\
										      >	If any [ECDHE](#abbr_ECDHE) or [DHE](#abbr_DHE) cipher suites are
										      >	selected, then [FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5) is required.\
										      >	\
										      >	If *mutual authentication* is selected, then the [ST](#abbr_ST) must
										      >	additionally include the requirements from
										      >	[FCS\_TLSC\_EXT.2](#FCS_TLSC_EXT.2). If the [TOE](#abbr_TOE) implements
										      >	mutual authentication, this selection must be made.\
\											\
These requirements will be revisited as new TLS versions are			      |	If *session renegotiation* is selected, then the [ST](#abbr_ST) must
standardized by the IETF[.](#ajq_73){#ajq_73}\					      |	additionally include the requirements from
										      >	[FCS\_TLSC\_EXT.4](#FCS_TLSC_EXT.4). If the [TOE](#abbr_TOE) implements
										      >	session renegotiation, this selection must be made. ]{.note}
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSC_EXT.1.2 .reqid}
										      >	[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall verify that the presented identifier matches the
										      >	reference identifier according to [RFC](#abbr_RFC) 6125.
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[ The rules for verification of
										      >	identity are described in Section 6 of [RFC](#abbr_RFC) 6125. The
										      >	reference identifier is established by the user (e.g. entering a
										      >	[URL](#abbr_URL) into a web browser or clicking a link), by
										      >	configuration (e.g. configuring the name of a mail server or
										      >	authentication server), or by an application (e.g. a parameter of an
										      >	API) depending on the product service. Based on a singular reference
										      >	identifier's source domain and application service type (e.g.
										      >	[HTTP](#abbr_HTTP), [SIP](#abbr_SIP), [LDAP](#abbr_LDAP)), the client
										      >	establishes all reference identifiers which are acceptable, such as a
										      >	Common Name for the Subject Name field of the certificate and a
										      >	(case-insensitive) [DNS](#abbr_DNS) name, [URI](#abbr_URI) name, and
										      >	Service Name for the Subject Alternative Name field. The client then
										      >	compares this list of all acceptable reference identifiers to the
										      >	presented identifiers in the [TLS](#abbr_TLS) server's certificate.
										      >	]{.note}
										      >
										      >	The preferred method for verification is the Subject Alternative Name
										      >	using [DNS](#abbr_DNS) names, [URI](#abbr_URI) names, or Service Names.
										      >	Verification using the Common Name for the purposes of backwards
										      >	compatibility is optional. Additionally, support for use of
										      >	[IP](#abbr_IP) addresses in the Subject Name or Subject Alternative name
										      >	is discouraged, as against best practices, but may be implemented.
										      >	Finally, the client should avoid constructing reference identifiers
										      >	using wildcards. However, if the presented identifiers include
										      >	wildcards, the client must follow the best practices regarding matching;
										      >	these best practices are captured in the evaluation activity.
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSC_EXT.1.3 .reqid}
										      >	[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall not establish a trusted channel if the server
										      >	certificate is invalid \[**selection**:
										      >
										      >	-   *with no exceptions*,
										      >	-   *except when override is authorized*
										      >
										      >	\].
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[Validity is determined by the
										      >	identifier verification, certificate path, the expiration date, and the
										      >	revocation status in accordance with [RFC](#abbr_RFC) 5280. Certificate
										      >	validity shall be tested in accordance with testing performed for
										      >	[FIA\_X509\_EXT.1](#FIA_X509_EXT.1) as defined in any [PP](#abbr_PP) or
										      >	[PP-Module](#abbr_PP-Module) which instantiates this Package.\
\											\
If any ECDHE or DHE cipher suites are selected, then				      |	The selection that permits override for invalid certificates should be
[FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5){.linkref} is				      |	interpreted as follows: ]{.note}
required[.](#ajq_74){#ajq_74}\							      |
\										      |	-   explicit administrator or user action is needed to authorize the
If *mutual authentication* is selected, then the ST must additionally		      |	    override, on a per-certificate basis
include the requirements from							      |	-   override may be sought or granted at any time, though this typically
[FCS\_TLSC\_EXT.2](#FCS_TLSC_EXT.2){.linkref}[.](#ajq_75){#ajq_75} If		      |	    occurs when an invalid certificate is presented during connection
the TOE implements mutual authentication, this selection must be		      |	    setup
made[.](#ajq_76){#ajq_76}\							      |	-   override decisions may be stored and then consulted later, to permit
\										      |	    connections using these otherwise-invalid certificates to establish
If *session renegotiation* is selected, then the ST must additionally		      |	    trusted channels without user or administrator action
include the requirements from							      |
[FCS\_TLSC\_EXT.4](#FCS_TLSC_EXT.4){.linkref}[.](#ajq_77){#ajq_77} If		      |	As indicated in [Section 1.3 Compliant Targets of
the TOE implements session renegotiation, this selection must be		      |	Evaluation](#Compliant_Targets_of_Evaluation){.dynref}, note that a
made[.](#ajq_78){#ajq_78} ]{.note}						      |	[PP](#abbr_PP) author may instantiate this [SFR](#abbr_SFR) using only
										      >	the first selection, preventing the ability to allow overrides.
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.element-activity-header}
										      >	[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall check the description of the implementation of this			The evaluator shall check the description of the implementation of this
protocol in the [TSS](#abbr_TSS){.abbr} to ensure that the cipher suites	      |	protocol in the [TSS](#abbr_TSS) to ensure that the cipher suites
supported are specified[.](#ajq_79){#ajq_79} The evaluator shall check		      |	supported are specified. The evaluator shall check the [TSS](#abbr_TSS)
the [TSS](#abbr_TSS){.abbr} to ensure that the cipher suites specified		      |	to ensure that the cipher suites specified include those listed for this
include those listed for this component[.](#ajq_80){#ajq_80}			      |	component.\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall also check the operational guidance to ensure that			The evaluator shall also check the operational guidance to ensure that
it contains instructions on configuring the product so that TLS conforms	      |	it contains instructions on configuring the product so that
to the description in the [TSS](#abbr_TSS){.abbr}[.](#ajq_81){#ajq_81}		      |	[TLS](#abbr_TLS) conforms to the description in the [TSS](#abbr_TSS).\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall also perform the following tests:					The evaluator shall also perform the following tests:

-   **Test 1:** The evaluator shall establish a TLS connection using		      |	-   **Test 1:** The evaluator shall establish a [TLS](#abbr_TLS)
    each of the cipher suites specified by the					      |	    connection using each of the cipher suites specified by the
    requirement[.](#ajq_82){#ajq_82} This connection may be established		      |	    requirement. This connection may be established as part of the
    as part of the establishment of a higher-level protocol, e.g., as		      |	    establishment of a higher-level protocol, e.g., as part of an
    part of an EAP session[.](#ajq_83){#ajq_83} It is sufficient to		      |	    [EAP](#abbr_EAP) session. It is sufficient to observe the successful
    observe the successful negotiation of a cipher suite to satisfy the		      |	    negotiation of a cipher suite to satisfy the intent of the test; it
    intent of the test; it is not necessary to examine the			      |	    is not necessary to examine the characteristics of the encrypted
    characteristics of the encrypted traffic in an attempt to discern		      |	    traffic in an attempt to discern the cipher suite being used (for
    the cipher suite being used (for example, that the cryptographic		      |	    example, that the cryptographic algorithm is 128-bit
    algorithm is 128-bit AES and not 256-bit AES)[.](#ajq_84){#ajq_84}		      |	    [AES](#abbr_AES) and not 256-bit [AES](#abbr_AES)).
-   **Test 2:** The goal of the following test is to verify that the TOE	      |	-   **Test 2:** The goal of the following test is to verify that the
    accepts only certificates with appropriate values in the			      |	    [TOE](#abbr_TOE) accepts only certificates with appropriate values
    extendedKeyUsage extension, and implicitly that the TOE correctly		      |	    in the extendedKeyUsage extension, and implicitly that the
    parses the extendedKeyUsage extension as part of X.509v3 server		      |	    [TOE](#abbr_TOE) correctly parses the extendedKeyUsage extension as
    certificate validation[.](#ajq_85){#ajq_85}\				      |	    part of X.509v3 server certificate validation.\
    \											    \
    The evaluator shall attempt to establish the connection using a			    The evaluator shall attempt to establish the connection using a
    server with a server certificate that contains the Server				    server with a server certificate that contains the Server
    Authentication purpose in the extendedKeyUsage extension and verify			    Authentication purpose in the extendedKeyUsage extension and verify
    that a connection is established[.](#ajq_86){#ajq_86} The evaluator		      |	    that a connection is established. The evaluator shall repeat this
    shall repeat this test using a different, but otherwise valid and		      |	    test using a different, but otherwise valid and trusted, certificate
    trusted, certificate that lacks the Server Authentication purpose in	      |	    that lacks the Server Authentication purpose in the extendedKeyUsage
    the extendedKeyUsage extension and ensure that a connection is not		      |	    extension and ensure that a connection is not established. Ideally,
    established[.](#ajq_87){#ajq_87} Ideally, the two certificates		      |	    the two certificates should be similar in structure, the types of
    should be similar in structure, the types of identifiers used, and		      |	    identifiers used, and the chain of trust.
    the chain of trust[.](#ajq_88){#ajq_88}					      |	-   **Test 3:** The evaluator shall send a server certificate in the
-   **Test 3:** The evaluator shall send a server certificate in the TLS	      |	    [TLS](#abbr_TLS) connection that does not match the server-selected
    connection that does not match the server-selected cipher suite (for	      |	    cipher suite (for example, send a [ECDSA](#abbr_ECDSA) certificate
    example, send a ECDSA certificate while using the				      |	    while using the TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA cipher suite or
    TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA cipher suite or send a RSA		      |	    send a [RSA](#abbr_RSA) certificate while using one of the
    certificate while using one of the ECDSA cipher suites.) The		      |	    [ECDSA](#abbr_ECDSA) cipher suites.) The evaluator shall verify that
    evaluator shall verify that the product disconnects after receiving		      |	    the product disconnects after receiving the server's Certificate
    the server's Certificate handshake message[.](#ajq_89){#ajq_89}		      |	    handshake message.
-   **Test 4:** The evaluator shall configure the server to select the			-   **Test 4:** The evaluator shall configure the server to select the
    TLS\_NULL\_WITH\_NULL\_NULL cipher suite and verify that the client			    TLS\_NULL\_WITH\_NULL\_NULL cipher suite and verify that the client
    denies the connection[.](#ajq_90){#ajq_90}					      |	    denies the connection.
-   **Test 5:** The evaluator shall perform the following modifications			-   **Test 5:** The evaluator shall perform the following modifications
    to the traffic:									    to the traffic:
    -   **Test 5.1:** Change the TLS version selected by the server in		      |	    -   **Test 5.1:** Change the [TLS](#abbr_TLS) version selected by
        the Server Hello to an undefined TLS version (for example 1.5		      |	        the server in the Server Hello to an undefined [TLS](#abbr_TLS)
        represented by the two bytes 03 06) and verify that the client		      |	        version (for example 1.5 represented by the two bytes 03 06) and
        rejects the connection[.](#ajq_91){#ajq_91}				      |	        verify that the client rejects the connection.
    -   **Test 5.2:** Change the TLS version selected by the server in		      |	    -   **Test 5.2:** Change the [TLS](#abbr_TLS) version selected by
        the Server Hello to the most recent unsupported TLS version (for	      |	        the server in the Server Hello to the most recent unsupported
        example 1.1 represented by the two bytes 03 02) and verify that		      |	        [TLS](#abbr_TLS) version (for example 1.1 represented by the two
        the client rejects the connection[.](#ajq_92){#ajq_92}			      |	        bytes 03 02) and verify that the client rejects the connection.
    -   **Test 5.3:** \[conditional\] If DHE or ECDHE cipher suites are		      |	    -   **Test 5.3:** \[conditional\] If [DHE](#abbr_DHE) or
        supported, modify at least one byte in the server's nonce in the	      |	        [ECDHE](#abbr_ECDHE) cipher suites are supported, modify at
        Server Hello handshake message, and verify that the client does		      |	        least one byte in the server's nonce in the Server Hello
        not complete the handshake and no application data			      |	        handshake message, and verify that the client does not complete
        flows[.](#ajq_93){#ajq_93}						      |	        the handshake and no application data flows.
    -   **Test 5.4:** Modify the server's selected cipher suite in the			    -   **Test 5.4:** Modify the server's selected cipher suite in the
        Server Hello handshake message to be a cipher suite not				        Server Hello handshake message to be a cipher suite not
        presented in the Client Hello handshake					      |	        presented in the Client Hello handshake message. The evaluator
        message[.](#ajq_94){#ajq_94} The evaluator shall verify that the	      |	        shall verify that the client does not complete the handshake and
        client does not complete the handshake and no application data		      |	        no application data flows.
        flows[.](#ajq_95){#ajq_95}						      |	    -   **Test 5.5:** \[conditional\] If [DHE](#abbr_DHE) or
    -   **Test 5.5:** \[conditional\] If DHE or ECDHE cipher suites are		      |	        [ECDHE](#abbr_ECDHE) cipher suites are supported, modify the
        supported, modify the signature block in the server's Key		      |	        signature block in the server's Key Exchange handshake message,
        Exchange handshake message, and verify that the client does not		      |	        and verify that the client does not complete the handshake and
        complete the handshake and no application data				      |	        no application data flows. This test does not apply to cipher
        flows[.](#ajq_96){#ajq_96} This test does not apply to cipher		      |	        suites using [RSA](#abbr_RSA) key exchange. If a
        suites using RSA key exchange[.](#ajq_97){#ajq_97} If a TOE only	      |	        [TOE](#abbr_TOE) only supports [RSA](#abbr_RSA) key exchange in
        supports RSA key exchange in conjunction with TLS, then this		      |	        conjunction with [TLS](#abbr_TLS), then this test shall be
        test shall be omitted[.](#ajq_98){#ajq_98}				      |	        omitted.
    -   **Test 5.6:** Modify a byte in the Server Finished handshake			    -   **Test 5.6:** Modify a byte in the Server Finished handshake
        message, and verify that the client does not complete the			        message, and verify that the client does not complete the
        handshake and no application data flows[.](#ajq_99){#ajq_99}		      |	        handshake and no application data flows.
    -   **Test 5.7:** Send a message consisting of random bytes from the		    -   **Test 5.7:** Send a message consisting of random bytes from the
        server after the server has issued the Change Cipher Spec			        server after the server has issued the Change Cipher Spec
        message and verify that the client does not complete the			        message and verify that the client does not complete the
        handshake and no application data flows[.](#ajq_100){#ajq_100}		      |	        handshake and no application data flows. The message must still
        The message must still have a valid 5-byte record header in		      |	        have a valid 5-byte record header in order to ensure the message
        order to ensure the message will be parsed as				      |	        will be parsed as [TLS](#abbr_TLS).
        TLS[.](#ajq_101){#ajq_101}						      <
:::										      <
:::										      <
:::										      <
:::										      <
										      <
::: {.element}									      <
::: {#FCS_TLSC_EXT.1.2 .reqid}							      <
[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2){.abbr}					      <
:::										      <
										      <
::: {.reqdesc}									      <
The product shall verify that the presented identifier matches the		      <
reference identifier according to RFC 6125[.](#ajq_102){#ajq_102}		      <

::: {.appnote}									      |	\
[Application Note: ]{.note-header}[ The rules for verification of		      <
identity are described in Section 6 of RFC 6125[.](#ajq_103){#ajq_103}		      <
The reference identifier is established by the user				      <
(e.g[.](#ajq_104){#ajq_104} entering a URL into a web browser or		      <
clicking a link), by configuration (e.g[.](#ajq_105){#ajq_105}			      <
configuring the name of a mail server or authentication server), or by		      <
an application (e.g[.](#ajq_106){#ajq_106} a parameter of an API)		      <
depending on the product service[.](#ajq_107){#ajq_107} Based on a		      <
singular reference identifier's source domain and application service		      <
type (e.g[.](#ajq_108){#ajq_108} HTTP, SIP, LDAP), the client			      <
establishes all reference identifiers which are acceptable, such as a		      <
Common Name for the Subject Name field of the certificate and a			      <
(case-insensitive) DNS name, URI name, and Service Name for the Subject		      <
Alternative Name field[.](#ajq_109){#ajq_109} The client then compares		      <
this list of all acceptable reference identifiers to the presented		      <
identifiers in the TLS server's certificate[.](#ajq_110){#ajq_110}\		      <
The preferred method for verification is the Subject Alternative Name		      <
using DNS names, URI names, or Service Names[.](#ajq_111){#ajq_111}		      <
Verification using the Common Name for the purposes of backwards		      <
compatibility is optional[.](#ajq_112){#ajq_112} Additionally, support		      <
for use of IP addresses in the Subject Name or Subject Alternative name		      <
is discouraged, as against best practices, but may be				      <
implemented[.](#ajq_113){#ajq_113} Finally, the client should avoid		      <
constructing reference identifiers using					      <
wildcards[.](#ajq_114){#ajq_114} However, if the presented identifiers		      <
include wildcards, the client must follow the best practices regarding		      <
matching; these best practices are captured in the evaluation			      <
activity[.](#ajq_115){#ajq_115} ]{.note}					      <
:::										      <

::: {.activity_pane .hide}							      |	::: {.element-activity-header}
::: {.activity_pane_header}							      |	[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall ensure that the [TSS](#abbr_TSS){.abbr} describes		      |	The evaluator shall ensure that the [TSS](#abbr_TSS) describes the
the client's method of establishing all reference identifiers from the		      |	client's method of establishing all reference identifiers from the
application-configured reference identifier, including which types of			application-configured reference identifier, including which types of
reference identifiers are supported (e.g[.](#ajq_116){#ajq_116} Common		      |	reference identifiers are supported (e.g. Common Name, [DNS](#abbr_DNS)
Name, DNS Name, URI Name, Service Name, or other application-specific		      |	Name, [URI](#abbr_URI) Name, Service Name, or other application-specific
Subject Alternative Names) and whether IP addresses and wildcards are		      |	Subject Alternative Names) and whether [IP](#abbr_IP) addresses and
supported[.](#ajq_117){#ajq_117} The evaluator shall ensure that this		      |	wildcards are supported. The evaluator shall ensure that this
description identifies whether and the manner in which certificate			description identifies whether and the manner in which certificate
pinning is supported or used by the product[.](#ajq_118){#ajq_118}\		      |	pinning is supported or used by the product.\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall verify that the AGD guidance includes instructions			The evaluator shall verify that the AGD guidance includes instructions
for setting the reference identifier to be used for the purposes of			for setting the reference identifier to be used for the purposes of
certificate validation in TLS[.](#ajq_119){#ajq_119}\				      |	certificate validation in [TLS](#abbr_TLS).\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall configure the reference identifier according to the			The evaluator shall configure the reference identifier according to the
AGD guidance and perform the following tests during a TLS connection:		      |	AGD guidance and perform the following tests during a [TLS](#abbr_TLS)
										      >	connection:

-   **Test 1:** The evaluator shall present a server certificate that			-   **Test 1:** The evaluator shall present a server certificate that
    contains a CN that does not match the reference identifier and does		      |	    contains a [CN](#abbr_CN) that does not match the reference
    not contain the SAN extension[.](#ajq_120){#ajq_120} The evaluator		      |	    identifier and does not contain the [SAN](#abbr_SAN) extension. The
    shall verify that the connection fails[.](#ajq_121){#ajq_121}		      |	    evaluator shall verify that the connection fails.
    Note that some systems might require the presence of the SAN		      |	    Note that some systems might require the presence of the
    extension[.](#ajq_122){#ajq_122} In this case the connection would		      |	    [SAN](#abbr_SAN) extension. In this case the connection would still
    still fail but for the reason of the missing SAN extension instead		      |	    fail but for the reason of the missing [SAN](#abbr_SAN) extension
    of the mismatch of CN and reference						      |	    instead of the mismatch of [CN](#abbr_CN) and reference identifier.
    identifier[.](#ajq_123){#ajq_123} Both reasons are acceptable to		      |	    Both reasons are acceptable to pass Test 1.
    pass Test 1[.](#ajq_124){#ajq_124}						      <
-   **Test 2:** The evaluator shall present a server certificate that			-   **Test 2:** The evaluator shall present a server certificate that
    contains a CN that matches the reference identifier, contains the		      |	    contains a [CN](#abbr_CN) that matches the reference identifier,
    SAN extension, but does not contain an identifier in the SAN that		      |	    contains the [SAN](#abbr_SAN) extension, but does not contain an
    matches the reference identifier[.](#ajq_125){#ajq_125} The			      |	    identifier in the [SAN](#abbr_SAN) that matches the reference
    evaluator shall verify that the connection					      |	    identifier. The evaluator shall verify that the connection fails.
    fails[.](#ajq_126){#ajq_126} The evaluator shall repeat this test		      |	    The evaluator shall repeat this test for each supported
    for each supported SAN type[.](#ajq_127){#ajq_127}				      |	    [SAN](#abbr_SAN) type.
-   **Test 3:** \[conditional\] If the TOE does not mandate the presence	      |	-   **Test 3:** \[conditional\] If the [TOE](#abbr_TOE) does not mandate
    of the SAN extension, the evaluator shall present a server			      |	    the presence of the [SAN](#abbr_SAN) extension, the evaluator shall
    certificate that contains a CN that matches the reference identifier	      |	    present a server certificate that contains a [CN](#abbr_CN) that
    and does not contain the SAN extension[.](#ajq_128){#ajq_128} The		      |	    matches the reference identifier and does not contain the
    evaluator shall verify that the connection					      |	    [SAN](#abbr_SAN) extension. The evaluator shall verify that the
    succeeds[.](#ajq_129){#ajq_129} If the TOE does mandate the presence	      |	    connection succeeds. If the [TOE](#abbr_TOE) does mandate the
    of the SAN extension, this Test shall be					      |	    presence of the [SAN](#abbr_SAN) extension, this Test shall be
    omitted[.](#ajq_130){#ajq_130}						      |	    omitted.
-   **Test 4:** The evaluator shall present a server certificate that			-   **Test 4:** The evaluator shall present a server certificate that
    contains a CN that does not match the reference identifier but does		      |	    contains a [CN](#abbr_CN) that does not match the reference
    contain an identifier in the SAN that matches[.](#ajq_131){#ajq_131}	      |	    identifier but does contain an identifier in the [SAN](#abbr_SAN)
    The evaluator shall verify that the connection				      |	    that matches. The evaluator shall verify that the connection
    succeeds[.](#ajq_132){#ajq_132}						      |	    succeeds.
-   **Test 5:** The evaluator shall perform the following wildcard tests		-   **Test 5:** The evaluator shall perform the following wildcard tests
    with each supported type of reference					      |	    with each supported type of reference identifier. The support for
    identifier[.](#ajq_133){#ajq_133} The support for wildcards is		      |	    wildcards is intended to be optional. If wildcards are supported,
    intended to be optional[.](#ajq_134){#ajq_134} If wildcards are		      |	    the first, second, and third tests below shall be executed. If
    supported, the first, second, and third tests below shall be		      |	    wildcards are not supported, then the fourth test below shall be
    executed[.](#ajq_135){#ajq_135} If wildcards are not supported, then	      |	    executed.
    the fourth test below shall be executed[.](#ajq_136){#ajq_136}		      <
    -   **Test 5.1:** \[conditional\]: If wildcards are supported, the			    -   **Test 5.1:** \[conditional\]: If wildcards are supported, the
        evaluator shall present a server certificate containing a			        evaluator shall present a server certificate containing a
        wildcard that is not in the left-most label of the presented			        wildcard that is not in the left-most label of the presented
        identifier (e.g[.](#ajq_137){#ajq_137} foo.\*.example.com) and		      |	        identifier (e.g. foo.\*.example.com) and verify that the
        verify that the connection fails[.](#ajq_138){#ajq_138}			      |	        connection fails.
    -   **Test 5.2:** \[conditional\]: If wildcards are supported, the			    -   **Test 5.2:** \[conditional\]: If wildcards are supported, the
        evaluator shall present a server certificate containing a			        evaluator shall present a server certificate containing a
        wildcard in the left-most label but not preceding the public			        wildcard in the left-most label but not preceding the public
        suffix (e.g[.](#ajq_139){#ajq_139}					      |	        suffix (e.g. \*.example.com). The evaluator shall configure the
        \*.example.com)[.](#ajq_140){#ajq_140} The evaluator shall		      |	        reference identifier with a single left-most label (e.g.
        configure the reference identifier with a single left-most label	      |	        foo.example.com) and verify that the connection succeeds. The
        (e.g[.](#ajq_141){#ajq_141} foo.example.com) and verify that the	      |	        evaluator shall configure the reference identifier without a
        connection succeeds[.](#ajq_142){#ajq_142} The evaluator shall		      |	        left-most label as in the certificate (e.g. example.com) and
        configure the reference identifier without a left-most label as		      |	        verify that the connection fails. The evaluator shall configure
        in the certificate (e.g[.](#ajq_143){#ajq_143} example.com) and		      |	        the reference identifier with two left-most labels (e.g.
        verify that the connection fails[.](#ajq_144){#ajq_144} The		      |	        bar.foo.example.come) and verify that the connection fails.
        evaluator shall configure the reference identifier with two		      <
        left-most labels (e.g[.](#ajq_145){#ajq_145}				      <
        bar.foo.example.come) and verify that the connection			      <
        fails[.](#ajq_146){#ajq_146}						      <
    -   **Test 5.3:** \[conditional\]: If wildcards are supported, the			    -   **Test 5.3:** \[conditional\]: If wildcards are supported, the
        evaluator shall present a server certificate containing a			        evaluator shall present a server certificate containing a
        wildcard in the left-most label immediately preceding the public		        wildcard in the left-most label immediately preceding the public
        suffix (e.g[.](#ajq_147){#ajq_147}					      |	        suffix (e.g. \*.com). The evaluator shall configure the
        \*.com)[.](#ajq_148){#ajq_148} The evaluator shall configure the	      |	        reference identifier with a single left-most label (e.g.
        reference identifier with a single left-most label			      |	        foo.com) and verify that the connection fails. The evaluator
        (e.g[.](#ajq_149){#ajq_149} foo.com) and verify that the		      |	        shall configure the reference identifier with two left-most
        connection fails[.](#ajq_150){#ajq_150} The evaluator shall		      |	        labels (e.g. bar.foo.com) and verify that the connection fails.
        configure the reference identifier with two left-most labels		      <
        (e.g[.](#ajq_151){#ajq_151} bar.foo.com) and verify that the		      <
        connection fails[.](#ajq_152){#ajq_152}					      <
    -   **Test 5.4:** \[conditional\]: If wildcards are not supported,			    -   **Test 5.4:** \[conditional\]: If wildcards are not supported,
        the evaluator shall present a server certificate containing a			        the evaluator shall present a server certificate containing a
        wildcard in the left-most label (e.g[.](#ajq_153){#ajq_153}		      |	        wildcard in the left-most label (e.g. \*.example.com). The
        \*.example.com)[.](#ajq_154){#ajq_154} The evaluator shall		      |	        evaluator shall configure the reference identifier with a single
        configure the reference identifier with a single left-most label	      |	        left-most label (e.g. foo.example.com) and verify that the
        (e.g[.](#ajq_155){#ajq_155} foo.example.com) and verify that the	      |	        connection fails.
        connection fails[.](#ajq_156){#ajq_156}					      |	-   **Test 6:** \[conditional\] If [URI](#abbr_URI) or Service name
-   **Test 6:** \[conditional\] If URI or Service name reference		      |	    reference identifiers are supported, the evaluator shall configure
    identifiers are supported, the evaluator shall configure the DNS		      |	    the [DNS](#abbr_DNS) name and the service identifier. The evaluator
    name and the service identifier[.](#ajq_157){#ajq_157} The evaluator	      |	    shall present a server certificate containing the correct
    shall present a server certificate containing the correct DNS name		      |	    [DNS](#abbr_DNS) name and service identifier in the URIName or
    and service identifier in the URIName or SRVName fields of the SAN		      |	    SRVName fields of the [SAN](#abbr_SAN) and verify that the
    and verify that the connection succeeds[.](#ajq_158){#ajq_158} The		      |	    connection succeeds. The evaluator shall repeat this test with the
    evaluator shall repeat this test with the wrong service identifier		      |	    wrong service identifier (but correct [DNS](#abbr_DNS) name) and
    (but correct DNS name) and verify that the connection			      |	    verify that the connection fails.
    fails[.](#ajq_159){#ajq_159}						      <
-   **Test 7:** \[conditional\] If pinned certificates are supported the		-   **Test 7:** \[conditional\] If pinned certificates are supported the
    evaluator shall present a certificate that does not match the pinned		    evaluator shall present a certificate that does not match the pinned
    certificate and verify that the connection					      |	    certificate and verify that the connection fails.
    fails[.](#ajq_160){#ajq_160}						      <
:::										      <
:::										      <
:::										      <
:::										      <
										      <
::: {.element}									      <
::: {#FCS_TLSC_EXT.1.3 .reqid}							      <
[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3){.abbr}					      <
:::										      <
										      <
::: {.reqdesc}									      <
The product shall not establish a trusted channel if the server			      <
certificate is invalid \[**selection**:						      <
										      <
-   *with no exceptions*,							      <
-   *except when override is authorized*					      <
										      <
\][.](#ajq_161){#ajq_161}							      <

::: {.appnote}									      <
[Application Note: ]{.note-header}[Validity is determined by the		      <
identifier verification, certificate path, the expiration date, and the		      <
revocation status in accordance with RFC 5280[.](#ajq_162){#ajq_162}		      <
Certificate validity shall be tested in accordance with testing			      <
performed for [FIA\_X509\_EXT.1](#FIA_X509_EXT.1){.linkref} as defined		      <
in any PP or PP-Module which instantiates this					      <
Package[.](#ajq_163){#ajq_163}\							      <
\											\
The selection that permits override for invalid certificates should be		      <
interpreted as follows: ]{.note}						      <
										      <
-   explicit administrator or user action is needed to authorize the		      <
    override, on a per-certificate basis					      <
-   override may be sought or granted at any time, though this typically	      <
    occurs when an invalid certificate is presented during connection		      <
    setup									      <
-   override decisions may be stored and then consulted later, to permit	      <
    connections using these otherwise-invalid certificates to establish		      <
    trusted channels without user or administrator action			      <

As indicated in [Section 1.4 Compliant Targets of				      |	::: {.element-activity-header}
Evaluation](#TOEdescription){.dynref}, note that a PP author may		      |	[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3)
instantiate this SFR using only the first selection, preventing the		      <
ability to allow overrides[.](#ajq_164){#ajq_164}				      <
:::											:::

::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

If the selection for authorizing override of invalid certificates is			If the selection for authorizing override of invalid certificates is
made, then the evaluator shall ensure that the [TSS](#abbr_TSS){.abbr}		      |	made, then the evaluator shall ensure that the [TSS](#abbr_TSS) includes
includes a description of how and when user or administrator			      |	a description of how and when user or administrator authorization is
authorization is obtained[.](#ajq_165){#ajq_165} The evaluator shall		      |	obtained. The evaluator shall also ensure that the [TSS](#abbr_TSS)
also ensure that the TSS describes any mechanism for storing such		      |	describes any mechanism for storing such authorizations, such that
authorizations, such that future presentation of such otherwise-invalid		      |	future presentation of such otherwise-invalid certificates permits
certificates permits establishment of a trusted channel without user or		      |	establishment of a trusted channel without user or administrator
administrator action[.](#ajq_166){#ajq_166}					      |	action.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall demonstrate that using an invalid certificate			The evaluator shall demonstrate that using an invalid certificate
(unless excepted) results in the function failing as follows, unless			(unless excepted) results in the function failing as follows, unless
excepted:										excepted:

-   **Test 1:** The evaluator shall demonstrate that a server using a			-   **Test 1:** The evaluator shall demonstrate that a server using a
    certificate without a valid certification path results in an			    certificate without a valid certification path results in an
    authentication failure[.](#ajq_167){#ajq_167} Using the			      |	    authentication failure. Using the administrative guidance, the
    administrative guidance, the evaluator shall then load the trusted		      |	    evaluator shall then load the trusted [CA](#abbr_CA) certificate(s)
    CA certificate(s) needed to validate the server\'s certificate, and		      |	    needed to validate the server\'s certificate, and demonstrate that
    demonstrate that the connection succeeds[.](#ajq_168){#ajq_168} The		      |	    the connection succeeds. The evaluator then shall delete one of the
    evaluator then shall delete one of the CA certificates, and show		      |	    [CA](#abbr_CA) certificates, and show that the connection fails.
    that the connection fails[.](#ajq_169){#ajq_169}				      <
-   **Test 2:** The evaluator shall demonstrate that a server using a			-   **Test 2:** The evaluator shall demonstrate that a server using a
    certificate which has been revoked results in an authentication			    certificate which has been revoked results in an authentication
    failure[.](#ajq_170){#ajq_170}						      |	    failure.
-   **Test 3:** The evaluator shall demonstrate that a server using a			-   **Test 3:** The evaluator shall demonstrate that a server using a
    certificate which has passed its expiration date results in an			    certificate which has passed its expiration date results in an
    authentication failure[.](#ajq_171){#ajq_171}				      |	    authentication failure.
-   **Test 4:** The evaluator shall demonstrate that a server using a			-   **Test 4:** The evaluator shall demonstrate that a server using a
    certificate which does not have a valid identifier results in an			    certificate which does not have a valid identifier results in an
    authentication failure[.](#ajq_172){#ajq_172}				      |	    authentication failure.
:::										      |
:::										      |	\
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSC_EXT.2 .comp}								::: {#FCS_TLSC_EXT.2 .comp}
#### FCS\_TLSC\_EXT.2 TLS Client Support for Mutual Authentication			#### FCS\_TLSC\_EXT.2 TLS Client Support for Mutual Authentication

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1)***[.](#ajq_173){#ajq_173}***		      |	selection in [FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSC_EXT.2.1 .reqid}								::: {#FCS_TLSC_EXT.2.1 .reqid}
[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1){.abbr}						[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall support mutual authentication using X.509v3				The product shall support mutual authentication using X.509v3
certificates[.](#ajq_174){#ajq_174}						      |	certificates.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ The use of X.509v3 certificates for			[Application Note: ]{.note-header}[ The use of X.509v3 certificates for
TLS is addressed in								      |	[TLS](#abbr_TLS) is addressed in [FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1.
[FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref}[.](#ajq_175){#ajq_175}	      <
This requirement adds that a client must be capable of presenting a			This requirement adds that a client must be capable of presenting a
certificate to a TLS server for TLS mutual					      |	certificate to a [TLS](#abbr_TLS) server for [TLS](#abbr_TLS) mutual
authentication[.](#ajq_176){#ajq_176} Presenting a certificate is not		      |	authentication. Presenting a certificate is not mandatory in all
mandatory in all circumstances: it may depend on the configuration of		      |	circumstances: it may depend on the configuration of the client or other
the client or other factors[.](#ajq_177){#ajq_177} ]{.note}			      |	factors. ]{.note}
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSC\_EXT.2](#FCS_TLSC_EXT.2)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall ensure that the [TSS](#abbr_TSS){.abbr} description		      |	The evaluator shall ensure that the [TSS](#abbr_TSS) description
required per [FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref} includes		      |	required per [FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1 includes the use of
the use of client-side certificates for TLS mutual				      |	client-side certificates for [TLS](#abbr_TLS) mutual authentication. The
authentication[.](#ajq_178){#ajq_178} The evaluator shall also ensure		      |	evaluator shall also ensure that the [TSS](#abbr_TSS) describes any
that the [TSS](#abbr_TSS){.abbr} describes any factors beyond			      |	factors beyond configuration that are necessary in order for the client
configuration that are necessary in order for the client to engage in		      |	to engage in mutual authentication using X.509v3 certificates.\
mutual authentication using X.509v3 certificates[.](#ajq_179){#ajq_179}\	      <

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall ensure that the AGD guidance includes any				The evaluator shall ensure that the AGD guidance includes any
instructions necessary to configure the TOE to perform mutual			      |	instructions necessary to configure the [TOE](#abbr_TOE) to perform
authentication[.](#ajq_180){#ajq_180} The evaluator also shall verify		      |	mutual authentication. The evaluator also shall verify that the AGD
that the AGD guidance required per						      |	guidance required per [FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1 includes
[FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref} includes instructions		      |	instructions for configuring the client-side certificates for
for configuring the client-side certificates for TLS mutual			      |	[TLS](#abbr_TLS) mutual authentication.\
authentication[.](#ajq_181){#ajq_181}\						      <

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall also perform the following tests:					The evaluator shall also perform the following tests:

-   **Test 1:** The evaluator shall establish a connection to a server			-   **Test 1:** The evaluator shall establish a connection to a server
    that is not configured for mutual authentication				      |	    that is not configured for mutual authentication (i.e. does not send
    (i.e[.](#ajq_182){#ajq_182} does not send Server's Certificate		      |	    Server's Certificate Request (type 13) message). The evaluator
    Request (type 13) message)[.](#ajq_183){#ajq_183} The evaluator		      |	    observes negotiation of a [TLS](#abbr_TLS) channel and confirms that
    observes negotiation of a TLS channel and confirms that the TOE did		      |	    the [TOE](#abbr_TOE) did not send Client's Certificate message (type
    not send Client's Certificate message (type 11) during			      |	    11) during handshake.
    handshake[.](#ajq_184){#ajq_184}						      <
-   **Test 2:** The evaluator shall establish a connection to a server			-   **Test 2:** The evaluator shall establish a connection to a server
    with a shared trusted root that is configured for mutual				    with a shared trusted root that is configured for mutual
    authentication (i.e[.](#ajq_185){#ajq_185} it sends Server's		      |	    authentication (i.e. it sends Server's Certificate Request (type 13)
    Certificate Request (type 13) message)[.](#ajq_186){#ajq_186} The		      |	    message). The evaluator observes negotiation of a [TLS](#abbr_TLS)
    evaluator observes negotiation of a TLS channel and confirms that		      |	    channel and confirms that the [TOE](#abbr_TOE) responds with a
    the TOE responds with a non-empty Client's Certificate message		      |	    non-empty Client's Certificate message (type 11) and Certificate
    (type 11) and Certificate Verify (type 15)					      |	    Verify (type 15) message.
    message[.](#ajq_187){#ajq_187}						      <
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSC_EXT.4 .comp}								::: {#FCS_TLSC_EXT.4 .comp}
#### FCS\_TLSC\_EXT.4 TLS Client Support for Renegotiation				#### FCS\_TLSC\_EXT.4 TLS Client Support for Renegotiation

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1)***[.](#ajq_188){#ajq_188}***		      |	selection in [FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSC_EXT.4.1 .reqid}								::: {#FCS_TLSC_EXT.4.1 .reqid}
[FCS\_TLSC\_EXT.4.1](#FCS_TLSC_EXT.4.1){.abbr}						[FCS\_TLSC\_EXT.4.1](#FCS_TLSC_EXT.4.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall support secure renegotiation through use of the			The product shall support secure renegotiation through use of the
"renegotiation\_info" TLS extension in accordance with RFC			      |	"renegotiation\_info" [TLS](#abbr_TLS) extension in accordance with
5746[.](#ajq_189){#ajq_189}							      |	[RFC](#abbr_RFC) 5746.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ RFC 5746 defines an extension to TLS	      |	[Application Note: ]{.note-header}[ [RFC](#abbr_RFC) 5746 defines an
that binds renegotiation handshakes to the cryptography in the original		      |	extension to [TLS](#abbr_TLS) that binds renegotiation handshakes to the
handshake[.](#ajq_190){#ajq_190}\						      |	cryptography in the original handshake.\
\											\
Per RFC 5746, the client may present either the \"renegotiation\_info\"		      |	Per [RFC](#abbr_RFC) 5746, the client may present either the
extension or the signaling cipher suite value					      |	\"renegotiation\_info\" extension or the signaling cipher suite value
TLS\_EMPTY\_RENEGOTIATION\_INFO\_SCSV in the initial ClientHello message		TLS\_EMPTY\_RENEGOTIATION\_INFO\_SCSV in the initial ClientHello message
to indicate support for renegotiation[.](#ajq_191){#ajq_191} (A			      |	to indicate support for renegotiation. (A signaling cipher suite value
signaling cipher suite value (SCSV) is presented as a cipher suite, but		      |	([SCSV](#abbr_SCSV)) is presented as a cipher suite, but its only
its only purpose is to provide other information and not to advertise		      |	purpose is to provide other information and not to advertise support for
support for a cipher suite.) The TLS\_EMPTY\_RENEGOTIATION\_INFO\_SCSV		      |	a cipher suite.) The TLS\_EMPTY\_RENEGOTIATION\_INFO\_SCSV signaling
signaling cipher suite value exists as an alternative to presenting the		      |	cipher suite value exists as an alternative to presenting the
\"renegotation\_info\" extension so that TLS server implementations that	      |	\"renegotation\_info\" extension so that [TLS](#abbr_TLS) server
immediately terminate the connection when they encounter any extension		      |	implementations that immediately terminate the connection when they
they do not understand can still proceed with a					      |	encounter any extension they do not understand can still proceed with a
connection[.](#ajq_192){#ajq_192} The client may still choose to reject		      |	connection. The client may still choose to reject the connection later,
the connection later, if it insists upon renegotiation support and the		      |	if it insists upon renegotiation support and the server does not support
server does not support it[.](#ajq_193){#ajq_193} In any case, RFC 5746		      |	it. In any case, [RFC](#abbr_RFC) 5746 states that during any
states that during any renegotiation the \"renegotiation\_info\"		      |	renegotiation the \"renegotiation\_info\" extension must be presented by
extension must be presented by the peer initiating renegotiation, and so	      |	the peer initiating renegotiation, and so the client must support use of
the client must support use of this extension[.](#ajq_194){#ajq_194}		      |	this extension. ]{.note}
]{.note}									      |	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSC\_EXT.4](#FCS_TLSC_EXT.4)
										      >	:::

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the following tests:					The evaluator shall perform the following tests:

-   **Test 1:** The evaluator shall use a network packet				-   **Test 1:** The evaluator shall use a network packet
    analyzer/sniffer to capture the traffic between the two TLS			      |	    analyzer/sniffer to capture the traffic between the two
    endpoints[.](#ajq_195){#ajq_195} The evaluator shall verify that		      |	    [TLS](#abbr_TLS) endpoints. The evaluator shall verify that either
    either the "renegotiation\_info" field or the SCSV cipher suite is		      |	    the "renegotiation\_info" field or the [SCSV](#abbr_SCSV) cipher
    included in the ClientHello message during the initial			      |	    suite is included in the ClientHello message during the initial
    handshake[.](#ajq_196){#ajq_196}						      |	    handshake.
-   **Test 2:** The evaluator shall verify the Client's handling of			-   **Test 2:** The evaluator shall verify the Client's handling of
    ServerHello messages received during the initial handshake that			    ServerHello messages received during the initial handshake that
    include the "renegotiation\_info" extension[.](#ajq_197){#ajq_197}		      |	    include the "renegotiation\_info" extension. The evaluator shall
    The evaluator shall modify the length portion of this field in the		      |	    modify the length portion of this field in the ServerHello message
    ServerHello message to be non-zero and verify that the client sends		      |	    to be non-zero and verify that the client sends a failure and
    a failure and terminates the connection[.](#ajq_198){#ajq_198} The		      |	    terminates the connection. The evaluator shall verify that a
    evaluator shall verify that a properly formatted field results in a		      |	    properly formatted field results in a successful [TLS](#abbr_TLS)
    successful TLS connection[.](#ajq_199){#ajq_199}				      |	    connection.
-   **Test 3:** The evaluator shall verify that ServerHello messages			-   **Test 3:** The evaluator shall verify that ServerHello messages
    received during secure renegotiation contain the					    received during secure renegotiation contain the
    "renegotiation\_info" extension[.](#ajq_200){#ajq_200} The evaluator	      |	    "renegotiation\_info" extension. The evaluator shall modify either
    shall modify either the "client\_verify\_data" or				      |	    the "client\_verify\_data" or "server\_verify\_data" value and
    "server\_verify\_data" value and verify that the client terminates		      |	    verify that the client terminates the connection.
    the connection[.](#ajq_201){#ajq_201}					      <
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSC_EXT.5 .comp}								::: {#FCS_TLSC_EXT.5 .comp}
#### FCS\_TLSC\_EXT.5 TLS Client Support for Supported Groups Extension			#### FCS\_TLSC\_EXT.5 TLS Client Support for Supported Groups Extension

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1),***					      |	selection in [FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1),
***[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1)***[.](#ajq_202){#ajq_202}***	      |	[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSC_EXT.5.1 .reqid}								::: {#FCS_TLSC_EXT.5.1 .reqid}
[FCS\_TLSC\_EXT.5.1](#FCS_TLSC_EXT.5.1){.abbr}						[FCS\_TLSC\_EXT.5.1](#FCS_TLSC_EXT.5.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall present the Supported Groups Extension in the Client			The product shall present the Supported Groups Extension in the Client
Hello with the supported groups \[**selection**:					Hello with the supported groups \[**selection**:

-   *secp256r1*,									-   *secp256r1*,
-   *secp384r1*,									-   *secp384r1*,
-   *secp521r1*,									-   *secp521r1*,
-   *ffdhe2048(256)*,									-   *ffdhe2048(256)*,
-   *ffdhe3072(257)*,									-   *ffdhe3072(257)*,
-   *ffdhe4096(258)*,									-   *ffdhe4096(258)*,
-   *ffdhe6144(259)*,									-   *ffdhe6144(259)*,
-   *ffdhe8192(260)*									-   *ffdhe8192(260)*

\][.](#ajq_203){#ajq_203}							      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ If an elliptic curve or				[Application Note: ]{.note-header}[ If an elliptic curve or
Diffie-Hellman ciphersuite is selected in						Diffie-Hellman ciphersuite is selected in
[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1){.linkref} or				      |	[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1) or
[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1){.linkref}, then			      |	[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1), then
[FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5){.linkref} shall be included in the		      |	[FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5) shall be included in the
ST[.](#ajq_204){#ajq_204} This requirement does not limit the elliptic		      |	[ST](#abbr_ST). This requirement does not limit the elliptic curves the
curves the client may propose for authentication and key			      |	client may propose for authentication and key agreement. The Supported
agreement[.](#ajq_205){#ajq_205} The Supported Groups Extension was		      |	Groups Extension was previously referred to as the Supported Elliptic
previously referred to as the Supported Elliptic Curves Extension and is	      |	Curves Extension and is described in [RFC](#abbr_RFC) 7919.]{.note}
described in RFC 7919[.](#ajq_206){#ajq_206} ]{.note}				      |	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall verify that [TSS](#abbr_TSS){.abbr} describes the		      |	The evaluator shall verify that [TSS](#abbr_TSS) describes the Supported
Supported Groups Extension[.](#ajq_207){#ajq_207}				      |	Groups Extension.

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall also perform the following test:\					The evaluator shall also perform the following test:\

-   **Test 1:** The evaluator shall configure a server to perform key			-   **Test 1:** The evaluator shall configure a server to perform key
    exchange using each of the TOE's supported curves and/or			      |	    exchange using each of the [TOE](#abbr_TOE)'s supported curves
    groups[.](#ajq_208){#ajq_208} The evaluator shall verify that the		      |	    and/or groups. The evaluator shall verify that the [TOE](#abbr_TOE)
    TOE successfully connects to the server[.](#ajq_209){#ajq_209}		      |	    successfully connects to the server.
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSS_EXT.1 .comp}								::: {#FCS_TLSS_EXT.1 .comp}
#### FCS\_TLSS\_EXT.1 TLS Server Protocol						#### FCS\_TLSS\_EXT.1 TLS Server Protocol

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1)***[.](#ajq_210){#ajq_210}***		      |	selection in [FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.1.1 .reqid}								::: {#FCS_TLSS_EXT.1.1 .reqid}
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.abbr}						[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall implement TLS 1.2 (RFC 5246) and \[**selection**: *TLS	      |	The product shall implement [TLS](#abbr_TLS) 1.2 ([RFC](#abbr_RFC) 5246)
1.1 (RFC 4346)*, *no earlier TLS versions*\] as a server that supports		      |	and \[**selection**: *[TLS](#abbr_TLS) 1.1 ([RFC](#abbr_RFC) 4346)*, *no
the cipher suites \[**selection**:						      |	earlier [TLS](#abbr_TLS) versions*\] as a server that supports the
										      |	cipher suites \[**selection**:
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in RFC 5246*,		      |
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in [RFC](#abbr_RFC)
-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,		      |	    5246*,
-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5288*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5288*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
    5289*,									      |	    [RFC](#abbr_RFC) 5289*,
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
    5289*									      |	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*

\] and no other cipher suites, and also supports functionality for			\] and no other cipher suites, and also supports functionality for
\[**selection**:									\[**selection**:

-   *mutual authentication*,								-   *mutual authentication*,
-   *session renegotiation*,								-   *session renegotiation*,
-   *none*										-   *none*

\][.](#ajq_211){#ajq_211}							      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ The [ST](#abbr_ST){.abbr} author		      |	[Application Note: ]{.note-header}[ The [ST](#abbr_ST) author should
should select the cipher suites that are supported, and must select at		      |	select the cipher suites that are supported, and must select at least
least one cipher suite[.](#ajq_212){#ajq_212} It is necessary to limit		      |	one cipher suite. It is necessary to limit the cipher suites that can be
the cipher suites that can be used in an evaluated configuration		      |	used in an evaluated configuration administratively on the server in the
administratively on the server in the test					      |	test environment. If administrative steps need to be taken so that the
environment[.](#ajq_213){#ajq_213} If administrative steps need to be		      |	cipher suites negotiated by the implementation are limited to those in
taken so that the cipher suites negotiated by the implementation are		      |	this requirement, then the appropriate instructions need to be contained
limited to those in this requirement, then the appropriate instructions		      |	in the guidance. [GCM](#abbr_GCM) cipher suites are preferred over
need to be contained in the guidance[.](#ajq_214){#ajq_214} GCM cipher		      |	[CBC](#abbr_CBC) cipher suites, [ECDHE](#abbr_ECDHE) preferred over
suites are preferred over CBC cipher suites, ECDHE preferred over RSA		      |	[RSA](#abbr_RSA) and [DHE](#abbr_DHE), and SHA256 or SHA384 over
and DHE, and SHA256 or SHA384 over SHA[.](#ajq_215){#ajq_215}\			      |	[SHA](#abbr_SHA).\
\											\
TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA is not required despite being			TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA is not required despite being
mandated by RFC 5246[.](#ajq_216){#ajq_216}\					      |	mandated by [RFC](#abbr_RFC) 5246.\
										      >	\
										      >	These requirements will be revisited as new [TLS](#abbr_TLS) versions
										      >	are standardized by the [IETF](#abbr_IETF).\
\											\
These requirements will be revisited as new TLS versions are			      |	If *mutual authentication* is selected, then the [ST](#abbr_ST) must
standardized by the IETF[.](#ajq_217){#ajq_217}\				      |	additionally include the requirements from
										      >	[FCS\_TLSS\_EXT.2](#FCS_TLSS_EXT.2). If the [TOE](#abbr_TOE) implements
										      >	mutual authentication, this selection must be made.\
\											\
If *mutual authentication* is selected, then the ST must additionally		      |	If *session renegotiation* is selected, then the [ST](#abbr_ST) must
include the requirements from							      |	additionally include the requirements from
[FCS\_TLSS\_EXT.2](#FCS_TLSS_EXT.2){.linkref}[.](#ajq_218){#ajq_218} If		      |	[FCS\_TLSS\_EXT.4](#FCS_TLSS_EXT.4). If the [TOE](#abbr_TOE) implements
the TOE implements mutual authentication, this selection must be		      |	session renegotiation, this selection must be made. ]{.note}
made[.](#ajq_219){#ajq_219}\							      |	:::
\										      |	:::
If *session renegotiation* is selected, then the ST must additionally		      |	:::
include the requirements from							      |
[FCS\_TLSS\_EXT.4](#FCS_TLSS_EXT.4){.linkref}[.](#ajq_220){#ajq_220} If		      |	::: {.element}
the TOE implements session renegotiation, this selection must be		      |	::: {#FCS_TLSS_EXT.1.2 .reqid}
made[.](#ajq_221){#ajq_221} ]{.note}						      |	[FCS\_TLSS\_EXT.1.2](#FCS_TLSS_EXT.1.2){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall deny connections from clients requesting SSL 2.0, SSL
										      >	3.0, [TLS](#abbr_TLS) 1.0 and \[**selection**: *[TLS](#abbr_TLS) 1.1*,
										      >	*none*\].
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[All SSL versions are denied. Any
										      >	[TLS](#abbr_TLS) version not selected in
										      >	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1) should be selected here.
										      >	]{.note}
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSS_EXT.1.3 .reqid}
										      >	[FCS\_TLSS\_EXT.1.3](#FCS_TLSS_EXT.1.3){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall perform key establishment for [TLS](#abbr_TLS) using
										      >	\[**selection**:
										      >
										      >	-   *[RSA](#abbr_RSA) with size \[**selection**: *2048 bits*, *3072
										      >	    bits*, *4096 bits*, *no other sizes*\]* ,
										      >	-   *Diffie-Hellman parameters with size \[**selection**: *2048 bits*,
										      >	    *3072 bits*, *4096 bits*, *6144 bits*, *8192 bits*, *no other
										      >	    sizes*\]* ,
										      >	-   *Diffie-Hellman groups \[**selection**: *ffdhe2048*, *ffdhe3072*,
										      >	    *ffdhe4096*, *ffdhe6144*, *ffdhe8192*, *no other groups*\]* ,
										      >	-   *[ECDHE](#abbr_ECDHE) parameters using elliptic curves
										      >	    \[**selection**: *secp256r1*, *secp384r1*, *secp521r1*\] and no
										      >	    other curves* ,
										      >	-   *no other key establishment methods*
										      >
										      >	\].
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[ If the [ST](#abbr_ST) lists an
										      >	[RSA](#abbr_RSA) cipher suite in
										      >	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1), the [ST](#abbr_ST) must include
										      >	the [RSA](#abbr_RSA) selection in the requirement.\
										      >	\
										      >	If the [ST](#abbr_ST) lists a [DHE](#abbr_DHE) cipher suite in
										      >	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1), the [ST](#abbr_ST) must include
										      >	either the Diffie-Hellman selection for parameters of a certain size, or
										      >	for particular Diffie-Hellman groups. The selection for \"Diffie-Hellman
										      >	parameters\" refers to the method defined by [RFC](#abbr_RFC) 5246 (and
										      >	[RFC](#abbr_RFC) 4346) Section 7.4.3 where the server provides
										      >	Diffie-Hellman parameters to the client. The Supported Groups extension
										      >	defined in [RFC](#abbr_RFC) 7919 identifies particular Diffie-Hellman
										      >	groups, which are listed in the following selection. Regarding this
										      >	distinction, it is acceptable to use Diffie-Hellman group 14 with
										      >	[TLS](#abbr_TLS) (there is currently no ability to negotiate group 14
										      >	using the Supported Groups extension, but it could be used with the
										      >	\"Diffie-Hellman parameters\" selection). As in [RFC](#abbr_RFC) 7919,
										      >	the terms \"[DHE](#abbr_DHE)\" and \"FFDHE\" are both used to refer to
										      >	the finite-field-based Diffie-Hellman ephemeral key exchange mechanism,
										      >	distinct from elliptic-curve-based Diffie Hellman ephemeral key exchange
										      >	([ECDHE](#abbr_ECDHE)).\
										      >	\
										      >	If the [ST](#abbr_ST) lists an [ECDHE](#abbr_ECDHE) cipher suite in
										      >	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1), the [ST](#abbr_ST) must include
										      >	the selection for [ECDHE](#abbr_ECDHE) using elliptic curves in the
										      >	requirement. ]{.note}
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.element-activity-header}
										      >	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall check the description of the implementation of this			The evaluator shall check the description of the implementation of this
protocol in the TSS to ensure that the cipher suites supported are		      |	protocol in the [TSS](#abbr_TSS) to ensure that the cipher suites
specified[.](#ajq_222){#ajq_222} The evaluator shall check the TSS to		      |	supported are specified. The evaluator shall check the [TSS](#abbr_TSS)
ensure that the cipher suites specified include those listed for this		      |	to ensure that the cipher suites specified include those listed for this
component[.](#ajq_223){#ajq_223}						      |	component.\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall also check the operational guidance to ensure that			The evaluator shall also check the operational guidance to ensure that
it contains instructions on configuring the TOE so that TLS conforms to		      |	it contains instructions on configuring the [TOE](#abbr_TOE) so that
the description in the TSS[.](#ajq_224){#ajq_224}				      |	[TLS](#abbr_TLS) conforms to the description in the [TSS](#abbr_TSS).\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall also perform the following tests:					The evaluator shall also perform the following tests:

-   **Test 1:** The evaluator shall establish a TLS connection using			-   **Test 1:** The evaluator shall establish a TLS connection using
    each of the cipher suites specified by the					      |	    each of the cipher suites specified by the requirement. This
    requirement[.](#ajq_225){#ajq_225} This connection may be			      |	    connection may be established as part of the establishment of a
    established as part of the establishment of a higher-level protocol,	      |	    higher-level protocol, e.g., as part of an [EAP](#abbr_EAP) session.
    e.g., as part of an EAP session[.](#ajq_226){#ajq_226} It is		      |	    It is sufficient to observe the successful negotiation of a cipher
    sufficient to observe the successful negotiation of a cipher suite		      |	    suite to satisfy the intent of the test; it is not necessary to
    to satisfy the intent of the test; it is not necessary to examine		      |	    examine the characteristics of the encrypted traffic in an attempt
    the characteristics of the encrypted traffic in an attempt to		      |	    to discern the cipher suite being used (for example, that the
    discern the cipher suite being used (for example, that the			      |	    cryptographic algorithm is 128-bit [AES](#abbr_AES) and not 256-bit
    cryptographic algorithm is 128-bit AES and not 256-bit			      |	    [AES](#abbr_AES)).
    AES)[.](#ajq_227){#ajq_227}							      <
-   **Test 2:** The evaluator shall send a Client Hello to the server			-   **Test 2:** The evaluator shall send a Client Hello to the server
    with a list of cipher suites that does not contain any of the cipher		    with a list of cipher suites that does not contain any of the cipher
    suites in the server's ST and verify that the server denies the		      |	    suites in the server's [ST](#abbr_ST) and verify that the server
    connection[.](#ajq_228){#ajq_228} Additionally, the evaluator shall		      |	    denies the connection. Additionally, the evaluator shall send a
    send a Client Hello to the server containing only the			      |	    Client Hello to the server containing only the
    TLS\_NULL\_WITH\_NULL\_NULL cipher suite and verify that the server			    TLS\_NULL\_WITH\_NULL\_NULL cipher suite and verify that the server
    denies the connection[.](#ajq_229){#ajq_229}				      |	    denies the connection.
-   **Test 3:** If RSA key exchange is used in one of the selected		      |	-   **Test 3:** If [RSA](#abbr_RSA) key exchange is used in one of the
    ciphersuites, the evaluator shall use a client to send a properly		      |	    selected ciphersuites, the evaluator shall use a client to send a
    constructed Key Exchange message with a modified				      |	    properly constructed Key Exchange message with a modified
    EncryptedPreMasterSecret field during the TLS				      |	    EncryptedPreMasterSecret field during the [TLS](#abbr_TLS)
    handshake[.](#ajq_230){#ajq_230} The evaluator shall verify that the	      |	    handshake. The evaluator shall verify that the handshake is not
    handshake is not completed successfully and no application data		      |	    completed successfully and no application data flows.
    flows[.](#ajq_231){#ajq_231}						      <
-   **Test 4:** The evaluator shall perform the following modifications			-   **Test 4:** The evaluator shall perform the following modifications
    to the traffic:									    to the traffic:
    -   **Test 4.1:** Change the TLS version proposed by the client in			    -   **Test 4.1:** Change the TLS version proposed by the client in
        the Client Hello to a non-supported TLS version (for example 1.3		        the Client Hello to a non-supported TLS version (for example 1.3
        represented by the two bytes 03 04) and verify that the server			        represented by the two bytes 03 04) and verify that the server
        rejects the connection[.](#ajq_232){#ajq_232}				      |	        rejects the connection.
    -   **Test 4.2:** Modify a byte in the data of the client\'s			    -   **Test 4.2:** Modify a byte in the data of the client\'s
        Finished handshake message, and verify that the server rejects			        Finished handshake message, and verify that the server rejects
        the connection and does not send any application			      |	        the connection and does not send any application data.
        data[.](#ajq_233){#ajq_233}						      |	    -   **Test 4.3:** Demonstrate that the [TOE](#abbr_TOE) will not
    -   **Test 4.3:** Demonstrate that the TOE will not resume a session	      |	        resume a session for which the client failed to complete the
        for which the client failed to complete the handshake			      |	        handshake (independent of [TOE](#abbr_TOE) support for session
        (independent of TOE support for session resumption): Generate a		      |	        resumption): Generate a Fatal Alert by sending a Finished
        Fatal Alert by sending a Finished message from the client before	      |	        message from the client before the client sends a
        the client sends a ChangeCipherSpec message, and then send a		      |	        ChangeCipherSpec message, and then send a Client Hello with the
        Client Hello with the session identifier from the previous		      |	        session identifier from the previous incomplete session, and
        incomplete session, and verify that the server does not resume		      |	        verify that the server does not resume the session.
        the session[.](#ajq_234){#ajq_234}					      <
    -   **Test 4.4:** Send a message consisting of random bytes from the		    -   **Test 4.4:** Send a message consisting of random bytes from the
        client after the client has issued the ChangeCipherSpec message			        client after the client has issued the ChangeCipherSpec message
        and verify that the server denies the					      |	        and verify that the server denies the connection.
        connection[.](#ajq_235){#ajq_235}					      <
:::										      <
:::										      <
:::										      <
:::										      <

::: {.element}									      |	\
::: {#FCS_TLSS_EXT.1.2 .reqid}							      <
[FCS\_TLSS\_EXT.1.2](#FCS_TLSS_EXT.1.2){.abbr}					      <
:::										      <
										      <
::: {.reqdesc}									      <
The product shall deny connections from clients requesting SSL 2.0, SSL		      <
3.0, TLS 1.0 and \[**selection**: *TLS 1.1*,					      <
*none*\][.](#ajq_236){#ajq_236}							      <
										      <
::: {.appnote}									      <
[Application Note: ]{.note-header}[All SSL versions are				      <
denied[.](#ajq_237){#ajq_237} Any TLS version not selected in			      <
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref} should be selected		      <
here[.](#ajq_238){#ajq_238} ]{.note}						      <
:::										      <

::: {.activity_pane .hide}							      |	::: {.element-activity-header}
::: {.activity_pane_header}							      |	[FCS\_TLSS\_EXT.1.2](#FCS_TLSS_EXT.1.2)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall verify that the TSS contains a description of the		      |	The evaluator shall verify that the [TSS](#abbr_TSS) contains a
denial of old SSL and TLS versions consistent relative to selections in		      |	description of the denial of old SSL and [TLS](#abbr_TLS) versions
[FCS\_TLSS\_EXT.1.2](#FCS_TLSS_EXT.1.2){.linkref}[.](#ajq_239){#ajq_239}	      |	consistent relative to selections in
										      >	[FCS\_TLSS\_EXT.1.2](#FCS_TLSS_EXT.1.2).\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall verify that the AGD guidance includes any				The evaluator shall verify that the AGD guidance includes any
configuration necessary to meet this requirement[.](#ajq_240){#ajq_240}		      |	configuration necessary to meet this requirement.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

-   **Test 1:** The evaluator shall send a Client Hello requesting a			-   **Test 1:** The evaluator shall send a Client Hello requesting a
    connection with version SSL 2.0 and verify that the server denies			    connection with version SSL 2.0 and verify that the server denies
    the connection[.](#ajq_241){#ajq_241} The evaluator shall repeat		      |	    the connection. The evaluator shall repeat this test with SSL 3.0
    this test with SSL 3.0 and TLS 1.0, and TLS 1.1 if it is			      |	    and [TLS](#abbr_TLS) 1.0, and [TLS](#abbr_TLS) 1.1 if it is
    selected[.](#ajq_242){#ajq_242}						      |	    selected.
:::										      <
:::										      <
:::										      <
:::										      <
										      <
::: {.element}									      <
::: {#FCS_TLSS_EXT.1.3 .reqid}							      <
[FCS\_TLSS\_EXT.1.3](#FCS_TLSS_EXT.1.3){.abbr}					      <
:::										      <

::: {.reqdesc}									      <
The product shall perform key establishment for TLS using			      <
\[**selection**:								      <
										      <
-   *RSA with size \[**selection**: *2048 bits*, *3072 bits*, *4096		      <
    bits*, *no other sizes*\]* ,						      <
-   *Diffie-Hellman parameters with size \[**selection**: *2048 bits*,		      <
    *3072 bits*, *4096 bits*, *6144 bits*, *8192 bits*, *no other		      <
    sizes*\]* ,									      <
-   *Diffie-Hellman groups \[**selection**: *ffdhe2048*, *ffdhe3072*,		      <
    *ffdhe4096*, *ffdhe6144*, *ffdhe8192*, *no other groups*\]* ,		      <
-   *ECDHE parameters using elliptic curves \[**selection**:			      <
    *secp256r1*, *secp384r1*, *secp521r1*\] and no other curves* ,		      <
-   *no other key establishment methods*					      <
										      <
\][.](#ajq_243){#ajq_243}							      <
										      <
::: {.appnote}									      <
[Application Note: ]{.note-header}[ If the ST lists an RSA cipher suite		      <
in [FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref}, the ST must		      <
include the RSA selection in the requirement[.](#ajq_244){#ajq_244}\		      <
\											\
If the ST lists a DHE cipher suite in						      <
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref}, the ST must include		      <
either the Diffie-Hellman selection for parameters of a certain size, or	      <
for particular Diffie-Hellman groups[.](#ajq_245){#ajq_245} The			      <
selection for \"Diffie-Hellman parameters\" refers to the method defined	      <
by RFC 5246 (and RFC 4346) Section 7.4.3 where the server provides		      <
Diffie-Hellman parameters to the client[.](#ajq_246){#ajq_246} The		      <
Supported Groups extension defined in RFC 7919 identifies particular		      <
Diffie-Hellman groups, which are listed in the following			      <
selection[.](#ajq_247){#ajq_247} Regarding this distinction, it is		      <
acceptable to use Diffie-Hellman group 14 with TLS (there is currently		      <
no ability to negotiate group 14 using the Supported Groups extension,		      <
but it could be used with the \"Diffie-Hellman parameters\"			      <
selection)[.](#ajq_248){#ajq_248} As in RFC 7919, the terms \"DHE\" and		      <
\"FFDHE\" are both used to refer to the finite-field-based			      <
Diffie-Hellman ephemeral key exchange mechanism, distinct from			      <
elliptic-curve-based Diffie Hellman ephemeral key exchange			      <
(ECDHE)[.](#ajq_249){#ajq_249}\							      <
\										      <
If the ST lists an ECDHE cipher suite in					      <
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref}, the ST must include		      <
the selection for ECDHE using elliptic curves in the				      <
requirement[.](#ajq_250){#ajq_250} ]{.note}					      <
:::										      <

::: {.activity_pane .hide}							      |	::: {.element-activity-header}
::: {.activity_pane_header}							      |	[FCS\_TLSS\_EXT.1.3](#FCS_TLSS_EXT.1.3)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall verify that the TSS describes the key agreement		      |	The evaluator shall verify that the [TSS](#abbr_TSS) describes the key
parameters of the server\'s Key Exchange message[.](#ajq_251){#ajq_251}		      |	agreement parameters of the server\'s Key Exchange message.\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall verify that any configuration guidance necessary to			The evaluator shall verify that any configuration guidance necessary to
meet the requirement must be contained in the AGD				      |	meet the requirement must be contained in the AGD guidance.\
guidance[.](#ajq_252){#ajq_252}							      <

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

-   **Test 1:** \[conditional\] If RSA-based key establishment is		      |	-   **Test 1:** \[conditional\] If [RSA](#abbr_RSA)-based key
    selected, the evaluator shall configure the TOE with a certificate		      |	    establishment is selected, the evaluator shall configure the
    containing a supported RSA size and attempt a				      |	    [TOE](#abbr_TOE) with a certificate containing a supported
    connection[.](#ajq_257){#ajq_257} The evaluator shall verify that		      |	    [RSA](#abbr_RSA) size and attempt a connection. The evaluator shall
    the size used matches that which is configured and that the			      |	    verify that the size used matches that which is configured and that
    connection is successfully established[.](#ajq_258){#ajq_258} The		      |	    the connection is successfully established. The evaluator shall
    evaluator shall repeat this test for each supported size of			      |	    repeat this test for each supported size of [RSA](#abbr_RSA)-based
    RSA-based key establishment[.](#ajq_259){#ajq_259}				      |	    key establishment.
-   **Test 2:** \[conditional\] If finite-field					      |	-   **Test 2:** \[conditional\] If finite-field (i.e. non-EC)
    (i.e[.](#ajq_260){#ajq_260} non-EC) Diffie-Hellman ciphers are		      |	    Diffie-Hellman ciphers are selected, the evaluator shall attempt a
    selected, the evaluator shall attempt a connection using a			      |	    connection using a Diffie-Hellman key exchange with a supported
    Diffie-Hellman key exchange with a supported parameter size or		      |	    parameter size or supported group. The evaluator shall verify that
    supported group[.](#ajq_261){#ajq_261} The evaluator shall verify		      |	    the key agreement parameters in the Key Exchange message are the
    that the key agreement parameters in the Key Exchange message are		      |	    ones configured. The evaluator shall repeat this test for each
    the ones configured[.](#ajq_262){#ajq_262} The evaluator shall		      |	    supported parameter size or group.
    repeat this test for each supported parameter size or			      |	-   **Test 3:** \[conditional\] If [ECDHE](#abbr_ECDHE) ciphers are
    group[.](#ajq_263){#ajq_263}						      |	    selected, the evaluator shall attempt a connection using an
-   **Test 3:** \[conditional\] If ECDHE ciphers are selected, the		      |	    [ECDHE](#abbr_ECDHE) ciphersuite with a supported curve. The
    evaluator shall attempt a connection using an ECDHE ciphersuite with	      |	    evaluator shall verify that the key agreement parameters in the Key
    a supported curve[.](#ajq_264){#ajq_264} The evaluator shall verify		      |	    Exchange message are the ones configured. The evaluator shall repeat
    that the key agreement parameters in the Key Exchange message are		      |	    this test for each supported elliptic curve.
    the ones configured[.](#ajq_265){#ajq_265} The evaluator shall		      |
    repeat this test for each supported elliptic				      |	\
    curve[.](#ajq_266){#ajq_266}						      <
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSS_EXT.2 .comp}								::: {#FCS_TLSS_EXT.2 .comp}
#### FCS\_TLSS\_EXT.2 TLS Server Support for Mutual Authentication			#### FCS\_TLSS\_EXT.2 TLS Server Support for Mutual Authentication

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1)***[.](#ajq_267){#ajq_267}***		      |	selection in [FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.2.1 .reqid}								::: {#FCS_TLSS_EXT.2.1 .reqid}
[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1){.abbr}						[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall support authentication of TLS clients using X.509v3		      |	The product shall support authentication of [TLS](#abbr_TLS) clients
certificates[.](#ajq_268){#ajq_268}						      |	using X.509v3 certificates.
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.2.2 .reqid}								::: {#FCS_TLSS_EXT.2.2 .reqid}
[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2){.abbr}						[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall not establish a trusted channel if the client				The product shall not establish a trusted channel if the client
certificate is invalid[.](#ajq_269){#ajq_269}					      |	certificate is invalid.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ The use of X.509v3 certificates for			[Application Note: ]{.note-header}[ The use of X.509v3 certificates for
TLS is addressed in [FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref}		      |	[TLS](#abbr_TLS) is addressed in [FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1
This requirement adds that this use must include support for client-side		This requirement adds that this use must include support for client-side
certificates for TLS mutual authentication[.](#ajq_270){#ajq_270}		      |	certificates for [TLS](#abbr_TLS) mutual authentication. Validity is
Validity is determined by the certificate path, the expiration date, and	      |	determined by the certificate path, the expiration date, and the
the revocation status in accordance with RFC 5280[.](#ajq_271){#ajq_271}	      |	revocation status in accordance with [RFC](#abbr_RFC) 5280. Certificate
Certificate validity shall be tested in accordance with testing			      |	validity shall be tested in accordance with testing performed for
performed for									      |	[FIA\_X509\_EXT.1](#FIA_X509_EXT.1). ]{.note}
[FIA\_X509\_EXT.1](#FIA_X509_EXT.1){.linkref}[.](#ajq_272){#ajq_272}		      |	:::
]{.note}									      |	:::
										      >	:::
										      >
										      >	::: {.element}
										      >	::: {#FCS_TLSS_EXT.2.3 .reqid}
										      >	[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall not establish a trusted channel if the Distinguished
										      >	Name ([DN](#abbr_DN)) or Subject Alternative Name ([SAN](#abbr_SAN))
										      >	contained in a certificate does not match one of the expected
										      >	identifiers for the client.
										      >
										      >	::: {.appnote}
										      >	[Application Note: ]{.note-header}[ The client identifier may be in the
										      >	Subject field or the Subject Alternative Name extension of the
										      >	certificate. The expected identifier may either be configured, may be
										      >	compared to the domain name, [IP](#abbr_IP) address, username, or email
										      >	address used by the client, or may be passed to a directory server for
										      >	comparison. In the latter case, the matching itself may be performed
										      >	outside the [TOE](#abbr_TOE). ]{.note}
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.element-activity-header}
										      >	[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall ensure that the TSS description required per		      |	The evaluator shall ensure that the [TSS](#abbr_TSS) description
[FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref} includes the use of		      |	required per [FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1 includes the use of
client-side certificates for TLS mutual						      |	client-side certificates for [TLS](#abbr_TLS) mutual authentication.\
authentication[.](#ajq_273){#ajq_273}						      <

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

The evaluator shall verify that the AGD guidance required per				The evaluator shall verify that the AGD guidance required per
[FIA\_X509\_EXT.2.1](#FIA_X509_EXT.2.1){.linkref} includes instructions		      |	[FIA\_X509\_EXT.2](#FIA_X509_EXT.2).1 includes instructions for
for configuring the client-side certificates for TLS mutual			      |	configuring the client-side certificates for [TLS](#abbr_TLS) mutual
authentication[.](#ajq_274){#ajq_274} The evaluator shall ensure that		      |	authentication. The evaluator shall ensure that the AGD guidance
the AGD guidance includes instructions for configuring the server to		      |	includes instructions for configuring the server to require mutual
require mutual authentication of clients using these				      |	authentication of clients using these certificates.\
certificates[.](#ajq_275){#ajq_275}						      <

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall use TLS as a function to verify that the validation		      |	The evaluator shall use [TLS](#abbr_TLS) as a function to verify that
rules in [FIA\_X509\_EXT.1.1](#FIA_X509_EXT.1.1){.linkref} are adhered		      |	the validation rules in [FIA\_X509\_EXT.1](#FIA_X509_EXT.1).1 are
to and shall perform the following tests[.](#ajq_276){#ajq_276} The		      |	adhered to and shall perform the following tests. The evaluator shall
evaluator shall apply the AGD guidance to configure the server to		      |	apply the AGD guidance to configure the server to require
require TLS mutual authentication of clients for the following tests,		      |	[TLS](#abbr_TLS) mutual authentication of clients for the following
unless overridden by instructions in the test activity:				      |	tests, unless overridden by instructions in the test activity:

-   **Test 1:** The evaluator shall configure the server to send a			-   **Test 1:** The evaluator shall configure the server to send a
    certificate request to the client[.](#ajq_277){#ajq_277} The client		      |	    certificate request to the client. The client shall send a
    shall send a certificate\_list structure which has a length of		      |	    certificate\_list structure which has a length of zero. The
    zero[.](#ajq_278){#ajq_278} The evaluator shall verify that the		      |	    evaluator shall verify that the handshake is not finished
    handshake is not finished successfully and no application data		      |	    successfully and no application data flows.
    flows[.](#ajq_279){#ajq_279}						      <
-   **Test 2:** The evaluator shall configure the server to send a			-   **Test 2:** The evaluator shall configure the server to send a
    certificate request to the client[.](#ajq_280){#ajq_280} The client		      |	    certificate request to the client. The client shall send no client
    shall send no client certificate message, and instead send a client		      |	    certificate message, and instead send a client key exchange message
    key exchange message in an attempt to continue the				      |	    in an attempt to continue the handshake. The evaluator shall verify
    handshake[.](#ajq_281){#ajq_281} The evaluator shall verify that the	      |	    that the handshake is not finished successfully and no application
    handshake is not finished successfully and no application data		      |	    data flows.
    flows[.](#ajq_282){#ajq_282}						      <
-   **Test 3:** The evaluator shall configure the server to send a			-   **Test 3:** The evaluator shall configure the server to send a
    certificate request to the client without the					    certificate request to the client without the
    supported\_signature\_algorithm used by the client's			      |	    supported\_signature\_algorithm used by the client's certificate.
    certificate[.](#ajq_283){#ajq_283} The evaluator shall attempt a		      |	    The evaluator shall attempt a connection using the client
    connection using the client certificate and verify that the			      |	    certificate and verify that the handshake is not finished
    handshake is not finished successfully and no application data		      |	    successfully and no application data flows.
    flows[.](#ajq_284){#ajq_284}						      <
-   **Test 4:** The evaluator shall demonstrate that using a certificate		-   **Test 4:** The evaluator shall demonstrate that using a certificate
    without a valid certification path results in the function			      |	    without a valid certification path results in the function failing.
    failing[.](#ajq_285){#ajq_285} Using the administrative guidance,		      |	    Using the administrative guidance, the evaluator shall then load a
    the evaluator shall then load a certificate or certificates needed		      |	    certificate or certificates needed to validate the certificate to be
    to validate the certificate to be used in the function, and			      |	    used in the function, and demonstrate that the function succeeds.
    demonstrate that the function succeeds[.](#ajq_286){#ajq_286} The		      |	    The evaluator then shall delete one of the certificates, and show
    evaluator then shall delete one of the certificates, and show that		      |	    that the function fails.
    the function fails[.](#ajq_287){#ajq_287}					      <
-   **Test 5:** The aim of this test is to check the response of the			-   **Test 5:** The aim of this test is to check the response of the
    server when it receives a client identity certificate that is signed		    server when it receives a client identity certificate that is signed
    by an impostor CA (either Root CA or intermediate				      |	    by an impostor [CA](#abbr_CA) (either Root [CA](#abbr_CA) or
    CA)[.](#ajq_288){#ajq_288} To carry out this test the evaluator		      |	    intermediate [CA](#abbr_CA)). To carry out this test the evaluator
    shall configure the client to send a client identity certificate			    shall configure the client to send a client identity certificate
    with an issuer field that identifies a CA recognised by the TOE as a	      |	    with an issuer field that identifies a [CA](#abbr_CA) recognised by
    trusted CA, but where the key used for the signature on the client		      |	    the [TOE](#abbr_TOE) as a trusted [CA](#abbr_CA), but where the key
    certificate does not in fact correspond to the CA certificate		      |	    used for the signature on the client certificate does not in fact
    trusted by the TOE (meaning that the client certificate is invalid		      |	    correspond to the [CA](#abbr_CA) certificate trusted by the
										      >	    [TOE](#abbr_TOE) (meaning that the client certificate is invalid
    because its certification path does not in fact terminate in the			    because its certification path does not in fact terminate in the
    claimed CA certificate)[.](#ajq_289){#ajq_289} The evaluator shall		      |	    claimed [CA](#abbr_CA) certificate). The evaluator shall verify that
    verify that the attempted connection is					      |	    the attempted connection is denied.
    denied[.](#ajq_290){#ajq_290}						      <
-   **Test 6:** The evaluator shall configure the client to send a			-   **Test 6:** The evaluator shall configure the client to send a
    certificate with the Client Authentication purpose in the				    certificate with the Client Authentication purpose in the
    extendedKeyUsage field and verify that the server accepts the			    extendedKeyUsage field and verify that the server accepts the
    attempted connection[.](#ajq_291){#ajq_291} The evaluator shall		      |	    attempted connection. The evaluator shall repeat this test without
    repeat this test without the Client Authentication purpose and shall	      |	    the Client Authentication purpose and shall verify that the server
    verify that the server denies the connection[.](#ajq_292){#ajq_292}		      |	    denies the connection. Ideally, the two certificates should be
    Ideally, the two certificates should be identical except for the		      |	    identical except for the Client Authentication purpose.
    Client Authentication purpose[.](#ajq_293){#ajq_293}			      <
-   **Test 7:** The evaluator shall perform the following modifications			-   **Test 7:** The evaluator shall perform the following modifications
    to the traffic: a) Configure the server to require mutual				    to the traffic: a) Configure the server to require mutual
    authentication and then modify a byte in the client's			      |	    authentication and then modify a byte in the client's certificate.
    certificate[.](#ajq_294){#ajq_294} The evaluator shall verify that		      |	    The evaluator shall verify that the server rejects the
    the server rejects the connection[.](#ajq_295){#ajq_295} b)			      |	    connection. b) Configure the server to require mutual authentication
    Configure the server to require mutual authentication and then		      |	    and then modify a byte in the signature block of the client's
    modify a byte in the signature block of the client's Certificate		      |	    Certificate Verify handshake message. The evaluator shall verify
    Verify handshake message[.](#ajq_296){#ajq_296} The evaluator shall		      |	    that the server rejects the connection.
    verify that the server rejects the connection[.](#ajq_297){#ajq_297}	      <
:::										      <
:::										      <
:::										      <
:::										      <
										      <
::: {.element}									      <
::: {#FCS_TLSS_EXT.2.3 .reqid}							      <
[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3){.abbr}					      <
:::										      <
										      <
::: {.reqdesc}									      <
The product shall not establish a trusted channel if the Distinguished		      <
Name (DN) or Subject Alternative Name (SAN) contained in a certificate		      <
does not match one of the expected identifiers for the				      <
client[.](#ajq_298){#ajq_298}							      <

::: {.appnote}									      |	\
[Application Note: ]{.note-header}[ The client identifier may be in the		      <
Subject field or the Subject Alternative Name extension of the			      <
certificate[.](#ajq_299){#ajq_299} The expected identifier may either be	      <
configured, may be compared to the domain name, IP address, username, or	      <
email address used by the client, or may be passed to a directory server	      <
for comparison[.](#ajq_300){#ajq_300} In the latter case, the matching		      <
itself may be performed outside the TOE[.](#ajq_301){#ajq_301} ]{.note}		      <
:::										      <

::: {.activity_pane .hide}							      |	::: {.element-activity-header}
::: {.activity_pane_header}							      |	[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

If the product implements mutual authentication, the evaluator shall			If the product implements mutual authentication, the evaluator shall
verify that the TSS describes how the DN and SAN in the certificate is		      |	verify that the [TSS](#abbr_TSS) describes how the [DN](#abbr_DN) and
compared to the expected identifier[.](#ajq_302){#ajq_302}			      |	[SAN](#abbr_SAN) in the certificate is compared to the expected
										      >	identifier.\

::: {.eacategory}									::: {.eacategory}
Guidance										Guidance
:::											:::

If the DN is not compared automatically to the domain name, IP address,		      |	If the [DN](#abbr_DN) is not compared automatically to the domain name,
username, or email address, the evaluator shall ensure that the AGD		      |	[IP](#abbr_IP) address, username, or email address, the evaluator shall
guidance includes configuration of the expected identifier or the		      |	ensure that the AGD guidance includes configuration of the expected
directory server for the connection[.](#ajq_303){#ajq_303}			      |	identifier or the directory server for the connection.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

-   **Test 1:** The evaluator shall send a client certificate with an			-   **Test 1:** The evaluator shall send a client certificate with an
    identifier that does not match any of the expected identifiers and			    identifier that does not match any of the expected identifiers and
    verify that the server denies the connection[.](#ajq_304){#ajq_304}		      |	    verify that the server denies the connection. The matching itself
    The matching itself might be performed outside the TOE			      |	    might be performed outside the [TOE](#abbr_TOE) (e.g. when passing
    (e.g[.](#ajq_305){#ajq_305} when passing the certificate on to a		      |	    the certificate on to a directory server for comparison).
    directory server for comparison)[.](#ajq_306){#ajq_306}			      |
:::										      |	\
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSS_EXT.4 .comp}								::: {#FCS_TLSS_EXT.4 .comp}
#### FCS\_TLSS\_EXT.4 TLS Server Support for Renegotiation				#### FCS\_TLSS\_EXT.4 TLS Server Support for Renegotiation

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1)***[.](#ajq_307){#ajq_307}***		      |	selection in [FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.4.1 .reqid}								::: {#FCS_TLSS_EXT.4.1 .reqid}
[FCS\_TLSS\_EXT.4.1](#FCS_TLSS_EXT.4.1){.abbr}						[FCS\_TLSS\_EXT.4.1](#FCS_TLSS_EXT.4.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall support the \"renegotiation\_info\" TLS extension in		      |	The product shall support the \"renegotiation\_info\" [TLS](#abbr_TLS)
accordance with RFC 5746[.](#ajq_308){#ajq_308}					      |	extension in accordance with [RFC](#abbr_RFC) 5746.
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.4.2 .reqid}								::: {#FCS_TLSS_EXT.4.2 .reqid}
[FCS\_TLSS\_EXT.4.2](#FCS_TLSS_EXT.4.2){.abbr}						[FCS\_TLSS\_EXT.4.2](#FCS_TLSS_EXT.4.2){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall include the renegotiation\_info extension in				The product shall include the renegotiation\_info extension in
ServerHello messages[.](#ajq_309){#ajq_309}					      |	ServerHello messages.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ RFC 5746 defines an extension to TLS	      |	[Application Note: ]{.note-header}[ [RFC](#abbr_RFC) 5746 defines an
that binds renegotiation handshakes to the cryptography in the original		      |	extension to [TLS](#abbr_TLS) that binds renegotiation handshakes to the
handshake[.](#ajq_310){#ajq_310} ]{.note}					      |	cryptography in the original handshake. ]{.note}
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_TLSS\_EXT.4](#FCS_TLSS_EXT.4)
										      >	:::

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The following tests require connection with a client that supports			The following tests require connection with a client that supports
secure renegotiation and the \"renegotiation\_info\"				      |	secure renegotiation and the \"renegotiation\_info\" extension.
extension[.](#ajq_311){#ajq_311}						      <

-   **Test 1:** The evaluator shall use a network packet				-   **Test 1:** The evaluator shall use a network packet
    analyzer/sniffer to capture the traffic between the two TLS			      |	    analyzer/sniffer to capture the traffic between the two
    endpoints[.](#ajq_312){#ajq_312} The evaluator shall verify that the	      |	    [TLS](#abbr_TLS) endpoints. The evaluator shall verify that the
    "renegotiation\_info" field is included in the ServerHello			      |	    "renegotiation\_info" field is included in the ServerHello message.
    message[.](#ajq_313){#ajq_313}						      <
-   **Test 2:** The evaluator shall modify the length portion of the			-   **Test 2:** The evaluator shall modify the length portion of the
    field in the ClientHello message in the initial handshake to be			    field in the ClientHello message in the initial handshake to be
    non-zero and verify that the server sends a failure and terminates			    non-zero and verify that the server sends a failure and terminates
    the connection[.](#ajq_314){#ajq_314} The evaluator shall verify		      |	    the connection. The evaluator shall verify that a properly formatted
    that a properly formatted field results in a successful TLS			      |	    field results in a successful [TLS](#abbr_TLS) connection.
    connection[.](#ajq_315){#ajq_315}						      <
-   **Test 3:** The evaluator shall modify the \"client\_verify\_data\"			-   **Test 3:** The evaluator shall modify the \"client\_verify\_data\"
    or \"server\_verify\_data\" value in the ClientHello message			    or \"server\_verify\_data\" value in the ClientHello message
    received during secure renegotiation and verify that the server			    received during secure renegotiation and verify that the server
    terminates the connection[.](#ajq_316){#ajq_316}				      |	    terminates the connection.
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_DTLSC_EXT.1 .comp}								::: {#FCS_DTLSC_EXT.1 .comp}
#### FCS\_DTLSC\_EXT.1 DTLS Client Protocol						#### FCS\_DTLSC\_EXT.1 DTLS Client Protocol

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1)***[.](#ajq_317){#ajq_317}***		      |	selection in [FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSC_EXT.1.1 .reqid}								::: {#FCS_DTLSC_EXT.1.1 .reqid}
[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1){.abbr}					[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall implement DTLS 1.2 (RFC 6347) and \[**selection**:		      |	The product shall implement [DTLS](#abbr_DTLS) 1.2 ([RFC](#abbr_RFC)
*DTLS 1.0 (RFC 4347)*, *no earlier DTLS versions*\] as a client that		      |	6347) and \[**selection**: *[DTLS](#abbr_DTLS) 1.0 ([RFC](#abbr_RFC)
										      >	4347)*, *no earlier [DTLS](#abbr_DTLS) versions*\] as a client that
supports the cipher suites \[**selection**:						supports the cipher suites \[**selection**:

-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in [RFC](#abbr_RFC)
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,		      |	    5246*,
-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,		      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5288*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5246*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5246*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5288*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*									      |	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*

\] and also supports functionality for \[**selection**:					\] and also supports functionality for \[**selection**:

-   *mutual authentication*,								-   *mutual authentication*,
-   *none*										-   *none*

\][.](#ajq_318){#ajq_318}							      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ If any ECDHE or DHE cipher suites		      |	[Application Note: ]{.note-header}[ If any [ECDHE](#abbr_ECDHE) or
are selected, then [FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5){.linkref} is		      |	[DHE](#abbr_DHE) cipher suites are selected, then
required[.](#ajq_319){#ajq_319}\						      |	[FCS\_TLSC\_EXT.5](#FCS_TLSC_EXT.5) is required.\
\										      |	\
If *mutual authentication* is selected, then the ST must additionally		      |	If *mutual authentication* is selected, then the [ST](#abbr_ST) must
include the requirements from							      |	additionally include the requirements from
[FCS\_DTLSC\_EXT.2](#FCS_DTLSC_EXT.2){.linkref}[.](#ajq_320){#ajq_320}		      |	[FCS\_DTLSC\_EXT.2](#FCS_DTLSC_EXT.2). If the [TOE](#abbr_TOE)
If the TOE implements mutual authentication, this selection must be		      |	implements mutual authentication, this selection must be made.\
made[.](#ajq_321){#ajq_321}\							      |	\
\										      |	Differences between [DTLS](#abbr_DTLS) 1.2 and [TLS](#abbr_TLS) 1.2 are
Differences between DTLS 1.2 and TLS 1.2 are outlined in RFC 6347;		      |	outlined in [RFC](#abbr_RFC) 6347; otherwise the protocols are the same.
otherwise the protocols are the same[.](#ajq_322){#ajq_322} All			      |	All application notes listed for [FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1)
application notes listed for							      |	that are relevant to [DTLS](#abbr_DTLS) apply to this requirement.
[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1){.linkref} that are relevant to		      |	]{.note}
DTLS apply to this requirement[.](#ajq_323){#ajq_323} ]{.note}			      <
:::										      <
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
The evaluator shall perform the evaluation activities listed for		      <
[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1){.linkref}, but ensuring that		      <
DTLS (and not TLS) is used in each evaluation					      <
activity[.](#ajq_324){#ajq_324}\						      <
\										      <
For tests which involve version numbers, note that in DTLS the			      <
on-the-wire representation is the 1\'s complement of the corresponding		      <
textual DTLS version numbers[.](#ajq_325){#ajq_325} This is described in	      <
Section 4.1 of RFC 6347 and RFC 4347[.](#ajq_326){#ajq_326} For example,	      <
DTLS 1.0 is represented by the bytes 0xfe 0xff, while the undefined DTLS	      <
1.4 would be represented by the bytes 0xfe 0xfb[.](#ajq_327){#ajq_327}		      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSC_EXT.1.2 .reqid}								::: {#FCS_DTLSC_EXT.1.2 .reqid}
[FCS\_DTLSC\_EXT.1.2](#FCS_DTLSC_EXT.1.2){.abbr}					[FCS\_DTLSC\_EXT.1.2](#FCS_DTLSC_EXT.1.2){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall verify that the presented identifier matches the			The product shall verify that the presented identifier matches the
reference identifier according to RFC 6125[.](#ajq_328){#ajq_328}		      |	reference identifier according to [RFC](#abbr_RFC) 6125.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ All application notes listed for			[Application Note: ]{.note-header}[ All application notes listed for
[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2){.linkref} that are relevant to		      |	[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2) that are relevant to
DTLS apply to this requirement[.](#ajq_329){#ajq_329} ]{.note}			      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
:::										      <
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
The evaluator shall perform the evaluation activities listed for		      <
[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2){.linkref}[.](#ajq_330){#ajq_330}	      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSC_EXT.1.3 .reqid}								::: {#FCS_DTLSC_EXT.1.3 .reqid}
[FCS\_DTLSC\_EXT.1.3](#FCS_DTLSC_EXT.1.3){.abbr}					[FCS\_DTLSC\_EXT.1.3](#FCS_DTLSC_EXT.1.3){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall not establish a trusted channel if the server				The product shall not establish a trusted channel if the server
certificate is invalid \[**selection**: *with no exceptions*, *except			certificate is invalid \[**selection**: *with no exceptions*, *except
when override is authorized*\][.](#ajq_331){#ajq_331}				      |	when override is authorized*\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ All application notes listed for			[Application Note: ]{.note-header}[ All application notes listed for
[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3){.linkref} that are relevant to		      |	[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3) that are relevant to
DTLS apply to this requirement[.](#ajq_332){#ajq_332} ]{.note}			      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
										      >	:::
										      >	:::
										      >	:::
										      >
										      >	::: {.element}
										      >	::: {#FCS_DTLSC_EXT.1.4 .reqid}
										      >	[FCS\_DTLSC\_EXT.1.4](#FCS_DTLSC_EXT.1.4){.abbr}
										      >	:::
										      >
										      >	::: {.reqdesc}
										      >	The product shall \[**selection, choose one of**: *terminate the
										      >	[DTLS](#abbr_DTLS) session*, *silently discard the record*\] if a
										      >	message received contains an invalid MAC or if decryption fails in the
										      >	case of [GCM](#abbr_GCM) and other AEAD ciphersuites.
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_DTLSC\_EXT.1](#FCS_DTLSC_EXT.1)
										      >	:::

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the evaluation activities listed for			The evaluator shall perform the evaluation activities listed for
[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3){.linkref}[.](#ajq_333){#ajq_333}	      |	[FCS\_TLSC\_EXT.1.3](#FCS_TLSC_EXT.1.3).
:::										      |
										      >	::: {.element-activity-header}
										      >	[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1)
:::											:::
										      >
										      >	::: {.eacategory}
										      >	Tests
:::											:::
										      >
										      >	The evaluator shall perform the evaluation activities listed for
										      >	[FCS\_TLSC\_EXT.1.1](#FCS_TLSC_EXT.1.1), but ensuring that
										      >	[DTLS](#abbr_DTLS) (and not [TLS](#abbr_TLS)) is used in each evaluation
										      >	activity.\
										      >	\
										      >	For tests which involve version numbers, note that in [DTLS](#abbr_DTLS)
										      >	the on-the-wire representation is the 1\'s complement of the
										      >	corresponding textual [DTLS](#abbr_DTLS) version numbers. This is
										      >	described in Section 4.1 of [RFC](#abbr_RFC) 6347 and [RFC](#abbr_RFC)
										      >	4347. For example, [DTLS](#abbr_DTLS) 1.0 is represented by the bytes
										      >	0xfe 0xff, while the undefined [DTLS](#abbr_DTLS) 1.4 would be
										      >	represented by the bytes 0xfe 0xfb.\
										      >
										      >	::: {.element-activity-header}
										      >	[FCS\_DTLSC\_EXT.1.2](#FCS_DTLSC_EXT.1.2)
:::											:::

::: {.element}									      |	::: {.eacategory}
::: {#FCS_DTLSC_EXT.1.4 .reqid}							      |	Tests
[FCS\_DTLSC\_EXT.1.4](#FCS_DTLSC_EXT.1.4){.abbr}				      <
:::											:::

::: {.reqdesc}									      |	The evaluator shall perform the evaluation activities listed for
The product shall \[**selection**: *terminate the DTLS session*,		      |	[FCS\_TLSC\_EXT.1.2](#FCS_TLSC_EXT.1.2).\
*silently discard the record*\] if a message received contains an		      <
invalid MAC or if decryption fails in the case of GCM and other AEAD		      <
ciphersuites[.](#ajq_334){#ajq_334}						      <

::: {.activity_pane .hide}							      |	::: {.element-activity-header}
::: {.activity_pane_header}							      |	[FCS\_DTLSC\_EXT.1.4](#FCS_DTLSC_EXT.1.4)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      <
										      <
::: {.eacategory}									::: {.eacategory}
TSS										      |	[TSS](#abbr_TSS)
:::											:::

The evaluator shall verify that the TSS describes the actions that take		      |	The evaluator shall verify that the [TSS](#abbr_TSS) describes the
place if a message received from the DTLS Server fails the MAC integrity	      |	actions that take place if a message received from the
check[.](#ajq_335){#ajq_335}							      |	[DTLS](#abbr_DTLS) Server fails the MAC integrity check.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall establish a connection using a				      |	The evaluator shall establish a connection using a server. The evaluator
server[.](#ajq_336){#ajq_336} The evaluator will then modify at least		      |	will then modify at least one byte in a record message, and verify that
one byte in a record message, and verify that the client discards the		      |	the client discards the record or terminates the [DTLS](#abbr_DTLS)
record or terminates the DTLS session[.](#ajq_337){#ajq_337}			      |	session.\
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_DTLSC_EXT.2 .comp}								::: {#FCS_DTLSC_EXT.2 .comp}
#### FCS\_DTLSC\_EXT.2 DTLS Client Support for Mutual Authentication			#### FCS\_DTLSC\_EXT.2 DTLS Client Support for Mutual Authentication

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1)***[.](#ajq_338){#ajq_338}***	      |	selection in [FCS\_DTLSC\_EXT.1.1](#FCS_DTLSC_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSC_EXT.2.1 .reqid}								::: {#FCS_DTLSC_EXT.2.1 .reqid}
[FCS\_DTLSC\_EXT.2.1](#FCS_DTLSC_EXT.2.1){.abbr}					[FCS\_DTLSC\_EXT.2.1](#FCS_DTLSC_EXT.2.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall support mutual authentication using X.509v3				The product shall support mutual authentication using X.509v3
certificates[.](#ajq_339){#ajq_339}						      |	certificates.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ All application notes listed for			[Application Note: ]{.note-header}[ All application notes listed for
[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1){.linkref} that are relevant to		      |	[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1) that are relevant to
DTLS apply to this requirement[.](#ajq_340){#ajq_340} ]{.note}			      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
										      >	:::
										      >	:::
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.component-activity-header}
										      >	[FCS\_DTLSC\_EXT.2](#FCS_DTLSC_EXT.2)
										      >	:::

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the evaluation activities listed for			The evaluator shall perform the evaluation activities listed for
[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1){.linkref}[.](#ajq_341){#ajq_341}	      |	[FCS\_TLSC\_EXT.2.1](#FCS_TLSC_EXT.2.1).
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_DTLSS_EXT.1 .comp}								::: {#FCS_DTLSS_EXT.1 .comp}
#### FCS\_DTLSS\_EXT.1 DTLS Server Protocol						#### FCS\_DTLSS\_EXT.1 DTLS Server Protocol

::: {.statustag}									::: {.statustag}
***This selection-based component depends upon selection in			      |	***The inclusion of this selection-based component depends upon
***[FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1)***[.](#ajq_342){#ajq_342}***		      |	selection in [FCS\_TLS\_EXT.1.1](#FCS_TLS_EXT.1.1).***
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSS_EXT.1.1 .reqid}								::: {#FCS_DTLSS_EXT.1.1 .reqid}
[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.abbr}					[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall implement DTLS 1.2 (RFC 6347) and \[**selection**:		      |	The product shall implement [DTLS](#abbr_DTLS) 1.2 ([RFC](#abbr_RFC)
*DTLS 1.0 (RFC 4347)*, *no earlier DTLS versions*\] as a server that		      |	6347) and \[**selection**: *[DTLS](#abbr_DTLS) 1.0 ([RFC](#abbr_RFC)
										      >	4347)*, *no earlier [DTLS](#abbr_DTLS) versions*\] as a server that
supports the ciphersuites \[**selection**:						supports the ciphersuites \[**selection**:

-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA as defined in [RFC](#abbr_RFC)
-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,		      |	    5246*,
-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,		      |	-   *TLS\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,		      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC 5246*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in RFC 5246*,	      |	    [RFC](#abbr_RFC) 5246*,
-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC 5288*,	      |	-   *TLS\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5288*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5246*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5246*,
    5289*,									      |	-   *TLS\_DHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5288*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*,									      |	-   *TLS\_ECDHE\_ECDSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in RFC		      |	    [RFC](#abbr_RFC) 5289*,
    5289*									      |	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_CBC\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_128\_GCM\_SHA256 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_CBC\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*,
										      >	-   *TLS\_ECDHE\_RSA\_WITH\_AES\_256\_GCM\_SHA384 as defined in
										      >	    [RFC](#abbr_RFC) 5289*

\] and no other cipher suites, and also supports functionality for			\] and no other cipher suites, and also supports functionality for
\[**selection**:									\[**selection**:

-   *mutual authentication*,								-   *mutual authentication*,
-   *none*										-   *none*

\][.](#ajq_343){#ajq_343}							      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ If *mutual authentication* is			[Application Note: ]{.note-header}[ If *mutual authentication* is
selected, then the ST must additionally include the requirements from		      |	selected, then the [ST](#abbr_ST) must additionally include the
[FCS\_DTLSS\_EXT.2](#FCS_DTLSS_EXT.2){.linkref}[.](#ajq_344){#ajq_344}		      |	requirements from [FCS\_DTLSS\_EXT.2](#FCS_DTLSS_EXT.2). If the
If the TOE implements mutual authentication, this selection must be		      |	[TOE](#abbr_TOE) implements mutual authentication, this selection must
made[.](#ajq_345){#ajq_345}\							      |	be made.\
\										      |	\
All application notes listed for						      |	All application notes listed for [FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1)
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref} that are relevant to		      |	that are relevant to [DTLS](#abbr_DTLS) apply to this requirement.
DTLS apply to this requirement[.](#ajq_346){#ajq_346} ]{.note}			      |	]{.note}
:::										      <
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
The evaluator shall perform the evaluation activities listed for		      <
[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1){.linkref}, but ensuring that		      <
DTLS (and not TLS) is used in each stage of the evaluation			      <
activities[.](#ajq_347){#ajq_347}\						      <
\										      <
For tests which involve version numbers, note that in DTLS the			      <
on-the-wire representation is the 1\'s complement of the corresponding		      <
textual DTLS version numbers[.](#ajq_348){#ajq_348} This is described in	      <
Section 4.1 of RFC 6347 and RFC 4347[.](#ajq_349){#ajq_349} For example,	      <
DTLS 1.0 is represented by the bytes 0xfe 0xff, while the undefined DTLS	      <
1.4 would be represented by the bytes 0xfe 0xfb[.](#ajq_350){#ajq_350}		      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSS_EXT.1.2 .reqid}								::: {#FCS_DTLSS_EXT.1.2 .reqid}
[FCS\_DTLSS\_EXT.1.2](#FCS_DTLSS_EXT.1.2){.abbr}					[FCS\_DTLSS\_EXT.1.2](#FCS_DTLSS_EXT.1.2){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall deny connections from clients requesting				The product shall deny connections from clients requesting
\[**assignment**: [list of DTLS protocol					      |	\[**assignment**: [list of [DTLS](#abbr_DTLS) protocol
versions]{.assignable-content}\][.](#ajq_351){#ajq_351}				      |	versions]{.assignable-content}\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[Any specific DTLS version not		      |	[Application Note: ]{.note-header}[Any specific [DTLS](#abbr_DTLS)
selected in [FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.linkref} should		      |	version not selected in [FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1) should
be assigned here[.](#ajq_352){#ajq_352} This version of the PP does not		      |	be assigned here. This version of the [PP](#abbr_PP) does not require
require the server to deny DTLS 1.0, and if the TOE supports DTLS 1.0		      |	the server to deny [DTLS](#abbr_DTLS) 1.0, and if the [TOE](#abbr_TOE)
then \"none\" can be assigned[.](#ajq_353){#ajq_353} In a future version	      |	supports [DTLS](#abbr_DTLS) 1.0 then \"none\" can be assigned. In a
of this PP, DTLS 1.0 will be required to be					      |	future version of this [PP](#abbr_PP), [DTLS](#abbr_DTLS) 1.0 will be
denied[.](#ajq_354){#ajq_354} ]{.note}						      |	required to be denied. ]{.note}
:::										      <
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
*The following evaluation activities shall be conducted unless \"none\"		      <
is assigned[.](#ajq_355){#ajq_355}\						      <
\										      <
*										      <
										      <
::: {.eacategory}								      <
TSS										      <
:::										      <
										      <
The evaluator shall verify that the TSS contains a description of the		      <
denial of old DTLS versions consistent relative to selections in		      <
[FCS\_DTLSS\_EXT.1.2](#FCS_DTLSS_EXT.1.2){.linkref}[.](#ajq_356){#ajq_356}	      <
										      <
::: {.eacategory}								      <
Guidance									      <
:::										      <
										      <
The evaluator shall verify that the AGD guidance includes any			      <
configuration necessary to meet this requirement[.](#ajq_357){#ajq_357}		      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
-   **Test 1:** The evaluator shall send a Client Hello requesting a		      <
    connection with each version of DTLS specified in the selection and		      <
    verify that the server denies the connection[.](#ajq_358){#ajq_358}		      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSS_EXT.1.3 .reqid}								::: {#FCS_DTLSS_EXT.1.3 .reqid}
[FCS\_DTLSS\_EXT.1.3](#FCS_DTLSS_EXT.1.3){.abbr}					[FCS\_DTLSS\_EXT.1.3](#FCS_DTLSS_EXT.1.3){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall not proceed with a connection handshake attempt if the		The product shall not proceed with a connection handshake attempt if the
DTLS Client fails validation[.](#ajq_359){#ajq_359}				      |	[DTLS](#abbr_DTLS) Client fails validation.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ The process to validate the IP		      |	[Application Note: ]{.note-header}[ The process to validate the
address of a DTLS client is specified in section 4.2.1 of RFC 6347 (DTLS	      |	[IP](#abbr_IP) address of a [DTLS](#abbr_DTLS) client is specified in
1.2) and RFC 4347 (DTLS 1.0)[.](#ajq_360){#ajq_360} The server validates	      |	section 4.2.1 of [RFC](#abbr_RFC) 6347 ([DTLS](#abbr_DTLS) 1.2) and
the DTLS client during Connection Establishment (Handshaking) and prior		      |	[RFC](#abbr_RFC) 4347 ([DTLS](#abbr_DTLS) 1.0). The server validates the
to sending a Server Hello message[.](#ajq_361){#ajq_361} After receiving	      |	[DTLS](#abbr_DTLS) client during Connection Establishment (Handshaking)
a ClientHello, the DTLS Server sends a HelloVerifyRequest along with a		      |	and prior to sending a Server Hello message. After receiving a
cookie[.](#ajq_362){#ajq_362} The cookie is a signed message using a		      |	ClientHello, the [DTLS](#abbr_DTLS) Server sends a HelloVerifyRequest
keyed hash function[.](#ajq_363){#ajq_363} The DTLS Client then sends		      |	along with a cookie. The cookie is a signed message using a keyed hash
another ClientHello with the cookie attached[.](#ajq_364){#ajq_364} If		      |	function. The [DTLS](#abbr_DTLS) Client then sends another ClientHello
the DTLS server successfully verifies the signed cookie, the Client is		      |	with the cookie attached. If the [DTLS](#abbr_DTLS) server successfully
not using a spoofed IP address[.](#ajq_365){#ajq_365} ]{.note}			      |	verifies the signed cookie, the Client is not using a spoofed
:::										      |	[IP](#abbr_IP) address. ]{.note}
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
TSS										      <
:::										      <
										      <
The evaluator shall verify that the TSS describes how the DTLS Client IP	      <
address is validated prior to issuing a ServerHello				      <
message[.](#ajq_366){#ajq_366}							      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
Modify at least one byte in the cookie from the Server\'s			      <
HelloVerifyRequest message, and verify that the Server rejects the		      <
Client\'s handshake message[.](#ajq_367){#ajq_367}				      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSS_EXT.1.4 .reqid}								::: {#FCS_DTLSS_EXT.1.4 .reqid}
[FCS\_DTLSS\_EXT.1.4](#FCS_DTLSS_EXT.1.4){.abbr}					[FCS\_DTLSS\_EXT.1.4](#FCS_DTLSS_EXT.1.4){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall perform key establishment for DTLS using			      |	The product shall perform key establishment for [DTLS](#abbr_DTLS) using
\[**selection**:									\[**selection**:

-   *RSA with size \[**selection**: *2048 bits*, *3072 bits*, *4096		      |	-   *[RSA](#abbr_RSA) with size \[**selection**: *2048 bits*, *3072
    bits*, *no other sizes*\]* ,						      |	    bits*, *4096 bits*, *no other sizes*\]* ,
-   *Diffie-Hellman parameters with size \[**selection**: *2048 bits*,			-   *Diffie-Hellman parameters with size \[**selection**: *2048 bits*,
    *3072 bits*, *4096 bits*, *6144 bits*, *8192 bits*, *no other			    *3072 bits*, *4096 bits*, *6144 bits*, *8192 bits*, *no other
    size*\]* ,										    size*\]* ,
-   *Diffie-Hellman groups \[**selection**: *ffdhe2048*, *ffdhe3072*,			-   *Diffie-Hellman groups \[**selection**: *ffdhe2048*, *ffdhe3072*,
    *ffdhe4096*, *ffdhe6144*, *ffdhe8192*, *no other groups*\]* ,			    *ffdhe4096*, *ffdhe6144*, *ffdhe8192*, *no other groups*\]* ,
-   *ECDHE parameters using elliptic curves \[**selection**:			      |	-   *[ECDHE](#abbr_ECDHE) parameters using elliptic curves
    *secp256r1*, *secp384r1*, *secp521r1*\] and no other curves*,		      |	    \[**selection**: *secp256r1*, *secp384r1*, *secp521r1*\] and no
										      >	    other curves*,
-   *no other key establishment methods*						-   *no other key establishment methods*

\][.](#ajq_368){#ajq_368}							      |	\].

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ If the ST lists an RSA cipher suite		      |	[Application Note: ]{.note-header}[ If the [ST](#abbr_ST) lists an
in [FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.linkref}, the ST must		      |	[RSA](#abbr_RSA) cipher suite in
include the RSA selection in the requirement[.](#ajq_369){#ajq_369}\		      |	[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1), the [ST](#abbr_ST) must
If the ST lists a DHE cipher suite in						      |	include the [RSA](#abbr_RSA) selection in the requirement.\
[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.linkref}, the ST must include	      |	If the [ST](#abbr_ST) lists a [DHE](#abbr_DHE) cipher suite in
either the Diffie-Hellman selection for parameters of a certain size, or	      |	[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1), the [ST](#abbr_ST) must
for particular Diffie-Hellman groups[.](#ajq_370){#ajq_370}\			      |	include either the Diffie-Hellman selection for parameters of a certain
If the ST lists an ECDHE cipher suite in					      |	size, or for particular Diffie-Hellman groups.\
[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1){.linkref}, the ST must include	      |	If the [ST](#abbr_ST) lists an [ECDHE](#abbr_ECDHE) cipher suite in
the NIST curves selection in the requirement[.](#ajq_371){#ajq_371}		      |	[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1), the [ST](#abbr_ST) must
										      >	include the [NIST](#abbr_NIST) curves selection in the requirement.
]{.note}										]{.note}
:::											:::
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::										      <
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
Tests										      <
:::										      <
										      <
The evaluator shall perform the evaluation activities listed for		      <
[FCS\_TLSS\_EXT.1.3](#FCS_TLSS_EXT.1.3){.linkref}[.](#ajq_372){#ajq_372}	      <
:::										      <
:::										      <
:::											:::
:::											:::

::: {.element}										::: {.element}
::: {#FCS_DTLSS_EXT.1.5 .reqid}								::: {#FCS_DTLSS_EXT.1.5 .reqid}
[FCS\_DTLSS\_EXT.1.5](#FCS_DTLSS_EXT.1.5){.abbr}					[FCS\_DTLSS\_EXT.1.5](#FCS_DTLSS_EXT.1.5){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall \[**selection**: *terminate the DTLS session*,		      |	The product shall \[**selection, choose one of**: *terminate the
*silently discard the record*\] if a message received contains an		      |	[DTLS](#abbr_DTLS) session*, *silently discard the record*\] if a
invalid MAC or if decryption fails in the case of GCM and other AEAD		      |	message received contains an invalid MAC or if decryption fails in the
ciphersuites[.](#ajq_373){#ajq_373}						      |	case of [GCM](#abbr_GCM) and other AEAD ciphersuites.
										      >	:::
										      >	:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      |	::: {.element-activity-header}
::: {.eacategory}								      |	[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1)
TSS										      <
:::											:::

The evaluator shall verify that the TSS describes the actions that take		      <
place if a message received from the DTLS client fails the MAC integrity	      <
check[.](#ajq_374){#ajq_374}							      <
										      <
::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall establish a connection using a				      |	The evaluator shall perform the evaluation activities listed for
client[.](#ajq_375){#ajq_375} The evaluator will then modify at least		      |	[FCS\_TLSS\_EXT.1.1](#FCS_TLSS_EXT.1.1), but ensuring that
one byte in a record message, and verify that the server discards the		      |	[DTLS](#abbr_DTLS) (and not [TLS](#abbr_TLS)) is used in each stage of
record or terminates the DTLS session[.](#ajq_376){#ajq_376}			      |	the evaluation activities.\
:::										      |	\
:::										      |	For tests which involve version numbers, note that in [DTLS](#abbr_DTLS)
:::										      |	the on-the-wire representation is the 1\'s complement of the
:::										      |	corresponding textual [DTLS](#abbr_DTLS) version numbers. This is
:::										      |	described in Section 4.1 of [RFC](#abbr_RFC) 6347 and [RFC](#abbr_RFC)
										      |	4347. For example, [DTLS](#abbr_DTLS) 1.0 is represented by the bytes
::: {#FCS_DTLSS_EXT.2 .comp}							      |	0xfe 0xff, while the undefined [DTLS](#abbr_DTLS) 1.4 would be
#### FCS\_DTLSS\_EXT.2 DTLS Server Support for Mutual Authentication		      |	represented by the bytes 0xfe 0xfb.\
										      <
::: {.statustag}								      <
***This selection-based component depends upon selection in			      <
***[FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1)***[.](#ajq_377){#ajq_377}***	      <
:::										      <

::: {.element}									      |	::: {.element-activity-header}
::: {#FCS_DTLSS_EXT.2.1 .reqid}							      |	[FCS\_DTLSS\_EXT.1.2](#FCS_DTLSS_EXT.1.2)
[FCS\_DTLSS\_EXT.2.1](#FCS_DTLSS_EXT.2.1){.abbr}				      <
:::											:::

::: {.reqdesc}									      |	The following evaluation activities shall be conducted unless \"none\"
The product shall support mutual authentication of DTLS clients using		      |	is assigned.
X.509v3 certificates[.](#ajq_378){#ajq_378}					      <

::: {.appnote}									      |	::: {.eacategory}
[Application Note: ]{.note-header}[ All application notes listed for		      |	[TSS](#abbr_TSS)
[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1){.linkref} that are relevant to		      <
DTLS apply to this requirement[.](#ajq_379){#ajq_379} ]{.note}			      <
:::											:::

::: {.activity_pane .hide}							      |	The evaluator shall verify that the [TSS](#abbr_TSS) contains a
::: {.activity_pane_header}							      |	description of the denial of old [DTLS](#abbr_DTLS) versions consistent
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	relative to selections in [FCS\_DTLSS\_EXT.1.2](#FCS_DTLSS_EXT.1.2).\
										      >
										      >	::: {.eacategory}
										      >	Guidance
:::											:::

::: {.activity_pane_body}							      |	The evaluator shall verify that the AGD guidance includes any
										      >	configuration necessary to meet this requirement.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the evaluation activities listed for		      |	-   **Test 1:** The evaluator shall send a Client Hello requesting a
[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1){.linkref}[.](#ajq_380){#ajq_380}	      |	    connection with each version of [DTLS](#abbr_DTLS) specified in the
:::										      |	    selection and verify that the server denies the connection.
:::										      <
:::										      <
:::										      <
										      <
::: {.element}									      <
::: {#FCS_DTLSS_EXT.2.2 .reqid}							      <
[FCS\_DTLSS\_EXT.2.2](#FCS_DTLSS_EXT.2.2){.abbr}				      <
:::										      <

::: {.reqdesc}									      |	\
The product shall not establish a trusted channel if the client			      <
certificate is invalid[.](#ajq_381){#ajq_381}					      <

::: {.appnote}									      |	::: {.element-activity-header}
[Application Note: ]{.note-header}[ All application notes listed for		      |	[FCS\_DTLSS\_EXT.1.3](#FCS_DTLSS_EXT.1.3)
[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2){.linkref} that are relevant to		      <
DTLS apply to this requirement[.](#ajq_382){#ajq_382} ]{.note}			      <
:::											:::

::: {.activity_pane .hide}							      |	::: {.eacategory}
::: {.activity_pane_header}							      |	[TSS](#abbr_TSS)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      |	The evaluator shall verify that the [TSS](#abbr_TSS) describes how the
										      >	[DTLS](#abbr_DTLS) Client [IP](#abbr_IP) address is validated prior to
										      >	issuing a ServerHello message.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the evaluation activities listed for		      |	Modify at least one byte in the cookie from the Server\'s
[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2){.linkref}[.](#ajq_383){#ajq_383}	      |	HelloVerifyRequest message, and verify that the Server rejects the
:::										      |	Client\'s handshake message.\
:::										      |
:::										      |	::: {.element-activity-header}
										      >	[FCS\_DTLSS\_EXT.1.4](#FCS_DTLSS_EXT.1.4)
:::											:::

::: {.element}									      |	::: {.eacategory}
::: {#FCS_DTLSS_EXT.2.3 .reqid}							      |	Tests
[FCS\_DTLSS\_EXT.2.3](#FCS_DTLSS_EXT.2.3){.abbr}				      <
:::											:::

::: {.reqdesc}									      |	The evaluator shall perform the evaluation activities listed for
The product shall not establish a trusted channel if the Distinguished		      |	[FCS\_TLSS\_EXT.1.3](#FCS_TLSS_EXT.1.3).\
Name (DN) or Subject Alternative Name (SAN) contained in a certificate		      <
does not match one of the expected identifiers for the				      <
client[.](#ajq_384){#ajq_384}							      <

::: {.appnote}									      |	::: {.element-activity-header}
[Application Note: ]{.note-header}[ All application notes listed for		      |	[FCS\_DTLSS\_EXT.1.5](#FCS_DTLSS_EXT.1.5)
[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3){.linkref} that are relevant to		      <
DTLS apply to this requirement[.](#ajq_385){#ajq_385} ]{.note}			      <
:::											:::

::: {.activity_pane .hide}							      |	::: {.eacategory}
::: {.activity_pane_header}							      |	[TSS](#abbr_TSS)
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::

::: {.activity_pane_body}							      |	The evaluator shall verify that the [TSS](#abbr_TSS) describes the
										      >	actions that take place if a message received from the
										      >	[DTLS](#abbr_DTLS) client fails the MAC integrity check.\

::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall perform the evaluation activities listed for		      |	The evaluator shall establish a connection using a client. The evaluator
[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3){.linkref}[.](#ajq_386){#ajq_386}	      |	will then modify at least one byte in a record message, and verify that
										      >	the server discards the record or terminates the [DTLS](#abbr_DTLS)
										      >	session.\
:::											:::
:::											:::
:::											:::
:::										      <
:::										      <
										      <
Appendix C - Objective Requirements {#objective .indexable data-level="A"}	      <
===================================						      <

This appendix includes requirements that specify security functionality		      |	::: {#FCS_DTLSS_EXT.2 .comp}
which also addresses threats[.](#ajq_387){#ajq_387} The requirements are	      |	#### FCS\_DTLSS\_EXT.2 DTLS Server Support for Mutual Authentication
not currently mandated in the body of this Package as they describe		      <
security functionality not yet widely-available in commercial			      <
technology[.](#ajq_388){#ajq_388} However, these requirements may be		      <
included in the ST such that the product is still conformant to this		      <
Package, and it is expected that they be included as soon as			      <
possible[.](#ajq_389){#ajq_389}							      <

::: {#FCS_TLSC_EXT.3 .comp}							      |	::: {.statustag}
#### FCS\_TLSC\_EXT.3 TLS Client Support for Signature Algorithms Extension	      |	***The inclusion of this selection-based component depends upon
										      >	selection in [FCS\_DTLSS\_EXT.1.1](#FCS_DTLSS_EXT.1.1).***
										      >	:::

::: {.element}										::: {.element}
::: {#FCS_TLSC_EXT.3.1 .reqid}							      |	::: {#FCS_DTLSS_EXT.2.1 .reqid}
[FCS\_TLSC\_EXT.3.1](#FCS_TLSC_EXT.3.1){.abbr}					      |	[FCS\_DTLSS\_EXT.2.1](#FCS_DTLSS_EXT.2.1){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall present the signature\_algorithms extension in the		      |	The product shall support mutual authentication of [DTLS](#abbr_DTLS)
Client Hello with the supported\_signature\_algorithms value containing		      |	clients using X.509v3 certificates.
the following hash algorithms: \[**selection**: *SHA256*, *SHA384*,		      <
*SHA512*\] and no other hash algorithms[.](#ajq_390){#ajq_390}			      <

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ This requirement limits the hashing		      |	[Application Note: ]{.note-header}[ All application notes listed for
algorithms supported for the purpose of digital signature verification		      |	[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1) that are relevant to
by the client and limits the server to the supported hashes for the		      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
purpose of digital signature generation by the					      <
server[.](#ajq_391){#ajq_391} The signature\_algorithms extension is		      <
only supported by TLS 1.2[.](#ajq_392){#ajq_392} ]{.note}			      <
:::										      <
										      <
::: {.activity_pane .hide}							      <
::: {.activity_pane_header}							      <
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      <
:::											:::
										      <
::: {.activity_pane_body}							      <
										      <
::: {.eacategory}								      <
TSS										      <
:::											:::
										      <
The evaluator shall verify that [TSS](#abbr_TSS){.abbr} describes the		      <
signature\_algorithm extension and whether the required behavior is		      <
performed by default or may be configured[.](#ajq_393){#ajq_393}		      <
										      <
::: {.eacategory}								      <
Guidance									      <
:::											:::

If the [TSS](#abbr_TSS){.abbr} indicates that the signature\_algorithm		      |	::: {.element}
extension must be configured to meet the requirement, the evaluator		      |	::: {#FCS_DTLSS_EXT.2.2 .reqid}
shall verify that AGD guidance includes configuration of the			      |	[FCS\_DTLSS\_EXT.2.2](#FCS_DTLSS_EXT.2.2){.abbr}
signature\_algorithm extension[.](#ajq_394){#ajq_394}\				      <
										      <
::: {.eacategory}								      <
Tests										      <
:::											:::

The evaluator shall also perform the following tests:				      |	::: {.reqdesc}
										      >	The product shall not establish a trusted channel if the client
										      >	certificate is invalid.

-   **Test 1:** The evaluator shall configure the server to send a		      |	::: {.appnote}
    certificate in the TLS connection that is not supported according to	      |	[Application Note: ]{.note-header}[ All application notes listed for
    the Client\'s HashAlgorithm enumeration within the				      |	[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2) that are relevant to
    signature\_algorithms extension (for example, send a certificate		      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
    with a SHA-1 signature)[.](#ajq_395){#ajq_395} The evaluator shall		      <
    verify that the product disconnects after receiving the server\'s		      <
    Certificate handshake message[.](#ajq_396){#ajq_396}			      <
-   **Test 2:** \[conditional\] If the client supports a DHE or ECDHE		      <
    cipher suite, the evaluator shall configure the server to send a Key	      <
    Exchange handshake message including a signature not supported		      <
    according to the client\'s HashAlgorithm enumeration (for example,		      <
    the server signed the Key Exchange parameters using a SHA-1			      <
    signature)[.](#ajq_397){#ajq_397} The evaluator shall verify that		      <
    the product disconnects after receiving the server\'s Key Exchange		      <
    handshake message[.](#ajq_398){#ajq_398}					      <
:::										      <
:::										      <
:::											:::
:::											:::
:::											:::

::: {#FCS_TLSS_EXT.3 .comp}							      <
#### FCS\_TLSS\_EXT.3 TLS Server Support for Signature Algorithms Extension	      <
										      <
::: {.element}										::: {.element}
::: {#FCS_TLSS_EXT.3.1 .reqid}							      |	::: {#FCS_DTLSS_EXT.2.3 .reqid}
[FCS\_TLSS\_EXT.3.1](#FCS_TLSS_EXT.3.1){.abbr}					      |	[FCS\_DTLSS\_EXT.2.3](#FCS_DTLSS_EXT.2.3){.abbr}
:::											:::

::: {.reqdesc}										::: {.reqdesc}
The product shall present the HashAlgorithm enumeration in			      |	The product shall not establish a trusted channel if the Distinguished
supported\_signature\_algorithms in the Certificate Request with the		      |	Name ([DN](#abbr_DN)) or Subject Alternative Name ([SAN](#abbr_SAN))
following hash algorithms: \[**selection**: *SHA256*, *SHA384*,			      |	contained in a certificate does not match one of the expected
*SHA512*\] and no other hash algorithms[.](#ajq_399){#ajq_399}			      |	identifiers for the client.

::: {.appnote}										::: {.appnote}
[Application Note: ]{.note-header}[ This requirement limits the hashing		      |	[Application Note: ]{.note-header}[ All application notes listed for
algorithms supported for the purpose of digital signature verification		      |	[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3) that are relevant to
by the server and limits the client to the supported hashes for the		      |	[DTLS](#abbr_DTLS) apply to this requirement. ]{.note}
purpose of digital signature generation by the					      |	:::
client[.](#ajq_400){#ajq_400} The supported\_signature\_algorithms is		      |	:::
only supported by TLS 1.2[.](#ajq_401){#ajq_401} ]{.note}			      <
:::											:::

::: {.activity_pane .hide}								::: {.activity_pane .hide}
::: {.activity_pane_header}								::: {.activity_pane_header}
[[ Evaluation Activity ]{.activity_pane_label}[]{.toggler}](#)			      |	[[ Evaluation Activities ]{.activity_pane_label}[]{.toggler}](#)
:::											:::

::: {.activity_pane_body}								::: {.activity_pane_body}
										      >	::: {.element-activity-header}
										      >	[FCS\_DTLSS\_EXT.2.1](#FCS_DTLSS_EXT.2.1)
										      >	:::

::: {.eacategory}									::: {.eacategory}
TSS										      |	Tests
:::											:::

The evaluator shall verify that TSS describes the				      |	The evaluator shall perform the evaluation activities listed for
supported\_signature\_algorithms field of the Certificate Request and		      |	[FCS\_TLSS\_EXT.2.1](#FCS_TLSS_EXT.2.1).\
whether the required behavior is performed by default or may be			      <
configured[.](#ajq_402){#ajq_402}						      <

::: {.eacategory}								      |	::: {.element-activity-header}
Guidance									      |	[FCS\_DTLSS\_EXT.2.2](#FCS_DTLSS_EXT.2.2)
:::											:::

If the TSS indicates that the supported\_signature\_algorithms field		      <
must be configured to meet the requirement, the evaluator shall verify		      <
that AGD guidance includes configuration of the					      <
supported\_signature\_algorithms field[.](#ajq_403){#ajq_403}			      <
										      <
::: {.eacategory}									::: {.eacategory}
Tests											Tests
:::											:::

The evaluator shall also perform the following test:\				      |	The evaluator shall perform the evaluation activities listed for
The evaluator shall configure the server to send the				      |	[FCS\_TLSS\_EXT.2.2](#FCS_TLSS_EXT.2.2).\
signature\_algorithms extension in the Certificate Request message		      |
indicating that the hash algorithm used by the client's certificate is		      |	::: {.element-activity-header}
not supported[.](#ajq_404){#ajq_404} The evaluator shall attempt a		      |	[FCS\_DTLSS\_EXT.2.3](#FCS_DTLSS_EXT.2.3)
connection using that client certificate and verify that the server		      <
denies the client's connection[.](#ajq_405){#ajq_405}				      <
:::											:::
										      >
										      >	::: {.eacategory}
										      >	Tests
:::											:::
										      >
										      >	The evaluator shall perform the evaluation activities listed for
										      >	[FCS\_TLSS\_EXT.2.3](#FCS_TLSS_EXT.2.3).\
:::											:::
:::											:::
:::											:::

Appendix D - References {#biblio .indexable data-level="A"}			      |	Appendix C - Acronyms {#acronyms .indexable data-level="A"}
=======================								      |	=====================
										      >
										      >	  Acronym                                                                      Meanin
										      >	  ---------------------------------------------------------------------------- ------
										      >	  [[AES](#abbr_AES)]{#abbr_AES .term}                                          [Advan
										      >	  [[Base-PP](#abbr_Base-PP)]{#abbr_Base-PP .term}                              [Base 
										      >	  [[CA](#abbr_CA)]{#abbr_CA .term}                                             [Certi
										      >	  [[CA](#abbr_CA)]{#abbr_CA .term}                                             [Certi
										      >	  [[CBC](#abbr_CBC)]{#abbr_CBC .term}                                          [Ciphe
										      >	  [[CC](#abbr_CC)]{#abbr_CC .term}                                             [Commo
										      >	  [[CEM](#abbr_CEM)]{#abbr_CEM .term}                                          [Commo
										      >	  [[CN](#abbr_CN)]{#abbr_CN .term}                                             [Commo
										      >	  [[DHE](#abbr_DHE)]{#abbr_DHE .term}                                          [Diffi
										      >	  [[DN](#abbr_DN)]{#abbr_DN .term}                                             [Disti
										      >	  [[DNS](#abbr_DNS)]{#abbr_DNS .term}                                          [Domai
										      >	  [[DTLS](#abbr_DTLS)]{#abbr_DTLS .term}                                       [Datag
										      >	  [[EAP](#abbr_EAP)]{#abbr_EAP .term}                                          [Exten
										      >	  [[ECDHE](#abbr_ECDHE)]{#abbr_ECDHE .term}                                    [Ellip
										      >	  [[ECDSA](#abbr_ECDSA)]{#abbr_ECDSA .term}                                    [Ellip
										      >	  [[EP](#abbr_EP)]{#abbr_EP .term}                                             [Exten
										      >	  [[FP](#abbr_FP)]{#abbr_FP .term}                                             [Funct
										      >	  [[GCM](#abbr_GCM)]{#abbr_GCM .term}                                          [Galoi
										      >	  [[HTTP](#abbr_HTTP)]{#abbr_HTTP .term}                                       [Hyper
										      >	  [[IETF](#abbr_IETF)]{#abbr_IETF .term}                                       [Inter
										      >	  [[IP](#abbr_IP)]{#abbr_IP .term}                                             [Inter
										      >	  [[LDAP](#abbr_LDAP)]{#abbr_LDAP .term}                                       [Light
										      >	  [[NIST](#abbr_NIST)]{#abbr_NIST .term}                                       [Natio
										      >	  [[OE](#abbr_OE)]{#abbr_OE .term}                                             [Opera
										      >	  [[PP](#abbr_PP)]{#abbr_PP .term}                                             [Prote
										      >	  [[PP-Configuration](#abbr_PP-Configuration)]{#abbr_PP-Configuration .term}   [Prote
										      >	  [[PP-Module](#abbr_PP-Module)]{#abbr_PP-Module .term}                        [Prote
										      >	  [[RFC](#abbr_RFC)]{#abbr_RFC .term}                                          [Reque
										      >	  [[RSA](#abbr_RSA)]{#abbr_RSA .term}                                          [Rives
										      >	  [[SAN](#abbr_SAN)]{#abbr_SAN .term}                                          [Subje
										      >	  [[SAR](#abbr_SAR)]{#abbr_SAR .term}                                          [Secur
										      >	  [[SCSV](#abbr_SCSV)]{#abbr_SCSV .term}                                       [Signa
										      >	  [[SFR](#abbr_SFR)]{#abbr_SFR .term}                                          [Secur
										      >	  [[SHA](#abbr_SHA)]{#abbr_SHA .term}                                          [Secur
										      >	  [[SIP](#abbr_SIP)]{#abbr_SIP .term}                                          [Sessi
										      >	  [[ST](#abbr_ST)]{#abbr_ST .term}                                             [Secur
										      >	  [[TCP](#abbr_TCP)]{#abbr_TCP .term}                                          [Trans
										      >	  [[TLS](#abbr_TLS)]{#abbr_TLS .term}                                          [Trans
										      >	  [[TOE](#abbr_TOE)]{#abbr_TOE .term}                                          [Targe
										      >	  [[TSF](#abbr_TSF)]{#abbr_TSF .term}                                          [[TOE]
										      >	  [[TSFI](#abbr_TSFI)]{#abbr_TSFI .term data-plural="TSFIs"}                   [[TSF]
										      >	  [[TSS](#abbr_TSS)]{#abbr_TSS .term}                                          [[TOE]
										      >	  [[UDP](#abbr_UDP)]{#abbr_UDP .term}                                          [User 
										      >	  [[URI](#abbr_URI)]{#abbr_URI .term}                                          [Unifo
										      >	  [[URL](#abbr_URL)]{#abbr_URL .term}                                          [Unifo
										      >	  [[cPP](#abbr_cPP)]{#abbr_cPP .term data-plural="cPPs"}                       [Colla
										      >
										      >	Appendix D - Bibliography {#appendix-bibliography .indexable data-level="A"}
										      >	=========================

+-----------------------------------+-----------------------------------+		+-----------------------------------+-----------------------------------+
| Identifier                        | Title                             |		| Identifier                        | Title                             |
+===================================+===================================+		+===================================+===================================+
| [ \[CC\] ]{#bibCC}                | Common Criteria for Information   |	      |	| [\[[CC](#abbr_CC)\]]{#bibCC}      | Common Criteria for Information   |
|                                   | Technology Security Evaluation -  |		|                                   | Technology Security Evaluation -  |
|                                   |                                   |		|                                   |                                   |
|                                   | -   [Part 1: Introduction and     |		|                                   | -   [Part 1: Introduction and     |
|                                   |     General                       |		|                                   |     General                       |
|                                   |     Model](http://www.commoncrite |		|                                   |     Model](http://www.commoncrite |
|                                   | riaportal.org/cc),                |	      |	|                                   | riaportal.org/files/ccfiles/CCPAR |
										      >	|                                   | T1V3.1R5.pdf),                    |
|                                   |     CCMB-2017-04-001, Version 3.1 |		|                                   |     CCMB-2017-04-001, Version 3.1 |
|                                   |     Revision 5, April             |	      |	|                                   |     Revision 5, April 2017.       |
|                                   |     2017[.](#ajq_406){#ajq_406}   |	      <
|                                   | -   [Part 2: Security Functional  |		|                                   | -   [Part 2: Security Functional  |
|                                   |     Components](http://www.common |		|                                   |     Components](http://www.common |
|                                   | criteriaportal.org/cc),           |	      |	|                                   | criteriaportal.org/files/ccfiles/ |
										      >	|                                   | CCPART2V3.1R5.pdf),               |
|                                   |     CCMB-2017-04-002, Version 3.1 |		|                                   |     CCMB-2017-04-002, Version 3.1 |
|                                   |     Revision 5, April             |	      |	|                                   |     Revision 5, April 2017.       |
|                                   |     2017[.](#ajq_407){#ajq_407}   |	      <
|                                   | -   [Part 3: Security Assurance   |		|                                   | -   [Part 3: Security Assurance   |
|                                   |     Components](http://www.common |		|                                   |     Components](http://www.common |
|                                   | criteriaportal.org/cc),           |	      |	|                                   | criteriaportal.org/files/ccfiles/ |
										      >	|                                   | CCPART3V3.1R5.pdf),               |
|                                   |     CCMB-2017-04-003, Version 3.1 |		|                                   |     CCMB-2017-04-003, Version 3.1 |
|                                   |     Revision 5, April             |	      |	|                                   |     Revision 5, April 2017.       |
|                                   |     2017[.](#ajq_408){#ajq_408}   |	      <
+-----------------------------------+-----------------------------------+		+-----------------------------------+-----------------------------------+
										      <
Appendix E - Acronyms {#acronyms .indexable data-level="A"}			      <
=====================								      <
										      <
  Acronym   Meaning								      <
  --------- ------------------------------------------------			      <
  AES       Advanced Encryption Standard					      <
  CA        Certificate Authority						      <
  CBC       Cipher Block Chaining						      <
  CN        Common Name								      <
  DHE       Diffie-Hellman Ephemeral						      <
  DN        Distinguished Name							      <
  DNS       Domain Name Server							      <
  DTLS      Datagram Transport Layer Security					      <
  EAP       Extensible Authentication Protocol					      <
  ECDHE     Elliptic Curve Diffie-Hellman Ephemeral				      <
  ECDSA     Elliptic Curve Digital Signature Algorithm				      <
  GCM       Galois/Counter Mode							      <
  HTTP      Hypertext Transfer Protocol						      <
  IETF      Internet Engineering Task Force					      <
  IP        Internet Protocol							      <
  LDAP      Lightweight Directory Access Protocol				      <
  NIST      National Institute of Standards and Technology			      <
  RFC       Request for Comment (IETF)						      <
  RSA       Rivest Shamir Adelman						      <
  SAN       Subject Alternative Name						      <
  SCSV      Signaling Cipher Suite Value					      <
  SHA       Secure Hash Algorithm						      <
  SIP       Session Initiation Protocol						      <
  TCP       Transmission Control Protocol					      <
  TLS       Transport Layer Security						      <
  UDP       User Datagram Protocol						      <
  URI       Uniform Resource Identifier						      <
  URL       Uniform Resource Locator						      <
