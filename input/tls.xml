<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="..\transformspp2html.xsl"?>
<?xml-model href="https://raw.githubusercontent.com/commoncriteria/transforms/master/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<PP boilerplate="yes" target-product="General-Purpose Computing Platforms" xmlns="https://niap-ccevs.org/cc/v1" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:cc="https://niap-ccevs.org/cc/v1" xmlns:sec="https://niap-ccevs.org/cc/v1/section">
  <PPReference>
    <ReferenceTable>
      <PPTitle>DRAFT Protection Profile for General-Purpose Computing Platforms DRAFT</PPTitle>
      <PPVersion>2.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2025-05-19</PPPubDate>
      <Keywords/>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>0.1</version>
      <date>2020-11-16</date>
      <subject>Started</subject>
    </entry>
    <entry>
      <version>1.0</version>
      <date>2022-02-10</date>
      <subject>Initial publication.</subject>
    </entry>
    <entry>
      <version>1.1</version>
      <date>2024-12-13</date>
      <subject>Updates for CC:2022</subject>
    </entry>
    <entry>
      <version>2.0</version>
      <date>2025-01-13</date>
      <subject>Draft: Incorporate TRRTs</subject>
    </entry>
  </RevisionHistory>
  <include-pkg id="pkg-tls">
    <git>
      <url>https://github.com/commoncriteria/tls</url>
      <branch>release-2.1</branch>
    </git>
    <url>https://www.niap-ccevs.org/static_html/protection-profile/465/Functional%20Package%20for%20Transport%20Layer%20Security/index.html</url>
    <depends on-sel="sel-itc-tls"/>
    <depends on-sel="sel-itc-https"/>
  </include-pkg>
  <include-pkg id="pkg-ssh">
    <git>
      <url>https://github.com/commoncriteria/ssh</url>
      <branch>release-2.0</branch>
    </git>
    <url>https://www.niap-ccevs.org/static_html/protection-profile/459/459/pkg_ssh_v1.0.htm</url>
    <depends on-sel="sel-itc-ssh"/>
    <depends on-sel="sel-fia-uau-5-ssh"/>
  </include-pkg>
  <include-pkg id="pkg-x509">
    <git>
      <url>https://github.com/commoncriteria/x509</url>
      <branch>release-1.0</branch>
    </git>
    <url>https://commoncriteria.github.io/X509/master/X509-release.html</url>
    <depends on-sel="sel-fia-uau-5-x509"/>
    <depends on-sel="sel-itc-certauth"/>
    <depends on-sel="sel-ipsec-rsa-auth"/>
    <depends on-sel="sel-ipsec-ecdsa-auth"/>
  </include-pkg>
  <pp-preferences><!--          <pp-pref name="display-audit-with-sfrs">0</pp-pref>   --><audit-events-in-sfrs/></pp-preferences>
  <sec:Introduction >
    <sec:Overview>The scope of this Protection Profile (PP) is to describe the security functionality of General-Purpose Computing Platforms in terms of the Common Criteria and to define functional and assurance requirements for such products.<h:p/> A platform is a collection of hardware devices and firmware that provide the functional capabilities and services needed by tenant software. Such components typically include embedded controllers, trusted platform modules, management controllers, host processors, network interface controllers, graphics processing units, flash memory, storage controllers, storage devices, boot firmware, runtime firmware, human interface devices, and a power supply.<h:p/> This Protection Profile for General-Purpose Computing Platforms derives requirements from the following documents:<h:ul><h:li>NIST SP 800-147<h:i>BIOS Protection Guidelines</h:i> , April 2011</h:li> <h:li>NIST SP 800-147B<h:i>BIOS Protection Guidelines for Servers</h:i> , August 2014</h:li> <h:li>NIST SP 800-193<h:i>Platform Firmware Resiliency Guidelines</h:i> , May 2018</h:li> </h:ul> <h:p/> Additionally, the following specifications and standards may be relevant to requirements in this PP:<h:ul><h:li>NIST SP 800-155 (Draft)<h:i>BIOS Integrity Measurement Guidelines (Draft)</h:i> , December 2011</h:li> <h:li>NIST SP 1800-34 (Draft)<h:i>Validating the Integrity of Computing Devices</h:i> , December 2022</h:li> <h:li>Trusted Computing Group,<h:i>TCG PC Client Platform Firmware Integrity Measurement</h:i> Version 1.0 Revision Specification 43 Family 2.0, May 7, 2021</h:li> <h:li>IEEE Std 802.1AR-2018,<h:i>Secure Device Identity</h:i> </h:li> </h:ul> </sec:Overview>
    <tech-terms>
      <suppress>Distributed TOE</suppress>
      <term full="Administrator">
			An Administrator is responsible for management activities, including setting policies that are 
			applied by the enterprise on the platform. An Administrator can act remotely through a management server,
			from which the platform receives configuration policies and updates. An Administrator can enforce
			settings on the system that cannot be overridden by non-Administrator users.
		</term>
      <term full="American National Standards Institute" abbr="ANSI">
			A private organization that oversees development of standards in the United States. 
		</term>
      <term full="Application">
			Software that runs on a platform and performs tasks on behalf of the user
			or owner of the platform. 
		</term>
      <term full="Application Programming Interface" abbr="API">
			A specification of routines, data structures, object classes, and variables
			that allows an application to make use of services provided by another software
			component, such as a library. APIs are often provided for a set of libraries included
			with the platform.
		</term>
      <term full="Baseboard Management Controller" abbr="BMC">
			Or Management Controller. A small computer generally found on Server motherboards that performs management tasks 
			on behalf of an Administrator.</term>
      <term full="Cipher-based Message Authentication Code" abbr="CMAC">
			A mode of AES that provides authentication, but not confidentiality.</term>
      <term full="Credential">
			Data that establishes the identity of a user, e.g. a cryptographic key or password.
		</term>
      <term full="Critical Security Parameters" abbr="CSP">
			Information that is either user or system defined and
			is used to operate a cryptographic module in processing encryption functions including
			cryptographic keys and authentication data, such as passwords, the disclosure or modification
			of which can compromise the security of a cryptographic module or the security of the
			information protected by the module.
		</term>
      <term full="Commercial Solutions for Classified" abbr="CSfC">
			An US Department of Defense program for delivering cybersecurity solutions that leverage commercial 
			technologies and products. 
		</term>
      <term full="Data-at-Rest  Protection">
			Countermeasures that prevent attackers, even those with physical access, from extracting data from non-volatile storage.
			Common techniques include data encryption and wiping.
		</term>
      <term full="Developer">
			An entity that manufactures platform hardware or writes platform software/firmware. For the purposes of 
			this document, vendors and developers are the same.
		</term>
      <term full="Diffie-Hellman Key Exchange" abbr="DH">
			A cryptographic key exchange protocol using public/private key pairs.
		</term>
      <term full="Distinguished Name" abbr="DN">
			Information used in certificate-based operations to uniquely identify a person, organization, or business.
		</term>
      <term full="General Purpose Operating System">
			A class of OS designed to support a wide-variety of workloads consisting of many concurrent applications or
			services. Typical characteristics for OSes in this class include support for third-party applications,
			support for multiple users, and security separation between users and their respective resources.
		</term>
      <term full="End-User Device" abbr="EUD">
			A class of computing platform characterized by having a user interface for a single user. Often, EUDs are 
			portable (e.g., laptop, tablet, mobile device), but this is not necessarily the case (e.g., desktop PC). 
		</term>
      <term full="General-Purpose Computing Platform" abbr="GPCP">
			A physical computing platform designed to support general-purpose operating systems, virtualization 
			systems, and applications.
		</term>
      <term full="Internet of Things" abbr="IoT">
			Physical computing devices that are embedded with sensors, processing ability, software, 
			and other technologies that connect and exchange data with other devices and systems over 
			communications networks.</term>
      <term full="Joint Test Action Group" abbr="JTAG">
			A standard for verifying and testing circuit boards after manufacture.</term>
      <term full="KECCAK Message Authentication Code" abbr="KMAC">
			A variable-length keyed hash function described in NIST SP 800-185.</term>
      <term full="Management Controller" abbr="MC">
			Or Baseboard Management Controller (BMC). A small computer generally found on server motherboards that performs management tasks 
			on behalf of an Administrator.</term>
      <term full="Open Mobile Terminal Platform" abbr="OMTP">
			A forum created by mobile network operators to discuss standards with manufacturers of mobile devices.
		</term>
      <term full="Operating System" abbr="OS">
			Software that manages physical and logical resources and provides services
			for applications. Operating systems are the generally the primary tenant of a GPCP.
		</term>
      <term full="Physical Presence">
			A user or administrator having physical access to the TOE. An assertion of physical presence
			can take the form, for example, of requiring entry of a password at a boot screen, unlocking 
			of a physical lock (e.g., a motherboard jumper), or inserting a USB cable before permitting
			platform firmware to be updated.
		</term>
      <term full="Root of Trust" abbr="RoT">
			Roots of trust are highly reliable hardware, firmware, and software components that perform 
			specific, critical security functions. Roots of trust are the foundation for integrity of 
			computing devices.
		    </term>
      <term full="Subject Alternative Name" abbr="SAN">
			An extended X.509 certificate field.
		</term>
      <term full="Sensitive Data">
			Sensitive data may include all user or enterprise data or may be specific
			application data such as PII, emails, messaging, documents, calendar items, and contacts.
			Sensitive data must minimally include credentials and keys. 
		</term>
      <term full="Tenant Software">
			Software that runs on and is supported by a platform. In the case of a GPCP, tenant software generally
			consists of an operating system, virtualization system, or "bare-metal" application.
		</term>
      <term full="Trusted Execution Environment" abbr="TEE">
			An isolated and secure area that ensures the confidentiality and integrity of code and data 
			loaded inside.
		</term>
      <term full="User">
			In the context of a GPCP, a User is a human who interacts with the platform through a user interface.
			Users do not need to be authenticated by the platform to use the platform, but generally authenticate to tenant
			software such as on Operating System.
		</term>
      <term full="Virtualization System" abbr="VS">
			A software product that enables multiple independent computing systems to execute on the same physical
			hardware platform without interference from one other.
		</term>
      <term full="Advanced Encryption Standard" abbr="AES"/>
      <term full="Asymmetric Key" abbr="AK"/>
      <term full="Biometric Authentication Factor" abbr="BAF"/>
      <term full="Common Names" abbr="CN"/>
      <term full="Certificate Revocation List" abbr="CRL"/>
      <term full="Data-at-Rest" abbr="DAR"/>
      <term full="Deterministic Random Bit Generator" abbr="DRBG"/>
      <term full="Digital Signature Standard" abbr="DSS"/>
      <term full="Datagram Transport Layer Security" abbr="DTLS"/>
      <term full="Elliptic Curve Diffie-Hellman Ephemeral" abbr="ECDHE"/>
      <term full="Elliptic Curve Digital Signature Algorithm" abbr="ECDSA"/>
      <term full="Elliptic Curve Integrated Encryption Scheme" abbr="ECIES"/>
      <term full="Federal Information Processing Standards" abbr="FIPS"/>
      <term full="Fully Qualified Domain Name" abbr="FQDN"/>
      <term full="Hash-based Message Authentication Code" abbr="HMAC"/>
      <term full="Hypertext Transfer Protocol Secure" abbr="HTTPS"/>
      <term full="International Electrotechnical Commission" abbr="IEC"/>
      <term full="Institute of Electrical and Electronics Engineers" abbr="IEEE"/>
      <term full="Internet Protocol" abbr="IP"/>
      <term full="International Organization for Standardization" abbr="ISO"/>
      <term full="Information Technology" abbr="IT"/>
      <term full="Information Technology Security Evaluation Facility" abbr="ITSEF"/>
      <term full="Key-Derivation Function" abbr="KDF"/>
      <term full="Message Authentication Code" abbr="MAC"/>
      <term full="National Institute of Standards and Technology" abbr="NIST"/>
      <term full="Original Equipment Manufacturer" abbr="OEM"/>
      <term full="Object Identifier" abbr="OID"/>
      <term full="Online Certificate Status Protocol" abbr="OCSP"/>
      <term full="Password-based Key-Derivation Function" abbr="PBKDF"/>
      <term full="Public Key Cryptography Standards" abbr="PKCS"/>
      <term full="Random Bit Generator" abbr="RBG"/>
      <term full="Request for Comment" abbr="RFC"/>
      <term full="Random Number Generator" abbr="RNG"/>
      <term full="Security Association" abbr="SA"/>
      <term full="Secure Hash Algorithm" abbr="SHA"/>
      <term full="Security Policy Database" abbr="SPD"/>
      <term full="Secure Shell" abbr="SSH"/>
      <term full="Symmetric Key" abbr="SK"/>
      <term full="Software Identification" abbr="SWID"/>
      <term full="Transport Layer Security" abbr="TLS"/>
      <term full="Universal Serial Bus" abbr="USB"/>
      <term full="Virtual Private Network" abbr="VPN"/>
      <term full="Exclusive Or" abbr="XOR"/>
      <term full="eXtensible Configuration Checklist Description Format" abbr="XCCDF"/>
    </tech-terms>
    <section title="Compliant Targets of Evaluation" id="TOEdescription"/>
    <sec:Use_Cases>
      This Protection Profile supports several use cases. The cases enumerated below add requirements to the baseline for GPCP due to additional threats or changes in assumptions about the operational environment. Use cases not listed below (e.g. consumer-grade desktop, laptop, and tablet computers) need be evaluated only against the baseline requirements subject to the appropriate selections.<h:p/> The requirements associated with some use case encompass those of other use cases. In these situations, a TOE that meets the larger set of requirements meets both use cases. Specifically<h:ul><h:li>a TOE that meets<xref to="uc-server-enhanced"/> also meets<xref to="uc-server-secureenv"/> </h:li> <h:li>a TOE that meets<xref to="uc-csfc-eud"/> also meets<xref to="uc-client-portable-enhanced"/> </h:li> <h:li>a TOE that meets<xref to="uc-tactical-eud"/> also meets<xref to="uc-client-portable-enhanced"/> .</h:li> </h:ul> 
      <usecases>
        <usecase title="Server-Class Platform, Physically Secure Environment" id="uc-server-secureenv">
          <description>
					This use case encompasses server-class hardware in a data center. There are 
					no additional physical protections required because the platform is assumed to be protected 
					by the operational environment as indicated by A.PHYSICAL_PROTECTION.
					The platform is administered using a management controller 
					that is accessed remotely or through a console.
					This use case adds audit requirements and Administrator authentication requirements to 
					the base mandatory requirements.
				</description>
        </usecase>
        <usecase title="Server-Class Platform, Enhanced Security Requirements" id="uc-server-enhanced">
          <description>
					This use case adds physical protections to the base requirements for server-class hardware.
					Additional physical protections are required because the platform is assumed to 
					not be protected by the operational environment, or because of enhanced security requirements 
					imposed by data center or operational policies.
					This use case adds requirements for audit, physical protections, and Administrator 
					authentication to the base mandatory SFRs. 
					It removes the assumption that the TOE is physically protected by the OE.</description>
        </usecase>
        <usecase title="Portable Clients (laptops, tablets), Enhanced Security Requirements" id="uc-client-portable-enhanced">
          <description>
					This use case adds physical protections to the base requirements for portable clients or end-user 
					devices. It is intended for devices are used in high-assurance scenarios.
				</description>
        </usecase>
        <usecase title="CSfC EUD" id="uc-csfc-eud">
          <description>Modified to address TRRT 1560
					EUDs used in accordance with the CSfC Mobile Access Capability Package can include 
					smart phones, tablets, desktops, and laptops. This use case covers the basic CSfC requirements 
					for EUDs other than modile devices (mobile devices are out of scope for this PP).CSfC requires that users maintain physical control of EUDs at all times.
					This use case adds requirements for audit and for protection of debug ports
					.
					The CSfC Use Case requires that End User Devices prohibit the use of removable
					media either through configuration, policy, or physical modification.
				</description>
        </usecase>
        <usecase title="Tactical EUD" id="uc-tactical-eud">
          <description>
					This use case adds requirements for portable end user computing devices in a tactical
					environment. 
				</description>
        </usecase>
        <usecase title="Enterprise Desktop clients" id="uc-ent-clients-desktop">
          <description>
					This use case covers the requirements for non-portable desktop computing devices in a low-threat
					enterprise physical environment.
					This use case adds only audit to the base mandatory SFRs.
				</description>
        </usecase>
      </usecases>
    </sec:Use_Cases>
  </sec:Introduction>
  <sec:Conformance_Claims  boilerplate="no">
    <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale" cc-errata="v1.1">
      <cc-st-conf>exact</cc-st-conf>
      <cc-pt2-conf>extended</cc-pt2-conf>
      <cc-pt3-conf>extended</cc-pt3-conf>
      <cc-pp-conf/>
      <cc-pp-config-with/>
      <cc-pkg-claim>
        <FP-cc-ref conf="conformant">Functional Package for Secure Shell (SSH) Version 2.0</FP-cc-ref>
        <FP-cc-ref conf="conformant">Functional Package for Transport Layer Security Version 2.1</FP-cc-ref>
        <FP-cc-ref conf="conformant">Functional Package for X.509 Version 1.0</FP-cc-ref>
      </cc-pkg-claim>
    </CClaimsInfo>
  </sec:Conformance_Claims>
  <!-- 3.0 Security Problem Definition-->
  <sec:Security_Problem_Definition >
    The security problem is described in terms of the threats that the GPCP is expected to address, assumptions about the operational environment, and any organizational security policies that the GPCP is expected to enforce.<h:p/> The platform has three major security responsibilities:<h:ul><h:li>ensuring the integrity of its own firmware and hardware</h:li> <h:li>ensuring that it is resilient</h:li> <h:li>providing security services to tenant workloads</h:li> </h:ul> These responsibilities manifest as protecting:<h:ul><h:li>Platform firmware and hardware</h:li> <h:li>Platform firmware updates</h:li> <h:li>Tenant initialization (boot)</h:li> </h:ul> 
    <!-- 3.1 Threats -->
    <sec:Threats><threats><threat name="T.NETWORK_BASED_ATTACK"><description>An attacker from off the TOE can attempt to compromise the TOEthrough a network interface connected to an active TOE component, suchas a management subsystem.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that audit data indicating a potential attack is accurately timestamped.</rationale><addressed-by>FCS_OTV_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by using one-time values to increase the effectiveness of cryptographic functions used to protect against attack.</rationale><addressed-by>FCS_CKM.1/AKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic asymmetric keys to protect data in transit.</rationale><addressed-by>FCS_CKM.1/SKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic symmetric keys to protect data in transit.</rationale><addressed-by>FCS_CKM.2 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key establishment to negotiate trusted channels to protect data in transit.</rationale><addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key destruction to prevent the compromise of trusted channels.</rationale><addressed-by>FCS_CKM_EXT.7 (sel-based)</addressed-by><rationale>Mitigates threat by implementing MAC functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by implementing hash functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/KAT (sel-based)</addressed-by><rationale>Mitigates threat by implementing key agreement and transport functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature generation functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature verification functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by implementing symmetric encryption functions used for trusted communications.</rationale><addressed-by>FAU_GEN.1 (sel-based)</addressed-by><rationale>Mitigates threat by generating audit records that could provide evidence of attack or misuse.</rationale><addressed-by>FCS_HTTPS_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by implementing HTTPS as a means to protect data in transit.</rationale><addressed-by>FCS_IPSEC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by implementing IPsec as a means to protect data in transit.</rationale><addressed-by>FTP_ITC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that sensitive data in transit uses trusted protocols.</rationale><addressed-by>FTP_ITE_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that sensitive data transmitted over untrusted channels is encrypted prior to transit.</rationale><addressed-by>FTP_ITP_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by using a physically protected channel to protect data in transit.</rationale><addressed-by>FAU_SAR.1 (sel-based)</addressed-by><rationale>Mitigates threat by recording audit data in a manner that could be interpreted to discover evidence of attack.</rationale><addressed-by>FAU_STG.1 (sel-based)</addressed-by><rationale>Mitigates threat by using an external server to preserve audit data that may provide evidence of an attack.</rationale><addressed-by>FAU_STG.2 (sel-based)</addressed-by><rationale>Mitigates threat by preventing audit records indicating a potential attack from being destroyed.</rationale><addressed-by>FAU_STG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that exhaustion of audit storage does not prevent audit data indicating a potential attack from being generated.</rationale><addressed-by>FTP_TRP.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that remote administration only uses trusted channels.</rationale></threat><threat name="T.PERSISTENCE"><description>An attacker might be able to establish a permanent presence on the TOE infirmware. This could result in permanent compromise of tenant information, aswell as TOE updates. This threat does not encompass attacker presence in tenantsoftware, as tenant software is not part of the TOE. </description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_ROT_EXT.1</addressed-by><rationale>Mitigates threat by providing platform integrity to prevent intrusion of a persistent presence on the platform.</rationale><addressed-by>FPT_RVR_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat with firmware recovery mechanism in case of failure.</rationale><addressed-by>FCS_STG_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing access control on key data to prevent its unauthorized disclosure.</rationale></threat><threat name="T.PHYSICAL"><description>An attacker with physical access might be able to compromise TOE integrity, subvertTOE protections, or access tenant data through hardware attacks such as probing, physicalmanipulation, fault-injection, side-channel analysis, environmental stress, or activatingdisabled features or pre-delivery services. This threat is mitigated by TOE functionality for the use cases listed below; for other use cases, the expectation is that the environmental security objectives are sufficient mitigation for this threat.   Server-Class Platform, EnhancedPortable Clients (laptops, tablets), EnhancedCSfC EUDTactical EUD</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_JTA_EXT.1</addressed-by><rationale>Mitigates threat by restricting access to debug ports to authorized Administrators or physical presence.</rationale><addressed-by>FPT_ROT_EXT.3 (objective)</addressed-by><rationale>Mitigates threat by ensuring integrity of physical components and responding to integrity failures.</rationale><addressed-by>FPT_JTA_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing access control to debug ports.</rationale><addressed-by>FPT_PHP.1 (sel-based/objective)</addressed-by><rationale>Mitigates threat by passively detecting physical tampering.</rationale><addressed-by>FPT_PHP.2 (sel-based/objective)</addressed-by><rationale>Mitigates threat by providing methods to detect and report physical tampering.</rationale><addressed-by>FPT_PHP.3 (sel-based)</addressed-by><rationale>Mitigates threat by resisting physical tampering.</rationale></threat><threat name="T.SECURITY_FUNCTIONALITY_FAILURE"><description>An attacker could leverage failed or compromised security functionality to access, change, or modify tenant data, TOE data, or other security functionalityof the device.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FCS_STG_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by generating keys/secrets and storing them in a secure manner, as well as destroying them on request.</rationale><addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by using appropriate key destruction methods to protect the confidentiality of credential data.</rationale><addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by generating digital signatures with strong encryption.</rationale><addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by establishing strong symmetric-key cryptography.</rationale><addressed-by>FPT_FLS.1 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring a DRBG self-test failure causes the TOE to enter an error state where it cannot perform secure functions using that DRBG.</rationale><addressed-by>FDP_ITC_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by importing keys and credentials in a secure fashion.</rationale><addressed-by>FCS_RBG.1 (sel-based)</addressed-by><rationale>Mitigates threat by performing random-bit generation with sufficient complexity.</rationale><addressed-by>FCS_RBG.2 (sel-based)</addressed-by><rationale>Mitigates threat by using an external seed source to ensure sufficiently strong random-bit generation.</rationale><addressed-by>FCS_RBG.3 (sel-based)</addressed-by><rationale>Mitigates threat by using an internal seed source to ensure sufficiently strong random-bit generation.</rationale><addressed-by>FCS_RBG.4 (sel-based)</addressed-by><rationale>Mitigates threat by using multiple internal seed sources to ensure sufficiently strong random-bit generation.</rationale><addressed-by>FCS_RBG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that each noise source's random data is combined to ensure strong entropy when multiple sources are used.</rationale><addressed-by>FPT_TST.1 (sel-based)</addressed-by><rationale>Mitigates threat by using self-tests to ensure correct operation of the DRBG.</rationale></threat><threat name="T.SIDE_CHANNEL_LEAKAGE"><description>An attacker running in a tenant context might be able to leverage physicaleffects caused by the operation of the TOE to derive sensitive information aboutother tenants or the TOE.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_TUD_EXT.1</addressed-by><rationale>Mitigates threat by providing a means to eliminate side-channel flaws through updates.</rationale></threat><threat name="T.TENANT_BASED_ATTACK"><description>An attacker running software as a tenant can attempt to access or modifyTOE firmware or functionality. Note that direct tenant attacks against othertenants are not encompassed by this threat as they are out of scope.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that audit data indicating a potential attack is accurately timestamped.</rationale><addressed-by>FCS_RBG.6 (optional)</addressed-by><rationale>Mitigates threat by providing a well-defined interface by which tenant software can access the TSF to obtain random data.</rationale><addressed-by>FCS_OTV_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by using one-time value to increase the effectiveness of cryptographic functions used to protect against attack.</rationale><addressed-by>FDP_TEE_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by establishing a trusted execution environment for tenant software to use.</rationale><addressed-by>FCS_CKM.1/AKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic asymmetric keys to protect stored data.</rationale><addressed-by>FCS_CKM.1/SKG (sel-based)</addressed-by><rationale>Mitigates threat by generating strong cryptographic symmetric keys to protect stored data.</rationale><addressed-by>FCS_CKM.5 (sel-based)</addressed-by><rationale>Mitigates threat by utilizing strong algorithms to derive keys that protect stored data.</rationale><addressed-by>FCS_CKM.6 (sel-based)</addressed-by><rationale>Mitigates threat by implementing key destruction to prevent the disclosure of keys used to protect stored data.</rationale><addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by implementing hash functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/KeyedHash (sel-based)</addressed-by><rationale>Mitigates threat by implementing MAC functions used for trusted communications.</rationale><addressed-by>FCS_COP.1/SigGen (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature generation functions used for protected storage.</rationale><addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by implementing signature verification functions used for protected storage.</rationale><addressed-by>FCS_COP.1/SKC (sel-based)</addressed-by><rationale>Mitigates threat by implementing symmetric encryption functions used for protected storage.</rationale><addressed-by>FAU_GEN.1 (sel-based)</addressed-by><rationale>Mitigates threat by generating audit records that could provide evidence of attack or misuse.</rationale><addressed-by>FAU_SAR.1 (sel-based)</addressed-by><rationale>Mitigates threat by recording audit data in a manner that could be interpreted to discover evidence of attack.</rationale><addressed-by>FAU_STG.1 (sel-based)</addressed-by><rationale>Mitigates threat by using an external server to preserve audit data that may provide evidence of an attack.</rationale><addressed-by>FAU_STG.2 (sel-based)</addressed-by><rationale>Mitigates threat by preventing audit records indicating a potential attack from being destroyed.</rationale><addressed-by>FAU_STG.5 (sel-based)</addressed-by><rationale>Mitigates threat by ensuring that exhaustion of audit storage does not prevent audit data indicating a potential attack from being generated.</rationale><addressed-by>FCS_STG_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by using cryptography to protect the confidentiality of key data from outside access.</rationale><addressed-by>FCS_STG_EXT.3 (sel-based)</addressed-by><rationale>Mitigates threat by using cryptography to protect the integrity of key data from outside modification.</rationale></threat><threat name="T.UNAUTHORIZED_PLATFORM_ADMINISTRATOR"><description>An attacker might be able to attain platform administrator status by defeating or bypassingauthentication measures.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_STM.1</addressed-by><rationale>Mitigates threat by ensuring that time-based authentication throttling or lockout is accurately enforced.</rationale><addressed-by>FIA_TRT_EXT.1 (optional)</addressed-by><rationale>Mitigates threat by throttling authentication to prevent access via brute force.</rationale><addressed-by>FIA_AFL_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by limiting further authentication attempts once a failure threshold of a critical authentication mechanism has been reached.</rationale><addressed-by>FIA_PMG_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by enforcing password complexity requirements to prevent credentials from being easily guessed.</rationale><addressed-by>FIA_UAU.5 (sel-based)</addressed-by><rationale>Mitigates threat by implementing multiple authentication mechanisms for accessing the TSF.</rationale><addressed-by>FIA_UAU.7 (sel-based)</addressed-by><rationale>Mitigates threat by preventing disclosure of authentication data during authentication attempts.</rationale></threat><threat name="T.UNAUTHORIZED_RECONFIGURATION"><description>An attacker might be able to modify the configuration of the TOE and alter its functionality. This might include, activating dormant subsystems, disabling hardware assists,or altering boot-time behaviors.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FMT_CFG_EXT.1</addressed-by><rationale>Mitigates threat by preventing knowledge of a default credential from being used to access the TSF without authorization.</rationale><addressed-by>FMT_MOF.1</addressed-by><rationale>Mitigates threat by permitting management functions to be used only by authorized users.</rationale><addressed-by>FMT_SMF.1</addressed-by><rationale>Mitigates threat by specifying the management functions implemented by the TSF.</rationale><addressed-by>FMT_SMR.1</addressed-by><rationale>Mitigates threat by defining the management roles which can be used to grant access to management functions.</rationale><addressed-by>FIA_UIA_EXT.1 (sel-based)</addressed-by><rationale>Mitigates threat by preventing the TSF from being modified by an unauthenticated subject.</rationale></threat><threat name="T.UPDATE_COMPROMISE"><description>An attacker may attempt to provide a compromised update of TOE firmware. Such updates can undermine the security functionality of the device if they areunauthorized, unauthenticated, or are improperly validated using non-secure orweak cryptography.</description><!-- New mapping to build updated threat mapping table. --><addressed-by>FPT_PPF_EXT.1</addressed-by><rationale>Mitigates threat by using the official update process to be the only method to modify platform firmware.</rationale><addressed-by>FPT_ROT_EXT.2</addressed-by><rationale>Mitigates threat by providing a means to attest the validity of updates.</rationale><addressed-by>FCS_COP.1/Hash (sel-based)</addressed-by><rationale>Mitigates threat by providing a means to validate the integrity of an update using a hash.</rationale><addressed-by>FCS_COP.1/SigVer (sel-based)</addressed-by><rationale>Mitigates threat by providing a means to validate the integrity of an update using a hash.</rationale><addressed-by>FPT_TUD_EXT.2 (sel-based)</addressed-by><rationale>Mitigates threat by using a digital signature mechanism to verify the integrity of updates and a rollback protection mechanism to prevent application of an unauthorized update.</rationale><addressed-by>FPT_TUD_EXT.3 (sel-based)</addressed-by><rationale>Mitigates threat by using the TOE's root of trust to validate the authenticity and integrity of an update when it is applied.</rationale><addressed-by>FPT_TUD_EXT.4 (sel-based)</addressed-by><rationale>Mitigates threat through an update mechanism that requires physical access to the TOE to use.</rationale></threat></threats></sec:Threats>
    <!-- 3.2 Assumptions -->
    <sec:Assumptions>
      <assumptions>
        <assumption name="A.CORRECT_INITIAL_CONFIGURATION">
          <description>It is assumed that the initial setup and configuration of the TOE at its operational 
					site is correct and in accordance with organizational security policy and operational use case.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
						A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.MFR_ROT">
          <description> The root signing credential of the manufacturer is assumed to be secure and has not been 
					compromised.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
						A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PHYSICAL_PROTECTION">
          <description>The TOE is assumed to be physically protected in its operational environment and
					thus is not subject to physical attacks that could compromise its security or its ability
					to support the security of tenant workloads. This assumption does not apply if the TOE
					implements any of the below, in which case physical protection from the 
					Operational Environment is not assumed and the threat T.PHYSICAL and its
					associated TOE Objectives apply:
					Server-Class Platform, EnhancedPortable Clients (laptops, tablets), EnhancedCSfC EUDTactical EUD</description>
          <objective-refer ref="OE.PHYSICAL_PROTECTION">
            <rationale> The operational environment objective OE.PHYSICAL_PROTECTION is realized through
						A.PHYSICAL_PROTECTION. </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.REGULAR_UPDATES">
          <description>It is assumed that the manufacturer provides updates to TOE firmware in a timely manner
					in response to known vulnerabilities, and that Administrators apply these updates when they are
					received.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
					A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.ROT_INTEGRITY">
          <description>The TOE includes one or more Roots of Trust composed of TOE firmware, hardware, and
					pre-installed credentials. Roots of Trust are assumed to be free of malicious capabilities as
					their integrity cannot be verified. </description>
          <objective-refer ref="OE.SUPPLY_CHAIN">
            <rationale>The operational environment objective OE.SUPPLY_CHAIN is realized through
					A.ROT_INTEGRITY.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.SUPPLY_CHAIN_SECURITY">
          <description>The hardware components that comprise the TOE are assumed to be non-hostile and not
					compromised at the time of TOE construction. Likewise, the TOE is assumed to retain its integrity
					throughout transportation until delivery to its operational site.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
						A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_ADMIN">
          <description> TOE Security Administrator are assumed to be trusted and to act in the best interest
					of security for the organization. The TOE is not expected to be capable of defending against a 
					malicious Administrator that actively works to bypass or compromise the security of the platform.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
					A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_DEVELOPMENT_AND_BUILD_PROCESSES">
          <description> The TOE cannot protect itself during its own development and build processes. Therefore
					it is assumed that the developers and participants in the build process are not hostile.
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
						A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.TRUSTED_USERS">
          <description>Physically present non-administrative users of the TOE are assumed to be trusted as 
					far as they are assumed to not be actively trying to subvert the system. (Not for all use cases).
				</description>
          <objective-refer ref="OE.TRUSTED_ADMIN">
            <rationale>The operational environment objective OE.TRUSTED_ADMIN is realized through
					A.TRUSTED_ADMIN.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
    <!-- 3.3 Organizational Security Policies -->
    <sec:Organizational_Security_Policies>
      <OSPs/>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Definition>
  <!-- 4.0 Security Objectives -->
  <sec:Security_Objectives >
    <!-- 4.1 Security Objectives for the TOE -->
    <!-- 4.2 Security Objctives for the Operational Environment -->
    <sec:Security_Objectives_for_the_Operational_Environment>
      The following security objectives for the operational environment assist the GPCP in correctly providing its security functionality. These track with the assumptions about the environment.
      <SOEs>
        <SOE name="OE.PHYSICAL_PROTECTION">
          <description>Platforms that operate within data centers or in other access-controlled environments are 
				expected to receive a considerable degree of protection from these environments. In addition to physical 
				protection, these environments often provide malware-detection and behavior-monitoring services
				for networked computing assets.</description>
        </SOE>
        <SOE name="OE.SUPPLY_CHAIN">
          <description>The manufacturer is expected to implement processes to ensure that TOE hardware and
					firmware is not compromised between time of TOE manufacture and delivery to its operational site. 
				</description>
        </SOE>
        <SOE name="OE.TRUSTED_ADMIN">
          <description> The administrator of the GPCP is not careless, willfully
					negligent or hostile, and administers the platform within compliance of enterprise
					security policy. </description>
        </SOE>
      </SOEs>
    </sec:Security_Objectives_for_the_Operational_Environment>
    <!-- 4.3 Security Objectives Rationale -->
    <sec:Security_Objectives_Rationale/>
  </sec:Security_Objectives>
  <!-- 5.0 Security Requirements -->
  <sec:Security_Requirements title="Security Requirements">
    <!-- 5.1 Security Functional Requirements-->
    <sec:SFRs title="Security Functional Requirements">
      <section id="ss-audit-table" title="Auditable Events for Mandatory SFRs"><audit-table id="t-audit-mandatory" table="mandatory"/></section>
      <!--5.1.1 Class: Security Audit (FAU)-->
      <section id="fau" title="Class: Security Audit (FAU)">
        <!--FAU_GEN.1 Audit Data Generation-->
        <f-component cc-id="fau_gen.1" id="sfr-fau-gen-1" name="Audit Data Generation" status="sel-based">
          <depends on-sel="sel-rot2-audit"/>
          <depends on-sel="sel-rot3-audit"/>
          <depends on-sel="sel-tud2-audit"/>
          <depends on-sel="sel-tud3-audit"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <depends on-use="uc-csfc-eud"/>
          <depends on-use="uc-ent-clients-desktop"/>
          <f-element id="fau-gen-1e1">
            <title>The TSF shall be able to generate audit data of the following auditable events:  <h:ol><h:li>Start-up and shutdown of the audit functions</h:li> <h:li>All administrative actions</h:li> <h:li>Start-up, shutdown, and reboot of the platform</h:li> <h:li>Specifically defined auditable events in<xref g="t-audit-mandatory"/> </h:li> <h:li> <selectables linebreak="yes"><selectable id="fau_gen.1.1_1" >Specifically defined auditable event in <xref g="t-audit-optional"/>for Strictly Optional requirements</selectable><selectable id="fau_gen.1.1_2" >Specifically defined auditable event in <xref g="t-audit-objective"/>for Objective requirements</selectable><selectable id="fau_gen.1.1_3" >Specifically defined auditable event in <xref g="t-audit-sel-based"/>for Selection-based requirements</selectable><selectable id="fau_gen.1.1_4" >Additional information defined in the audit table for the <xref to="pkg-tls"/></selectable><selectable id="fau_gen.1.1_5" >Additional information defined in the audit table for the <xref to="pkg-ssh"/></selectable><selectable id="fau_gen.1.1_6" exclusive="yes">no additional auditable events</selectable> </selectables> .</h:li></h:ol></title>
            <aactivity level="component">
              <TSS>The evaluator shall check the TSS and ensure that it lists all of the auditable events and provides a format for audit records. Each audit record format type shall be covered, along with a brief description of each field.</TSS>
              <Guidance>The evaluator shall also make a determination of the administrative actions that are relevant in the context of this PP. The evaluator shall examine the AGD and make a determination of which administrative commands, including subcommands, scripts, and configuration files, are related to the configuration (including enabling or disabling) of the mechanisms implemented in the TOE that are necessary to enforce the requirements claimed in the ST. The evaluator shall document the methodology or approach taken while determining which actions in the AGD are security-relevant with respect to this PP.</Guidance>
              <Tests>The evaluator shall test the TOE’s ability to correctly generate audit records by having the TOE generate audit records for the events listed and administrative actions. For administrative actions, the evaluator shall test that each action determined by the evaluator above to be security relevant in the context of this PP is auditable. When verifying the test results, the evaluator shall ensure the audit records generated during testing match the format specified in the administrative guide, and that the fields in each audit record have the proper entries. <h:p/>Note that the testing here can be accomplished in conjunction with the testing of the security mechanisms directly. <h:br/><h:br/></Tests>
            </aactivity>
          </f-element>
          <f-element id="fau-gen-1e2">
            <title>The TSF shall record within the audit data at least the following information:  <h:ol><h:li>Date and time of the event</h:li> <h:li>Type of event</h:li> <h:li>Subject and object identity (if applicable)</h:li> <h:li>The outcome (success or failure) of the event</h:li> <h:li>[<h:b>Additional information defined in<xref g="t-audit-mandatory"/> </h:b> ]</h:li> <h:li><h:b> <selectables linebreak="yes"><selectable id="fau_gen.1.2_1" >Additional information defined in <xref g="t-audit-optional"/>for Strictly Optional SFRs</selectable><selectable id="fau_gen.1.2_2" >Additional information defined in <xref g="t-audit-objective"/>for Objective SFRs</selectable><selectable id="fau_gen.1.2_3" >Additional information defined in <xref g="t-audit-sel-based"/>for Selection-Based SFRs</selectable><selectable id="fau_gen.1.2_4" >Additional information defined in the audit table for the <xref to="pkg-tls"/></selectable><selectable id="fau_gen.1.2_5" >Additional information defined in the audit table for the <xref to="pkg-ssh"/></selectable><selectable id="fau_gen.1.2_6" exclusive="yes">no other information</selectable> </selectables> .</h:b> </h:li></h:ol></title>
            <note role="application">The ST Author should include this SFR in the ST if the TOE generates audit events for integrity verification or boot failures as indicated by the appropriate selections in FPT_ROT_EXT.2, FPT_ROT_EXT.3, FPT_TUD_EXT.2, or FPT_TUD_EXT.3.4; or if the TOE supports the Server (basic or enhanced), CSfC EUD, or Enterprise Desktop use cases.<h:p/> If this SFR is included in the ST, then all the other FAU SFRs must also be claimed.<h:p/> Appropriate entries from<xref g="t-audit-optional"/> ,<xref g="t-audit-objective"/> , and<xref g="t-audit-sel-based"/> should be included in the ST if the associated SFRs and selections are included.<h:p/> Specific auditable events required for SFRs from the functional packages are defined in the respective packages.<h:p/> </note>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FAU_SAR.1 Audit Review-->
        <f-component cc-id="fau_sar.1" id="sfr-fau-sar-1" name="Audit Review" status="sel-based">
          <depends on-incl="sfr-fau-gen-1"/>
          <f-element id="fau-sar-1e1">
            <title>The TSF shall provide <h:b>the Administrator</h:b>  with the capability to read <h:b>all audited events and record contents</h:b>  from the audit data.</title>
            <aactivity level="component">
              <TSS/>
              <Guidance>The evaluator shall review the AGD for the procedure on how to review the audit records.</Guidance>
              <Tests>The evaluator shall verify that the audit records provide all of the information specified in FAU_GEN.1 and that this information is suitable for human interpretation. The evaluation activity for this requirement is performed in conjunction with the evaluation activity for FAU_GEN.1.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fau-sar-1e2">
            <title>The TSF shall provide the audit data in a manner suitable for the <h:b>Administrator</h:b>  to interpret the information.</title>
            <note role="application">This SFR must be included in the ST if FAU_GEN.1 is claimed.</note>
          </f-element>
        </f-component>
        <!--FAU_STG.1 Audit Data Storage Location-->
        <f-component cc-id="fau_stg.1" id="sfr-fau-stg-1" name="Audit Data Storage Location" status="sel-based">
          <depends on-incl="sfr-fau-gen-1"/>
          <f-element id="fau-stg-1e1">
            <title>The TSF shall be able togenerated audit data on the <selectables><selectable id="fau_stg.1.1_1" ></selectable><selectable id="fau_stg.1.1_2" >transmit the generated audit data to an external IT entity using a trusted channel according to FTP_ITC_EXT.1</selectable><selectable id="sel-fau-stg-1e1-removable" >[removable media]</selectable> </selectables> </title>
            <note role="application">The ST Author must select "<h:i>trusted channel</h:i> " and include FTP_ITC_EXT.1 in the ST if the TOE offloads audit data to external IT entity over a network connection. Protocols used for implementing the trusted channel must be selected in FTP_ITC_EXT.1.<h:p/> The ST Author must select "<h:i>removable media</h:i> " if the TOE supports offload of audit data using removable media such as thumb drives or disks. Note that the CSfC Use Case prohibits the use of removable media.</note>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to ensure it describes the means by which the audit data are transferred to the external audit server.</TSS>
              <Guidance>If "trusted channel" is selected above, the evaluator shall examine the AGD to ensure it describes how to establish the trusted channel to the audit server, as well as describe any requirements on the audit server (particular audit server protocol, version of the protocol required, etc.), as well as configuration of the TOE needed to communicate with the audit server. Furthermore, it must describe whether the transfer mechanism is periodic or continuous, and what happens in the event of a loss of connectivity.<h:p/> If "removable media" is selected, the evaluator shall ensure that the AGD describes the process for accessing audit data and copying it to media. The AGD must also include high-level guidance on how frequently this operation may need to be done to minimize risk of data loss.</Guidance>
              <Tests>If "trusted channel" is selected above, testing of the trusted channel mechanism itself is to be performed as specified in the evaluation activities for FTP_ITC_EXT.1. In addition, the evaluator must perform the following test: <h:p/>The evaluator shall establish a session between the TOE and the audit server according to the configuration guidance provided. The evaluator shall then examine the traffic that passes between the audit server and the TOE during several activities of the evaluator’s choice designed to generate audit data to be transferred to the audit server. The evaluator shall observe that these data are not able to be viewed in the clear during this transfer, and that they are successfully received by the audit server. The evaluator shall record the particular software (name, version) used on the audit server during testing. <h:p/>If "removable media" is selected above, the evaluator must run the system for a time long enough to generate some audit data and then collect audit data onto removable media for transfer to another machine. On another machine, the evaluator shall examine the audit data to ensure that it appears to be complete and correct. This test may be performed in conjunction with any other requirement that generates audit events.</Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>On failure of logging function, capture record of failure and record upon restart of logging function.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FAU_STG.2 Protected Audit Trail Storage-->
        <f-component cc-id="fau_stg.2" id="sfr-fau-stg-2" name="Protected Audit Trail Storage" status="sel-based">
          <depends on-incl="sfr-fau-gen-1"/>
          <f-element id="fau-stg-2e1">
            <title>The TSF shall protect the stored audit data in the audit trail from unauthorized deletion.</title>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS lists the locations of all logs and the access controls of those files such that unauthorized modification and deletion are prevented.</TSS>
              <Guidance>The evaluator shall ensure that the AGD describes the steps necessary for an authorized administrator to delete audit records, if such a capability is implemented.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>[conditional] If the TOE implements an audit record deletion capability, then the evaluator shall attempt to delete the audit trail in a manner that the access controls should prevent (as an unauthorized user) and shall verify that the attempt fails.</test>
                  <test>The evaluator shall attempt to modify the audit trail in a manner that the access controls should prevent (as an unauthorized application) and shall verify that the attempt fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fau-stg-2e2">
            <title>The TSF shall be able to [ <h:i>prevent</h:i>  ] unauthorized modifications to the stored audit data in the audit trail.</title>
            <note role="application">This SFR must be included in the ST if FAU_GEN.1 is claimed.</note>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FAU_STG.5 Prevention of Audit Data Loss-->
        <f-component cc-id="fau_stg.5" id="sfr-fau-stg-5" name="Prevention of Audit Data Loss" status="sel-based">
          <depends on-incl="sfr-fau-gen-1"/>
          <f-element id="fau-stg-5e1">
            <title>The TSF shall [ <h:i>overwrite the oldest stored audit records</h:i>  ] if the audit data storage is full.</title>
            <note role="application">This SFR must be included in the ST if FAU_GEN.1 is claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it describes the size limits on the audit records, the detection of a full audit trail, and the action(s) taken by the TSF when the audit trail is full. The evaluator shall ensure that the action(s) results in the deletion or overwrite of the oldest stored record.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the means used by the TOE to indicate that the audit trail is full and overwrite is about to commence.</Guidance>
              <Tests>The evaluator shall cause audit records to be written until the size limits are met and exceeded. The evaluator shall verify that the overwrite function works as described in the TSS and that the indication of full audit trail is evident as described in the AGD.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      <!--5.1.2 Class: Cryptographic Support (FCS)-->
      <section id="fcs" title="Class: Cryptographic Support (FCS)">
        <ext-comp-def title="Cryptographic Key Management" fam-id="FCS_CKM_EXT">
          <fam-behavior>This family defines requirements for management of cryptographic keys. Add any FCS_CKM extended components here (FCS_CKM_EXT.7 and FCS_CKM_EXT.8) is necessary to express requirements for key derivation, which are missing from Part 2.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="HTTPS Protocol" fam-id="FCS_HTTPS_EXT">
          <fam-behavior>This family defines requirements for protecting HTTP communications between the TOE and an external IT entity.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="IPsec Protocol" fam-id="FCS_IPSEC_EXT">
          <fam-behavior>This family defines requirements for protecting communications using IPsec.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Cryptographic One-Time Value Generation" fam-id="FCS_OTV_EXT">
          <fam-behavior>This family defines requirements for generation of one-time values such as nonces, IVs, salts, and initialization counters.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Cryptographic Key Storage" fam-id="FCS_STG_EXT">
          <fam-behavior>This family defines requirements for ensuring the protection of keys and secrets.</fam-behavior>
        </ext-comp-def>
        <!--FCS_CKM.1/AKG Cryptographic Key Generation - Asymmetric Key-->
        <f-component cc-id="fcs_ckm.1" id="sfr-fcs-ckm-1-akg" name="Cryptographic Key Generation - Asymmetric Key" iteration="AKG" status="sel-based">
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-sel="sel-fcs-stg-ext-1e2-ak"/>
          <depends on-sel="sel-itc-tls"/>
          <depends on-sel="sel-itc-https"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-ckm-1e1-akg">
            <title>The TSF shall generate <h:b>asymmetric</h:b>  cryptographic keys in accordance with a specified cryptographic key generation algorithm<selectables><tabularize id="fcs-ckm-1-ak-sels" title="Recommended choices for FCS_CKM.1/AKG"><textcol>Identifier</textcol><selectcol>Cryptographic key generation algorithm</selectcol><reqtext>and specified cryptographic algorithm parameterskey sizes</reqtext><selectcol>Cryptographic algorithm parameters</selectcol><reqtext>that meet the following: </reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_CKM.1/AKG.</reqtext></tabularize><selectable id="sel-fcs-ckm-ak-rsa"><col>RSA</col><col>RSA</col><col>Modulus of size <selectables><selectable id="sel-exp-ak-rsa-2048" >2048</selectable><selectable id="sel-exp-ak-rsa-3072" >3072</selectable><selectable id="sel-exp-ak-rsa-4096" >4096</selectable> </selectables> bits</col><col>NIST FIPS PUB 186-5 (Section A.1.1)</col></selectable><selectable id="sel-fcs-ckm-ak-ecdsa-erb"><col>ECC-ERB</col><col>ECC-ERB - Extra Random Bits</col><col>Elliptic Curve <selectables><selectable id="sel-exp-ak-edcsa-erb-P256" >P-256</selectable><selectable id="sel-exp-ak-ecdsa-erb-brainpoolP256r1" >brainpoolP256r1</selectable><selectable id="sel-exp-ak-edcsa-erb-P384" >P-384</selectable><selectable id="sel-exp-ak-edcsa-erb-brainpoolP384r1" >brainpoolP384r1</selectable><selectable id="sel-exp-ak-edcsa-erb-P521" >P-521</selectable><selectable id="sel-exp-ak-edcsa-erb-brainpoolP512r1" >brainpoolP512r1</selectable> </selectables> </col><col>FIPS PUB 186-5 (Section A.2.1) <selectables><selectable id="fcs_ckm.1.1_AKG_1" >NIST SP 800-186 (Section 3) [NIST Curves]</selectable><selectable id="fcs_ckm.1.1_AKG_2" >RFC 5639 (Section 3) [Brainpool curves]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-ak-ecdsa-rs"><col>ECC-RS</col><col>ECC-RS - Rejection Sampling</col><col>Elliptic Curve <selectables><selectable id="sel-exp-ak-edcsa-rs-P256" >P-256</selectable><selectable id="sel-exp-ak-ecdsa-rs-brainpoolP256r1" >brainpoolP256r1</selectable><selectable id="sel-exp-ak-edcsa-rs-P384" >P-384</selectable><selectable id="sel-exp-ak-edcsa-rs-brainpoolP384r1" >brainpoolP384r1</selectable><selectable id="sel-exp-ak-edcsa-rs-P521" >P-521</selectable><selectable id="sel-exp-ak-edcsa-rs-brainpoolP512r1" >brainpoolP512r1</selectable> </selectables> </col><col>FIPS PUB 186-5 (Section A.2.2) <selectables><selectable id="fcs_ckm.1.1_AKG_3" >NIST SP 800-186 (Section 3) [NIST Curves]</selectable><selectable id="fcs_ckm.1.1_AKG_4" >RFC 5639 (Section 3) [Brainpool curves]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-ak-ffc-erb"><col>FFC-ERB</col><col>FFC-ERB - Extra Random Bits</col><col>Static domain parameters approved for <selectables><selectable id="fcs_ckm.1.1_AKG_5">IKE Groups <selectables><selectable id="sel-dp-ak-ffc-erb-modp2048" >MODP-2048</selectable><selectable id="sel-dp-ak-ffc-erb-modp3072" >MODP-3072</selectable><selectable id="sel-dp-ak-ffc-erb-modp4096" >MODP-4096</selectable><selectable id="sel-dp-ak-ffc-erb-modp6144" >MODP-6144</selectable><selectable id="sel-dp-ak-ffc-erb-modp8192" >MODP-8192</selectable></selectables> </selectable><selectable id="fcs_ckm.1.1_AKG_6">TLS Groups <selectables><selectable id="sel-dp-ak-ffc-erb-ffdhe2048" >ffdhe2048</selectable><selectable id="sel-dp-ak-ffc-erb-ffdhe3072" >ffdhe3072</selectable><selectable id="sel-dp-ak-ffc-erb-ffdhe4096" >ffdhe4096</selectable><selectable id="sel-dp-ak-ffc-erb-ffdhe6144" >ffdhe6144</selectable><selectable id="sel-dp-ak-ffc-erb-ffdhe8192" >ffdhe8192</selectable></selectables> </selectable> </selectables> </col><col>NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation] <selectables><selectable id="fcs_ckm.1.1_AKG_7" >RFC 3526 [IKE groups]</selectable><selectable id="fcs_ckm.1.1_AKG_8" >RFC 7919 [TLS groups]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-ak-ffc-rs"><col>FFC-RS</col><col>FFC-RS - Extra Random Bits</col><col>Static domain parameters approved for <selectables><selectable id="fcs_ckm.1.1_AKG_9">IKE Groups <selectables><selectable id="sel-dp-ak-ffc-rs-modp2048" >MODP-2048</selectable><selectable id="sel-dp-ak-ffc-rs-modp3072" >MODP-3072</selectable><selectable id="sel-dp-ak-ffc-rs-modp4096" >MODP-4096</selectable><selectable id="sel-dp-ak-ffc-rs-modp6144" >MODP-6144</selectable><selectable id="sel-dp-ak-ffc-rs-modp8192" >MODP-8192</selectable></selectables> </selectable><selectable id="fcs_ckm.1.1_AKG_10">TLS Groups <selectables><selectable id="sel-dp-ak-ffc-rs-ffdhe2048" >ffdhe2048</selectable><selectable id="sel-dp-ak-ffc-rs-ffdhe3072" >ffdhe3072</selectable><selectable id="sel-dp-ak-ffc-rs-ffdhe4096" >ffdhe4096</selectable><selectable id="sel-dp-ak-ffc-rs-ffdhe6144" >ffdhe6144</selectable><selectable id="sel-dp-ak-ffc-rs-ffdhe8192" >ffdhe8192</selectable></selectables> </selectable> </selectables> </col><col>NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation] <selectables><selectable id="fcs_ckm.1.1_AKG_11" >RFC 3526 [IKE groups]</selectable><selectable id="fcs_ckm.1.1_AKG_12" >RFC 7919 [TLS groups]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-ak-eddsa"><col>EdDSA</col><col>EdDSA</col><col>Domain parameters approved for elliptic curves <selectables><selectable id="fcs_ckm.1.1_AKG_13" >Edwards25519</selectable><selectable id="fcs_ckm.1.1_AKG_14" >Edwards448</selectable> </selectables> </col><col>NIST FIPS PUB 186-5 (Section 6.2.1) [key-pair generation]NIST SP 800-186 (Section 3.2.3) [Edwards Curves]</col></selectable><selectable id="sel-fcs-ckm-ak-lms"><col>LMS</col><col>LMS</col><col>Private key size = <selectables><selectable id="fcs_ckm.1.1_AKG_15">192 bits with <selectables><selectable id="fcs_ckm.1.1_AKG_16" >SHA-256/192</selectable><selectable id="fcs_ckm.1.1_AKG_17" >SHAKE256/192</selectable></selectables> </selectable><selectable id="fcs_ckm.1.1_AKG_18">256 bits with <selectables><selectable id="fcs_ckm.1.1_AKG_19" >SHA-256</selectable><selectable id="fcs_ckm.1.1_AKG_20" >SHAKE256</selectable></selectables> </selectable> </selectables> Winternitz parameter = <selectables><selectable id="fcs_ckm.1.1_AKG_21" >1</selectable><selectable id="fcs_ckm.1.1_AKG_22" >2</selectable><selectable id="fcs_ckm.1.1_AKG_23" >4</selectable><selectable id="fcs_ckm.1.1_AKG_24" >8</selectable> </selectables> Tree height = <selectables><selectable id="fcs_ckm.1.1_AKG_25" >5</selectable><selectable id="fcs_ckm.1.1_AKG_26" >10</selectable><selectable id="fcs_ckm.1.1_AKG_27" >15</selectable><selectable id="fcs_ckm.1.1_AKG_28" >20</selectable><selectable id="fcs_ckm.1.1_AKG_29" >25</selectable> </selectables> </col><col>RFC 8554 [LMS]NIST SP 800-208 [parameters]</col></selectable><selectable id="sel-fcs-ckm-ak-mlkem"><col>ML-KEM</col><col>ML-KEM KeyGen</col><col>Parameter set = ML-KEM-1024</col><col>NIST FIPS 203 (Section 7.1)</col></selectable><selectable id="sel-fcs-ckm-ak-mldsa"><col>ML-DSA</col><col>ML-DSA KeyGen</col><col>Parameter set = ML-DSA-87</col><col>NIST FIPS 204 (Section 5.1)</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if asymmetric key generation is a service provided by the TOE to tenant software, or if it is used by the TOE itself to support or implement PP-specified security functionality.<h:p/> Also, this SFR must be included in the ST if FCS_IPSEC_EXT.1 is claimed, or if "<h:i>causing the TOE to generate [asymmetric] keys/secrets</h:i> " is selected in FCS_STG_EXT.1.2.<h:p/> If this SFR is included in the ST, then FCS_CKM.6 and FCS_RBG.1 must also be claimed.<h:p/> For RSA the choice of the modulus implies the resulting key sizes of the public and private keys generated using the specified standard methods.<h:p/> For Finite Field Cryptography (FFC) DSA, ST authors should consult schemes for guidelines on use. FIPS PUB 186-5 does not approve DSA for digital signature generation but allows DSA for digital signature verification for legacy purposes. “FFC-ERB” or “FFC–RS” may be claimed only for generating private and public keys when “DH” is claimed in FCS_CKM_EXT.7.<h:p/> When generating ECC keys pairs for key agreement and if “ECDH” or “ECDH-Ed” is claimed in FCS_CKM_EXT.7, then “ECC–ERB” or “ECC–RS” must be claimed. The sizes of the private key, which is a scalar, and the public key, which is a point on the elliptic curve, are determined by the choice of the curve.<h:p/> When generating ECC key pairs for digital signature generation and if “ECDSA” is claimed in FCS_COP.1/SigGen, then “ECC–ERB” or “ECC–RS” must be claimed. The sizes of the private key, which is a scalar, and the public key, which is a point on the elliptic curve, are determined by the choice of the curve.<h:p/> When generating EdDSA key pairs for digital signatures and if “EdDSA” is claimed in FCS_COP.1/SigGen, then “EdDSA” must be claimed here. The chosen domain parameters determine the size of the private keys and the public keys.<h:p/> For LMS, the key sizes do not represent the expected security strength. All key sizes given here correspond to an expected security strength of 128 bits, per NIST SP 800-208. Also, SHA-256/192 is the preferred hash algorithm when feasible in accordance with CNSA 2.0.<h:p/> </note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to verify that it describes how the TOE generates a key based on output from a random bit generator as specified in FCS_RBG.1. The evaluator shall review the TSS to verify that it describes how the functionality described by FCS_RBG.1 is invoked.<h:p/> The evaluator shall examine the TSS to verify that it identifies the usage, and key lifecycle for keys generated using each selected algorithm.<h:p/> If the TOE uses the generated key in a key chain/hierarchy then the evaluator shall verify that the TSS describes how the key is used as part of the key chain/hierarchy.</TSS>
              <Guidance>The evaluator shall verify that the AGD instructs the administrator how to configure the TOE to generate keys for the selected key generation algorithms for all key types and uses identified in the TSS.</Guidance>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>RSA Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">RSA</h:td><h:td valign="top">RSA</h:td><h:td valign="top">Modulus of size [<h:b>selection:</h:b> 2048, 3072, 4096] bits</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section A.1.1)</h:td></h:tr></h:table> <h:p/>FIPS PUB 186-5 Key Pair generation specifies five methods for generating the primes <h:i>p</h:i>and <h:i>q</h:i>. <h:p/>These are: <h:ol><h:li>Random Provable primes</h:li> <h:li>Random Probable primes</h:li> <h:li>Provable primes with conditions based on auxiliary provable primes</h:li> <h:li>Probable primes with conditions based on auxiliary provable primes</h:li> <h:li>Probable primes with conditions based on auxiliary probable primes</h:li> </h:ol> <h:p/>In addition to the key generation method, the input parameters are: <h:ul><h:li>Modulus [2048, 3072, 4096]</h:li> <h:li>Hash algorithm [SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, SHA3-512] (methods 1, 3, 4 only)</h:li> <h:li>Rabin-Miller prime test [2<h:sup>100</h:sup> , 2<h:sup>Security String</h:sup> ] (methods 2, 4, 5 only)</h:li> <h:li><h:i>p</h:i> mod 8 value [0,1,3,5,7]</h:li> <h:li><h:i>q</h:i> mod 8 value [0,1,3,5,7]</h:li> <h:li>Private key format [standard, Chinese Remainder Theorem]</h:li> <h:li>Public exponent [fixed value, random]</h:li> </h:ul> <h:p/>The evaluator shall verify the ability of the TSF to correctly produce values for the RSA key components, including the public verification exponent <h:i>e</h:i>, the private prime factors <h:i>p</h:i>and <h:i>q</h:i>, the public modulus <h:i>n</h:i>and the calculation of the private signature exponent <h:i>d</h:i>. <h:p/> <h:br/><h:br/> <h:i><h:b>Testing for Random Provable Primes and Conditional Methods</h:b> </h:i> <h:p/>To test the key generation method for the Random Provable primes method and for all the Primes with Conditions methods (methods 1, 3-5), the evaluator must seed the TSF key generation routine with sufficient data to deterministically generate the RSA key pair. <h:p/>For each supported combination of the above input parameters, the evaluator shall have the TSF generate 25 key pairs. The evaluator shall verify the correctness of the TSF’s implementation by comparing values generated by the TSF with those generated by a known good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:i><h:b>Testing for Random Probable Primes Method</h:b> </h:i> <h:p/>If the TOE generates Random Probable Primes (method 2) then, if possible, the Random Probable primes method should also be verified against a known good implementation as described above. If verification against a known good implementation is not possible, the evaluator shall have the TSF generate 25 key pairs for each supported key length nlen and verify that all of the following are true: <h:p/> <h:ul><h:li><h:i>n</h:i> =<h:i>p</h:i> *<h:i>q</h:i> </h:li> <h:li><h:i>p</h:i> and<h:i>q</h:i> are probably prime according to Miller-Rabin tests with error probability &lt;2<h:sup>(-125)</h:sup> </h:li> <h:li>2<h:sup>16</h:sup> &lt;<h:i>e</h:i> &lt; 2<h:sup>256</h:sup> and<h:i>e</h:i> is an odd integer</h:li> <h:li>GCD(<h:i>p</h:i> -1,<h:i>e</h:i> ) = 1</h:li> <h:li>GCD(<h:i>q</h:i> -1,<h:i>e</h:i> ) = 1</h:li> <h:li>|<h:i>p</h:i> -<h:i>q</h:i> | > 2<h:sup>(<h:i>nlen</h:i> /2 – 100)</h:sup> </h:li> <h:li><h:i>p</h:i> ≥ squareroot(2)*( 2<h:sup>(<h:i>nlen</h:i> /2 -1)</h:sup> )</h:li> <h:li><h:i>q</h:i> ≥ squareroot(2)*( 2<h:sup>(<h:i>nlen</h:i> /2 -1)</h:sup> )</h:li> <h:li>2<h:sup>(<h:i>nlen</h:i> /2)</h:sup> &lt; d &lt; LCM(<h:i>p</h:i> -1,<h:i>q</h:i> -1)</h:li> <h:li>e*d = 1 mod LCM(<h:i>p</h:i> -1,<h:i>q</h:i> -1)</h:li> </h:ul> <h:br/><h:br/> <h:b>Eliptic Curve Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ECC-ERB</h:td><h:td valign="top">ECC - Extra Random Bits</h:td><h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section A.2.1)<h:p/> [<h:b>selection:</h:b> NIST SP 800-186 (Section 3) [NIST Curves], RFC 5639 (Section 3) [Brainpool curves]]</h:td></h:tr><h:tr><h:td valign="top">ECC-RS</h:td><h:td valign="top">ECC - Rejection Sampling</h:td><h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section A.2.2)<h:p/> [<h:b>selection:</h:b> NIST SP 800-186 (Section 3) [NIST Curves], RFC 5639 (Section 3) [Brainpool curves]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate asymmetric cryptographic keys using elliptic curves, the evaluator shall perform the ECC Key Generation Test and the ECC Key Validation Test using the following input parameters: <h:ul><h:li>Elliptic curve [P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:li> <h:li>Key pair generation method [extra random bits, rejection sampling]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>ECC Key Generation Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above input parameters the evaluator shall require the implementation under test to generate 10 private/public key pairs ( <h:i>d, Q</h:i>). The private key, <h:i>d</h:i>, shall be generated using a random bit generator as specified in FCS_RBG.1. The private key, <h:i>d</h:i>, is used to compute the public key, <h:i>Q’</h:i>. The evaluator shall confirm that 0&lt; <h:i>d</h:i>&lt; <h:i>n</h:i>(where <h:i>n</h:i>is the order of the group), and the computed value <h:i>Q’</h:i>is then compared to the generated public/private key pairs’ public key, <h:i>Q</h:i>, to confirm that <h:i>Q</h:i>is equal to <h:i>Q’</h:i>. <h:p/> <h:br/><h:br/> <h:i><h:b>ECC Key Validation Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above parameters the evaluator shall generate 12 private/public key pairs using the key generation function of a known-good implementation. For each set of 12 public keys, the evaluator shall modify four public key values by shifting <h:i>x</h:i>or <h:i>y</h:i>out of range by adding the order of the field and modify four other public key values by shifting <h:i>x</h:i>or <h:i>y</h:i>so that they are still in bounds, but not on the curve. The remaining public key values are left unchanged (i.e., correct). To determine correctness, the evaluator shall submit the public keys to the public key validation (PKV) function of the TOE and shall confirm that the results correspond as expected for the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>Finite Field Cryptography Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">FFC-ERB</h:td><h:td valign="top">FFC – Extra Random Bits</h:td><h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b> IKE groups [<h:b>selection:</h:b> MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b> ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]]]</h:td><h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.6.1.1.3) [key pair generation]<h:p/> [<h:b>selection:</h:b> RFC 3526 [IKE groups], RFC 7919 [TLS groups]]</h:td></h:tr><h:tr><h:td valign="top">FFC-RS</h:td><h:td valign="top">FFC – Rejection Sampling</h:td><h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b> IKE groups [<h:b>selection:</h:b> MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b> ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]]]</h:td><h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.6.1.1.4) [key pair generation]<h:p/> [<h:b>selection:</h:b> RFC 3526 [IKE groups], RFC 7919 [TLS groups]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate asymmetric cryptographic keys using finite fields, the evaluator shall perform the Safe Primes Generation Test and the Safe Primes Validation Test using the following input parameter: <h:ul><h:li>Fields/Groups [MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Safe Primes Generation Test</h:b> </h:i> <h:br/><h:br/>For each supported safe primes group, generate 10 key pairs. The evaluator shall verify the correctness of the TSF’s implementation by comparing values generated by the TSF with those generated by a known good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:i><h:b>Safe Primes Verification Test</h:b> </h:i> <h:br/><h:br/>For each supported safe primes group, use a known good implementation to generate 10 key pairs. For each set of 10, the evaluator shall modify three such that they are incorrect. The remaining values are left unmodified (i.e. correct). To determine correctness, the evaluator shall submit the key pairs to the public key validation (PKV) function of the TOE and shall confirm that the results correspond as expected for the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>Edwards Elliptic Curve Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">EdDSA</h:td><h:td valign="top">EdDSA</h:td><h:td valign="top">Domain parameters approved for elliptic curves [<h:b>selection:</h:b> Edwards25519, Edwards448]</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section 6.2.1) [key-pair generation]<h:p/> NIST SP 800-186 (Section 3.2.3) [Edwards Curves]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate asymmetric cryptographic keys using Edwards key generation, the evaluator shall perform the EdDSA Key Generation Test and the EdDSA Key Validation Test using the following input parameter: <h:ul><h:li>Elliptic curve [Edwards25519, Edwards448]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>EdDSA Key Generation Test</h:b> </h:i> <h:br/><h:br/>For each supported curve the evaluator shall require the implementation under test to generate 10 private/public key pairs ( <h:i>d, Q</h:i>). The private key, <h:i>d</h:i>, shall be generated using a random bit generator as specified in FCS_RBG.1. The private key, <h:i>d</h:i>, is used to compute the public key, <h:i>Q’</h:i>. The evaluator shall confirm that 0&lt; <h:i>d</h:i>&lt; <h:i>n</h:i>(where <h:i>n</h:i>is the order of the group), and the computed value <h:i>Q’</h:i>is then compared to the generated public/private key pairs’ public key, <h:i>Q</h:i>, to confirm that <h:i>Q</h:i>is equal to <h:i>Q’</h:i>. <h:p/> <h:br/><h:br/> <h:i><h:b>EdDSA Key Validation Test</h:b> </h:i> <h:br/><h:br/>For each supported curve, the evaluator shall generate 10 private/public key pairs using the key generation function of a known good implementation, For each set of 10 public keys the evaluator shall modify five public key values by shifting <h:i>x</h:i>or <h:i>y</h:i>so that they are still in bounds, but not on the curve. The remaining values are left unmodified (i.e. correct). To determine correctness, the evaluator shall submit the public keys to the public key validation (PKV) function of the TOE and shall confirm that the results correspond as expected for the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>LMS Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">LMS</h:td><h:td valign="top">LMS</h:td><h:td valign="top">Private key size = [<h:b>selection:</h:b> 192 bits with [<h:b>selection:</h:b> SHA-256/192, SHAKE256/192], 256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]], Winternitz parameter = [<h:b>selection:</h:b> 1, 2, 4, 8], and tree height = [<h:b>selection:</h:b> 5, 10, 15, 20, 25]</h:td><h:td valign="top">RFC 8554 [LMS]<h:p/> NIST SP 800-208 [parameters]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate asymmetric cryptographic keys using LMS, the evaluator shall perform the LMS Key Generation Test using the following input parameters: <h:ul><h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li> <h:li>Winternitz [1, 2, 4, 8]</h:li> <h:li>Tree height [5, 10, 15, 20, 25]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>LMS Key Generation Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the hash algorithm, Winternitz parameter, and tree height the evaluator shall generate one public key for each of the test cases. The number of test cases depends on the tree height: <h:p/> <h:b><h:div style="text-align: center;"><ctr ctr-type="Table" pre="Table " id="lms-test-cases">: Number of LMS Test Cases</ctr> </h:div></h:b> <h:table border="1" style="width:50%"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Height</h:td><h:td valign="top">Number of test cases</h:td></h:tr><h:tr><h:td valign="top">5</h:td><h:td valign="top">5</h:td></h:tr><h:tr><h:td valign="top">10</h:td><h:td valign="top">4</h:td></h:tr><h:tr><h:td valign="top">15</h:td><h:td valign="top">3</h:td></h:tr><h:tr><h:td valign="top">20</h:td><h:td valign="top">2</h:td></h:tr><h:tr><h:td valign="top">25</h:td><h:td valign="top">1</h:td></h:tr></h:table> <h:p/>The evaluator shall verify the correctness of the TSF’s implementation by comparing the public key generated by the TSF with that generated by a known good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>ML-DSA Key Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Key Generation Algorithm</h:td><h:td valign="top">Cryptographic Algorithm Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ML-DSA</h:td><h:td valign="top">ML-DSA Key Generation</h:td><h:td valign="top">Parameter set = ML-DSA-87</h:td><h:td valign="top">NIST FIPS PUB 204 (Section 5.1)</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate asymmetric cryptographic keys using ML-DSA, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Parameter set [ML-DSA-87]</h:li> <h:li>Random seed [32 bytes]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported parameter set the evaluator shall require the implementation under test to generate 25 key pairs using 25 different randomly generated 32-byte seed values. To determine correctness, the evaluator shall compare the resulting key pairs with those generated using a known-good implementation using the same inputs. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM.1/SKG Cryptographic Key Generation - Symmetric Key-->
        <f-component cc-id="fcs_ckm.1" id="sfr-fcs-ckm-1-skg" name="Cryptographic Key Generation - Symmetric Key" iteration="SKG" status="sel-based">
          <depends on-sel="sel-fcs-stg-ext-1e2-sk"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-ckm-1e1-skg">
            <title>The TSF shall generate <h:b>symmetric</h:b>  cryptographic keys in accordance with a specified cryptographic key generation algorithm<selectables><tabularize id="fcs-ckm-1-skg-sels" title="Recommended choices for FCS_CKM.1/SKG"><textcol>Identifier</textcol><selectcol>Cryptographic Key Generation Algorithm</selectcol><reqtext>and specified cryptographic key sizes</reqtext><selectcol>Cryptographic Key Sizes</selectcol><reqtext>that meet the following: </reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_CKM.1/SKG.</reqtext></tabularize><selectable id="sel-fcs-ckm-sk-rsk"><col>RSK</col><col>Direct Generation from a Random Bit Generator as specified in FCS_RBG.1</col><col> <selectables><selectable id="sel-exp-skg-128" >123</selectable><selectable id="sel-exp-skg-256" >256</selectable><selectable id="sel-exp-skg-512" >512</selectable> </selectables> bits</col><col>NIST SP 800-133 Revision 2 (Section 6.1)[Direct generation of symmetric keys]</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if it is a service provided by the TOE to tenant software, or if it is used by the TOE itself to support or implement PP-specified security functionality.<h:p/> This SFR must be included in the ST if "<h:i>causing the TOE to generate [symmetric] keys/secrets</h:i> " is selected in FCS_STG_EXT.1.2.<h:p/> If this SFR is included in the ST, then FCS_CKM.6 and FCS_RBG.1 must also be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to verify that it describes how the TOE obtains a symmetric cryptographic key through direct generation from a random bit generator as specified in FCS_RBG.1. The evaluator shall review the TSS to verify that it describes how the functionality described by FCS_RBG.1 is invoked.<h:p/> The evaluator shall examine the TSS to verify that it identifies the usage, and key lifecycle for keys generated using each selected algorithm.<h:p/> If the TOE uses the generated key in a key chain/hierarchy then the evaluator shall verify that the TSS describes how the key is used as part of the key chain/hierarchy.</TSS>
              <Guidance>The evaluator shall verify that the AGD instructs the administrator how to configure the TOE to use the RBG to generate symmetric keys for all uses identified in the ST.</Guidance>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/>To test the TOE’s ability to generate symmetric cryptographic keys using a random bit generator, the evaluator shall configure the asymmetric cryptographic key generation capability for each claimed key size. The evaluator shall use the description of the RBG interface to verify that the TOE requests and receives an amount of RBG output greater than or equal to the requested key size.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM.2 Cryptographic Key Distribution-->
        <f-component cc-id="fcs_ckm.2" id="sfr-fcs-ckm-2" name="Cryptographic Key Distribution" status="sel-based">
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-sel="sel-ftp-ite-ext-1-est"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-ckm-2e1">
            <title>The TSF shall distribute cryptographic keys in accordance with a specified cryptographic key distribution method <selectables><selectable id="sel-ckm-2-encap" >key encapsulation</selectable><selectable id="sel-ckm-2-wrap" >key wrapping</selectable><selectable id="fcs_ckm.2.1_1" >encrypted channels</selectable> </selectables> that meets the following: [none].</title>
            <note role="application">If “key encapsulation” is selected, FCS_COP.1/KeyEncap must be claimed, which specifies the relevant list of standards.<h:p/> If “key wrapping” is selected, FCS_COP.1/KeyWrap must be claimed, which specifies the relevant list of standards.<h:p/> If “encrypted channels” is selected, FTP_PRO.1 must be claimed, which specifies the relevant list of standards.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS documents that the security strength supported by the selected key distribution methods is sufficient for the security strength of the keys distributed through those methods.<h:p/> It is not necessary to identify the services that use each key distribution method here. That information should be documented in the requirements for the individual services and protocols that invoke key distribution.</TSS>
              <Guidance>The evaluator shall verify that the AGD guidance instructs the administrator how to configure the TOE to use the selected key distribution methods.</Guidance>
              <Tests>Specific testing for this component is covered by testing for the claimed components in FCS_COP.1/KeyEncap, FCS_COP.1/KeyWrap, or FTP_PRO.1.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM.5 Cryptographic Key Derivation-->
        <f-component cc-id="fcs_ckm.5" id="sfr-fcs-ckm-5" name="Cryptographic Key Derivation" status="optional">
          <f-element id="fcs-ckm-5e1">
            <title>The TSF shall derive cryptographic keys<selectables><tabularize id="fcs-ckm-keydrv-sels" title="Recommended choices for FCS_CKM.5"><selectcol>Key type</selectcol><reqtext>from</reqtext><selectcol>Input parameters</selectcol><reqtext>in accordance with a specified key derivation algorithm</reqtext><selectcol>Key derivation algorithm</selectcol><reqtext>and specified cryptographic key sizes</reqtext><selectcol>Key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_CKM.5.</reqtext></tabularize><selectable id="sel-fcs-ckm-5-kdf-ctr"><col>KDF-CTR</col><col> <selectables><selectable id="sel-fcs-ckm-5-kdf-ctr-dirgen" >Direct Generation from a Random Bit Generator as specified in FCS_RBG.1</selectable><selectable id="fcs_ckm.5.1_1" >Concatenated keys</selectable> </selectables> </col><col>KPF2 - KDF in Counter Mode using <selectables><selectable id="fcs_ckm.5.1_2" >AES-128-CMAC</selectable><selectable id="fcs_ckm.5.1_3" >AES-192-CMAC</selectable><selectable id="fcs_ckm.5.1_4" >AES-256-CMAC</selectable><selectable id="fcs_ckm.5.1_5" >HMAC-SHA-1</selectable><selectable id="fcs_ckm.5.1_6" >HMAC-SHA-256</selectable><selectable id="fcs_ckm.5.1_7" >HMAC-SHA-512</selectable> </selectables> as the PRF</col><col> <selectables><selectable id="fcs_ckm.5.1_8" >128</selectable><selectable id="fcs_ckm.5.1_9" >192</selectable><selectable id="fcs_ckm.5.1_10" >256</selectable><selectable id="fcs_ckm.5.1_11" >512</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_ckm.5.1_12" >ISO/IEC 11770-6:2016 (Subclause 7.3.2) [KPF2]</selectable><selectable id="fcs_ckm.5.1_13" >NIST SP 800-108 Revision 1 Update 1 (Section 4.1) [KDF in Counter Mode]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-5-kdf-fb"><col>KDF-FB</col><col> <selectables><selectable id="sel-fcs-ckm-5-kdf-fb-dirgen" >Direct Generation from a Random Bit Generator as specified in FCS_RBG.1</selectable><selectable id="fcs_ckm.5.1_14" >Concatenated keys</selectable> </selectables> </col><col>KPF3 - KDF in Feedback Mode using <selectables><selectable id="fcs_ckm.5.1_15" >AES-128-CMAC</selectable><selectable id="fcs_ckm.5.1_16" >AES-192-CMAC</selectable><selectable id="fcs_ckm.5.1_17" >AES-256-CMAC</selectable><selectable id="fcs_ckm.5.1_18" >HMAC-SHA-1</selectable><selectable id="fcs_ckm.5.1_19" >HMAC-SHA-256</selectable><selectable id="fcs_ckm.5.1_20" >HMAC-SHA-512</selectable> </selectables> as the PRF</col><col> <selectables><selectable id="fcs_ckm.5.1_21" >128</selectable><selectable id="fcs_ckm.5.1_22" >192</selectable><selectable id="fcs_ckm.5.1_23" >256</selectable><selectable id="fcs_ckm.5.1_24" >512</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_ckm.5.1_25" >ISO/IEC 11770-6:2016 (Subclause 7.3.3) [KPF3]</selectable><selectable id="fcs_ckm.5.1_26" >NIST SP 800-108 Revision 1 Update 1 (Section 4.2) [KDF in Feedback Mode]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-5-kdf-dpi"><col>KDF-DPI</col><col> <selectables><selectable id="sel-fcs-ckm-5-kdf-dpi-dirgen" >Direct Generation from a Random Bit Generator as specified in FCS_RBG.1</selectable><selectable id="fcs_ckm.5.1_27" >Concatenated keys</selectable> </selectables> </col><col>KDF in Double Pipeline Iteration Mode using <selectables><selectable id="fcs_ckm.5.1_28" >AES-128-CMAC</selectable><selectable id="fcs_ckm.5.1_29" >AES-192-CMAC</selectable><selectable id="fcs_ckm.5.1_30" >AES-256-CMAC</selectable><selectable id="fcs_ckm.5.1_31" >HMAC-SHA-1</selectable><selectable id="fcs_ckm.5.1_32" >HMAC-SHA-256</selectable><selectable id="fcs_ckm.5.1_33" >HMAC-SHA-512</selectable> </selectables> as the PRF</col><col> <selectables><selectable id="fcs_ckm.5.1_34" >128</selectable><selectable id="fcs_ckm.5.1_35" >192</selectable><selectable id="fcs_ckm.5.1_36" >256</selectable><selectable id="fcs_ckm.5.1_37" >512</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_ckm.5.1_38" >ISO/IEC 11770-6:2016 (Subclause 7.3.4) [KPF4]</selectable><selectable id="fcs_ckm.5.1_39" >NIST SP 800-108 Revision 1 Update 1 (Section 4.3) [KDF in Double-Pipeline Iteration Mode]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-5-kdf-xor"><col>KDF-XOR</col><col>More than one intermediary key</col><col>exclusive OR (XOR)</col><col> <selectables><selectable id="fcs_ckm.5.1_40" >128</selectable><selectable id="fcs_ckm.5.1_41" >192</selectable><selectable id="fcs_ckm.5.1_42" >256</selectable><selectable id="fcs_ckm.5.1_43" >512</selectable> </selectables> bits</col><col>N/A</col></selectable><selectable id="sel-fcs-ckm-5-kdf-enc"><col>KDF-ENC</col><col>Two keys</col><col>Encrypting using an algorithm specified in <selectables><selectable id="fcs_ckm.5.1_44" >FCS_COP.1/SKC</selectable><selectable id="fcs_ckm.5.1_45" >FCS_COP.1/AEAD</selectable> </selectables> </col><col> <selectables><selectable id="fcs_ckm.5.1_46" >128</selectable><selectable id="fcs_ckm.5.1_47" >192</selectable><selectable id="fcs_ckm.5.1_48" >256</selectable><selectable id="fcs_ckm.5.1_49" >512</selectable> </selectables> bits</col><col>N/A</col></selectable><selectable id="sel-fcs-ckm-5-kdf-hash"><col>KDF-HASH</col><col>Shared secret</col><col>Hash function from FCS_COP.1/Hash</col><col> <selectables><selectable id="fcs_ckm.5.1_50" >128</selectable><selectable id="fcs_ckm.5.1_51" >192</selectable><selectable id="fcs_ckm.5.1_52" >256</selectable><selectable id="fcs_ckm.5.1_53" >512</selectable> </selectables> bits</col><col>NIST SP 800-56C Revision 2 (Section 4.1, Option 1) [One-Step Key Derivation]</col></selectable><selectable id="sel-fcs-ckm-5-kdf-mac-1S"><col>KDF-MAC-1S</col><col>Shared secret, salt, IV, output length, fixed information</col><col>Keyed hash from FCS_COP.1/KeyedHash</col><col> <selectables><selectable id="fcs_ckm.5.1_54" >128</selectable><selectable id="fcs_ckm.5.1_55" >192</selectable><selectable id="fcs_ckm.5.1_56" >256</selectable><selectable id="fcs_ckm.5.1_57" >512</selectable> </selectables> bits</col><col>NIST SP 800-56C Revision 2 (Section 4.1, Options 2, 3) [One-Step Key Derivation]</col></selectable><selectable id="sel-fcs-ckm-5-kdf-mac-2S"><col>KDF-MAC-2S</col><col>Shared secret, salt, IV, output length, fixed information, and <selectables><selectable id="fcs_ckm.5.1_58" >auxiliary shared secret</selectable><selectable id="fcs_ckm.5.1_59" exclusive="yes">no other parameters</selectable> </selectables> </col><col>MAC Step <selectables><selectable id="fcs_ckm.5.1_60" >AES-128-CMAC</selectable><selectable id="fcs_ckm.5.1_61" >AES-192-CMAC</selectable><selectable id="fcs_ckm.5.1_62" >AES-256-CMAC</selectable><selectable id="fcs_ckm.5.1_63" >HMAC-SHA-1</selectable><selectable id="fcs_ckm.5.1_64" >HMAC-SHA-256</selectable><selectable id="fcs_ckm.5.1_65" >HMAC-SHA-512</selectable> </selectables> as randomness extraction and; KDF Step <selectables><selectable id="fcs_ckm.5.1_66" >KDF-CTR</selectable><selectable id="fcs_ckm.5.1_67" >KDF-FB</selectable><selectable id="fcs_ckm.5.1_68" >KDF-DPI</selectable> </selectables>.</col><col> <selectables><selectable id="fcs_ckm.5.1_69" >128</selectable><selectable id="fcs_ckm.5.1_70" >192</selectable><selectable id="fcs_ckm.5.1_71" >256</selectable><selectable id="fcs_ckm.5.1_72" >512</selectable> </selectables> bits</col><col>NIST SP 800-56C Revision 2 (Section 5) [Two-Step Key Derivation]</col></selectable><selectable id="sel-fcs-ckm-5-kdf-kmac"><col>KDF-KMAC</col><col>Key, context string, output length, label</col><col> <selectables><selectable id="fcs_ckm.5.1_73" >KMAC128</selectable><selectable id="fcs_ckm.5.1_74" >KMAC256</selectable> </selectables> </col><col> <selectables><selectable id="fcs_ckm.5.1_75" >128</selectable><selectable id="fcs_ckm.5.1_76" >192</selectable><selectable id="fcs_ckm.5.1_77" >256</selectable><selectable id="fcs_ckm.5.1_78" >512</selectable> </selectables> bits</col><col>NIST SP 800-108 Revision 1 Update 1 (Section 4.4 “KDF Using KMAC”)</col></selectable></selectables></title>
            <note role="application">In KDF-MAC-2S, if a CMAC is selected in the MAC step, then select AES-128-CMAC in the KDF step and select 128 as the output key size. If HMAC is selected in the MAC step, then select the same HMAC in the KDF.<h:p/> The respective FCS_COP.1 component must be claimed for each primitive selected in key derivation algorithm.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes and documents:<h:ul><h:li>that the security strengths of the Pseudo-Random functions for the key derivation methods are sufficient for the security strength of the keys derived through those methods.</h:li> <h:li>that the security strengths of the input parameters are sufficient for the security strength of the keys derived through these methods.</h:li> <h:li>that, if concatenated keys or intermediary keys are input parameters, the TSS describes the sources of the keys, and the order in which they are concatenated, along with any other values that are concatenated with them. This may occur in instances when input keying material for the KDF comes from two independent sources, for example, a client and a server.</h:li> <h:li>that, if KDF-XOR is selected the TSS describes this method as there is no standard that specifies how to derive a key from two keys using only XOR.</h:li> <h:li>that, if KDF-ENC is selected, the TSS documents the encryption algorithm used from FCS_COP.1/SKC or FCS_COP.1/AEAD, and describes which of the inputs is the plaintext and which is the key. There are no standards that specify how to derive a key from two keys using encryption (KDF-ENC).</h:li> <h:li>that, for KDF-MAC-1S, KDF-MAC-2S, and KDF-KMAC, the TSS documents that for each invocation of a KDF that reuses the same input shared secret or key, each invocation must use a distinct context string, IV, or salt. The TSS must also describe the composition and sizes of these input parameters.</h:li> <h:li>that, if the TOE uses the derived key in a key chain/hierarchy, that TSS describes how the key is used as part of the key chain/hierarchy.</h:li> </h:ul></TSS>
              <Guidance>The evaluator shall verify that the AGD instructs the administrator how to set any configurable parameters, such as context strings, salts, and IVs.<h:p/> The evaluator shall verify that the AGD instructs the administrator how to configure the TOE to choose specific PRFs, modes, and parameters.</Guidance>
              <Tests>The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>KDF in Counter Mode</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-CTR</h:td><h:td valign="top">[<h:b>selection:</h:b> Direct Generation from a Random Bit Generator as specified in FCS_RBG.1, Concatenated keys]</h:td><h:td valign="top">KPF2 - KDF in Counter Mode using [<h:b>selection:</h:b> AES-128-CMAC; AES-192-CMAC; AES-256-CMAC; HMAC-SHA-1; HMAC-SHA-256; HMAC-SHA-512] as the PRF</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 11770-6:2016 (Subclause 7.3.2) [KPF2], NIST SP 800-108 Revision 1 Update 1 (Section 4.1) [KDF in Counter Mode]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys using KDF in Counter Mode/KDF2, the evaluator shall perform the Counter KDF Algorithm Functional Test using the following input parameters: <h:ul><h:li>Pseudo Random Function (PRF) [AES-128-CMAC, AES-192-CMAC, AES-256-CMAC, HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-512]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> <h:li>Location of the counter [after fixed data, before fixed data, middle fixed data]</h:li> <h:li>Counter length [8, 16, 24, 32] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Counter KDF Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above input parameters the evaluator shall require the implementation under test to derive two keys using random data. The evaluator shall compare the resulting keys with keys generated using a known-good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>KDF in Feedback Mode</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-FB</h:td><h:td valign="top">[<h:b>selection:</h:b> Direct Generation from a Random Bit Generator as specified in FCS_RBG.1, Concatenated keys]</h:td><h:td valign="top">KPF3 - KDF in Feedback Mode using [<h:b>selection:</h:b> AES-128-CMAC; AES-192-CMAC; AES-256-CMAC; HMAC-SHA-1; HMAC-SHA-256; HMAC-SHA-512] as the PRF</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 11770-6:2016 (Subclause 7.3.3) [KPF3], NIST SP 800-108 Revision 1 Update 1 (Section 4.2) [KDF in Feedback Mode]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys using KDF in Feedback Mode/KDF3, the evaluator shall perform the Feedback KDF Algorithm Functional Test using the following input parameters: <h:ul><h:li>Pseudo Random Function (PRF) [AES-128-CMAC, AES-192-CMAC, AES-256-CMAC, HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-512]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> <h:li>Location of the counter [none, after fixed data, before fixed data, before iterator]</h:li> <h:li>Counter length [0, 8, 16, 24, 32] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Feedback KDF Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above input parameters the evaluator shall require the implementation under test to derive two keys using random data. The evaluator shall compare the resulting keys with keys generated using a known-good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>KDF in Double-Pipeline Iteraton Mode</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-DPI</h:td><h:td valign="top">[<h:b>selection:</h:b> Direct Generation from a Random Bit Generator as specified in FCS_RBG.1, Concatenated keys]</h:td><h:td valign="top">KPF4 - KDF in Double-Pipeline Iteration Mode using [<h:b>selection:</h:b> AES-128-CMAC; AES-192-CMAC; AES-256-CMAC; HMAC-SHA-1; HMAC-SHA-256; HMAC-SHA-512] as the PRF</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 11770-6:2016 (Subclause 7.3.4) [KPF4], NIST SP 800-108 Revision 1 Update 1 (Section 4.3) [KDF in Double-Pipeline Iteration Mode]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys using KDF in Double Pipeline Iteration Mode/KDF4, the evaluator shall perform the Double Pipeline Iteration KDF Algorithm Functional Test using the following input parameters: <h:ul><h:li>Pseudo Random Function (PRF) [AES-128-CMAC, AES-192-CMAC, AES-256-CMAC, HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-512]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> <h:li>Location of the counter [none, after fixed data, before fixed data, before iterator]</h:li> <h:li>Counter length [0, 8, 16, 24, 32] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Double Pipeline Iteration KDF Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above input parameters the evaluator shall require the implementation under test to derive two keys using random data. The evaluator shall compare the resulting keys with keys generated using a known-good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>KDF XORing Keys</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-XOR</h:td><h:td valign="top">More than one intermediary keys</h:td><h:td valign="top">exclusive OR (XOR)</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">N/A</h:td></h:tr></h:table> <h:p/>There are no tests for this key derivation method. <h:p/> <h:br/><h:br/> <h:b>KDF by Encrypting Keys</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-ENC</h:td><h:td valign="top">Two keys</h:td><h:td valign="top">Encrypting using an algorithm specified in [<h:b>selection:</h:b> FCS_COP.1/SKC, FCS_COP.1/AEAD]</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">N/A</h:td></h:tr></h:table> <h:p/>Specific testing for this key derivation method is covered by testing for the supported symmetric encryption algorithms in FCS_COP.1/SKC or FCS_COP.1/AEAD. <h:p/> <h:br/><h:br/> <h:b>KDF by Hashing a Shared Secret</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-HASH</h:td><h:td valign="top">Shared secret</h:td><h:td valign="top">Hash function from FCS_COP.1/Hash</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">NIST SP 800-56C Revision 2 (Section 4.1, Option 1) [One-Step Key Derivation]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys by hashing a shared secret (a.k.a. One-Step HASH-based Key Derivation), the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Auxiliary Function [SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, SHA3-512]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported fixed information pattern and combination of the above input parameters the evaluator shall require the implementation under test to derive 15 keys using random data for a shared secret that is the same size as the derived key. The evaluator shall compare the resulting keys with keys derived using a known-good implementation using the same fixed information patterns and input parameters. <h:p/> <h:br/><h:br/> <h:b>One-Step MAC-based KDF</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-MAC-1S</h:td><h:td valign="top">Shared secret, salt, output length, fixed information</h:td><h:td valign="top">Keyed Hash function from FCS_COP.1/KeyedHash</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">NIST SP 800-56C Revision 2 (Section 4.1, Options 2, 3) [One-Step Key Derivation]</h:td></h:tr></h:table> <h:p/> <comment>Catalog EA not finalized</comment>To test the TOE’s ability to derive cryptographic keys using One-Step MAC-based Key Derivation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Auxiliary Function [HMAC-SHA-1, HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, HMAC-SHA-512, KMAC128, KMAC256, KMACXOF128, KMACXOF256]</h:li> <h:li>Salt [0s, random]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> <h:li>Fixed information pattern</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported fixed information pattern and combination of the above input parameters the evaluator shall require the implementation under test to derive 15 keys using random data for a shared secret. The evaluator shall compare the resulting keys with keys derived using a known-good implementation using the same fixed information patterns and input parameters. <h:p/> <h:br/><h:br/> <h:b>Two-Step MAC-based KDF</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-MAC-2S</h:td><h:td valign="top">Shared secret, salt, IV, output length, fixed information, and [<h:b>selection:</h:b> auxiliary shared secret, no other parameters]</h:td><h:td valign="top">MAC Step [<h:b>selection:</h:b> AES-128-CMAC; AES-192-CMAC; AES-256-CMAC; Camellia-128-CMAC; Camellia-192-CMAC; Camellia-256-CMAC; HMAC-SHA-1; HMAC-SHA-256; HMAC-SHA-512] as randomness extraction and; KDF Step [<h:b>selection:</h:b> KDF-CTR, KDF-FB, KDF-DPI]</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">NIST SP 800-56C Revision 2 (Section 5) [Two-Step Key Derivation]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys using Two-Step MAC-based Key Derivation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>MAC mode [AES-128-CMAC; AES-192-CMAC; AES-256-CMAC; Camellia-128-CMAC; Camellia-192-CMAC; Camellia-256-CMAC; HMAC-SHA-1; HMAC-SHA-256; HMAC-SHA-512]</h:li> <h:li>KDF Mode [Counter, feedback, Double Pipeline Iteration]</h:li> <h:li>Salt [0s, random]</h:li> <h:li>Length of shared secret [224-65535]</h:li> <h:li>Length of Auxiliary Shared Secret [0, 112-65535]</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> <h:li>Fixed information pattern</h:li> <h:li>Counter location [none, before fixed data, after fixed data, before iterator]</h:li> <h:li>Counter length [0, 8, 16, 24, 32]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>The evaluator shall define a test group for each supported combination of KDF mode, MAC mode, fixed information pattern, derived key length, counter location, counter length, salt method, and five random pairs of shared secrets &amp; auxiliary secrets (if supported) such that collectively the minimum length, maximum length and three random lengths of each are included in each test group. For each test group, the evaluator shall require the implementation under test to derive 25 keys using random data for a shared secret, either a random salt or a salt of all 0s, and, if supported, an auxiliary shared secret consisting of random data. The evaluator shall compare the resulting keys with keys derived using a known-good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>KMAC KDF</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Key Type</h:td><h:td valign="top">Input Parameters</h:td><h:td valign="top">Key Derivation Algorithm</h:td><h:td valign="top">Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KDF-KMAC</h:td><h:td valign="top">Key, context string, output length, label</h:td><h:td valign="top">[<h:b>selection:</h:b> KMAC128, KMAC256]</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256, 512] bits</h:td><h:td valign="top">NIST SP 800-108 Revision 1 Update 1 (Section 4.4 “KDF Using KMAC”)</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to derive cryptographic keys using KMAC Key Derivation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>MAC Function [KMAC128, KMAC256]</h:li> <h:li>Key Derivation Key Length [112-4096 by 8] bits</h:li> <h:li>Context length [8-4096 by 8] bits</h:li> <h:li>Label length [8-4096 by 8] bits</h:li> <h:li>Derived key length [128, 192, 256, 512] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported MAC function [KMAC128, KMAC256], for each supported minimum and maximum key length: <h:p/>Generate 50 test cases using random data for Key Derivation Key, Context, and Label. The length of each derived key shall be randomly selected from all supported values such that the minimum and maximum lengths are chosen once each. The evaluator shall compare the resulting derived keys with keys derived using a known-good implementation using the same input parameters. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM.6 Timing and Event of Cryptographic Key Destruction-->
        <f-component cc-id="fcs_ckm.6" id="sfr-fcs-ckm-6" name="Timing and Event of Cryptographic Key Destruction" status="sel-based">
          <depends on-incl="sfr-fcs-ckm-1-skg"/>
          <depends on-incl="sfr-fcs-ckm-1-akg"/>
          <depends on-incl="sfr-fcs-ckm-2"/>
          <depends on-incl="sfr-fcs-ckm-5"/>
          <depends on-incl="sfr-fcs-ckm-ext-7"/>
          <depends on-incl="sfr-fcs-ckm-ext-8"/>
          <depends on-incl="sfr-fcs-stg-ext-1"/>
          <depends on-incl="sfr-fia-afl-ext-1"/>
          <f-element id="fcs-ckm-6e1">
            <title>The TSF shall destroy <assignable>list of cryptographic keys (including keying material)</assignable> when <selectables><selectable id="fcs_ckm.6.1_2" >no longer needed</selectable><selectable id="fcs_ckm.6.1_4" ><assignable>other circumstances for key or keying material destruction</assignable></selectable> </selectables> </title>
            <note role="application">The TOE will have mechanisms to destroy keys, including intermediate keys and key material, by using an approved method as specified in FCS_CKM.6.2. Examples of keys include intermediate keys, leaf keys, encryption keys, and signing keys. Key material includes seeds, authentication secrets, passwords, PINs, and other secret values used to derive keys. The ST Author shall list all such keys and keying material that are subject to destruction in the first assignment.<h:p/> This SFR does not apply to the public component of asymmetric key pairs or to keys that are permitted to remain stored, such as device identification keys.</note>
            <aactivity level="component">
              The evaluator shall examine the KMD to verify that it identifies and describes the interfaces that are used to service commands to read/write memory. The evaluator shall examine the interface description for each different media type to ensure that the interface supports the selections made by the ST Author.<h:p/> The evaluator shall examine the KMD to ensure that all keys and keying material identified in the TSS and KMD have been accounted for.<h:p/> Note that where selections include "<h:i>destruction of reference to the key directly followed by a request for garbage collection</h:i> " (for volatile memory) then the evaluator shall examine the KMD to ensure that it explains the nature of the destruction of the reference, the request for garbage collection, and of the garbage collection process itself.
              <TSS>The evaluator shall examine the TSS to ensure it lists all relevant keys and keying material (describing the source of the data, all memory types in which the data is stored (covering storage both during and outside of a session, and both plaintext and non-plaintext forms of the data)), all relevant destruction situations (including the point in time at which the destruction occurs; e.g. factory reset or device wipe function, change of authorization data, change of DEK, completion of use of an intermediate key) and the destruction method used in each case. The evaluator shall confirm that the description of the data and storage locations is consistent with the functions carried out by the TOE (e.g. that all keys in the key chain are accounted for). (Where keys are stored encrypted or wrapped under another key then this may need to be explained in order to allow the evaluator to confirm the consistency of the description of keys with the TOE functions).<h:p/> The evaluator shall check that the TSS identifies any configurations or circumstances that may not conform to the key destruction requirement (see further discussion in the AGD section below). Note that reference may be made to the AGD for description of the detail of such cases where destruction may be prevented or delayed.<h:p/> Where the ST specifies the use of “a value that does not contain any sensitive data” to overwrite keys, the evaluator shall examine the TSS to ensure that it describes how that pattern is obtained and used, and that this justifies the claim that the pattern does not contain any sensitive data.</TSS>
              <Guidance>A TOE may be subject to situations that could prevent or delay data destruction in some cases. The evaluator shall check that the AGD identifies configurations or circumstances that may not strictly conform to the key destruction requirement, and that this description is consistent with the relevant parts of the TSS (and KMD). The evaluator shall check that the AGD provides guidance on situations where key destruction may be delayed at the physical layer, identifying any additional mitigation actions for the user (e.g. there might be some operation the user can invoke, or the user might be advised to retain control of the device for some particular time to maximize the probability that garbage collection has occurred).<h:p/> For example, when the TOE does not have full access to the physical memory, it is possible that the storage may implement wear-leveling and garbage collection. This may result in additional copies of the data that are logically inaccessible but persist physically. Where available, the TOE might then describe use of the TRIM command and garbage collection to destroy these persistent copies upon their deletion (this would be explained in TSS and AGD).<h:p/> Where TRIM is used then the TSS or AGD is also expected to describe how the keys are stored such that they are not inaccessible to TRIM, (e.g. they would need not to be contained in a file less than 982 bytes which would be completely contained in the master file table.</Guidance>
              <Tests>
                The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The evaluator shall perform the following tests:
                <testlist>
                  <test>Applied to each key or keying material held as plaintext in volatile memory and subject to destruction by overwrite by the TOE (whether or not the plaintext value is subsequently encrypted for storage in volatile or non-volatile memory).<h:p/> The evaluator shall:<h:ol type="1"><h:li>Record the value of the key or keying material.</h:li> <h:li>Cause the TOE to dump the SDO/SDE memory of the TOE into a binary file.</h:li> <h:li>Search the content of the binary file created in Step #2 to locate all instances of the known key value from Step #1.<h:p/> Note that the primary purpose of Step #3 is to demonstrate that appropriate search commands are being used for Steps #8 and #9.</h:li> <h:li>Cause the TOE to perform normal cryptographic processing with the key from Step #1.</h:li> <h:li>Cause the TOE to destroy the key.</h:li> <h:li>Cause the TOE to stop execution but not exit.</h:li> <h:li>Cause the TOE to dump the SDO/SDE memory of the TOE into a binary file.</h:li> <h:li>Search the content of the binary file created in Step #7 for instances of the known key value from Step #1.</h:li> <h:li>Break the key value from Step #1 into an evaluator-chosen set of fragments and perform a search using each fragment. (Note that the evaluator shall first confirm with the developer how the key is normally stored, in order to choose fragment sizes that are the same or smaller than any fragmentation of the data that may be implemented by the TOE. The endianness or byte-order should also be taken into account in the search.)</h:li> </h:ol> <h:p/> Steps #1-8 ensure that the complete key does not exist anywhere in volatile memory. If a copy is found, then the test fails.<h:p/> Step #9 ensures that partial key fragments do not remain in memory. If the evaluator finds a 32-or-greater-consecutive-bit fragment, then fail immediately. Otherwise, there is a chance that it is not within the context of a key (e.g., some random bits that happen to match). If this is the case the test should be repeated with a different key in Step #1. If a fragment is also found in this repeated run, then the test fails unless the developer provides a reasonable explanation for the collision, then the evaluator may give a pass on this test.<h:p/> </test>
                  <test>Applied to each key and keying material held in non-volatile memory and subject to destruction by overwrite by the TOE.<h:ol type="1"><h:li>Record the value of the key or keying material.</h:li> <h:li>Cause the TOE to perform normal cryptographic processing with the key from Step #1.</h:li> <h:li>Search the non-volatile memory the key was stored in for instances of the known key value from Step #1.<h:p/> Note that the primary purpose of Step #3 is to demonstrate that appropriate search commands are being used for Steps #5 and #6.</h:li> <h:li>Cause the TOE to clear the key.</h:li> <h:li>Search the non-volatile memory in which the key was stored for instances of the known key value from Step #1. If a copy is found, then the test fails.</h:li> <h:li>Break the key value from Step #1 into an evaluator-chosen set of fragments and perform a search using each fragment. (Note that the evaluator shall first confirm with the developer how the key is normally stored, in order to choose fragment sizes that are the same or smaller than any fragmentation of the data that may be implemented by the TOE. The endianness or byte-order should also be taken into account in the search).</h:li> </h:ol> Step #6 ensures that partial key fragments do not remain in non-volatile memory. If the evaluator finds a 32-or-greater-consecutive-bit fragment, then fail immediately. Otherwise, there is a chance that it is not within the context of a key (e.g., some random bits that happen to match). If this is the case the test should be repeated with a different key in Step #1. If a fragment is also found in this repeated run, then the test fails unless the developer provides a reasonable explanation for the collision, then the evaluator may give a pass on this test.<h:p/> </test>
                  <test>Applied to each key and keying material held in non-volatile memory and subject to destruction by overwrite by the TOE.<h:ol type="1"><h:li>Record memory of the key or keying material.</h:li> <h:li>Cause the TOE to perform normal cryptographic processing with the key from Step #1.</h:li> <h:li>Cause the TOE to clear the key. Record the value to be used for the overwrite of the key.</h:li> <h:li>Examine the memory from Step #1 to ensure the appropriate pattern (recorded in Step #3) is used.</h:li> </h:ol> The test succeeds if correct pattern is found in the memory location. If the pattern is not found, then the test fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ckm-6e2">
            <title>The TSF shall destroy cryptographic keys and keying material specified by FCS_CKM.6.1 in accordance with a specified cryptographic key destruction method [  <h:i><h:ul><h:li>For volatile memory, the destruction shall be executed by a <selectables linebreak="yes"><selectable id="fcs_ckm.6.2_1">single overwrite consisting of <selectables onlyone="yes"><selectable id="fcs_ckm.6.2_2" >a pseudo-random pattern using the TSF’s RBG</selectable><selectable id="fcs_ckm.6.2_3" >zeroes</selectable><selectable id="fcs_ckm.6.2_4" >ones</selectable><selectable id="fcs_ckm.6.2_5" >a new value of a key</selectable><selectable id="fcs_ckm.6.2_7" ><assignable>some value that does not contain any CSP</assignable></selectable></selectables> </selectable><selectable id="fcs_ckm.6.2_8" >removal of power to the memory</selectable><selectable id="fcs_ckm.6.2_9" >removal of all references to the key directly followed by a request for garbage collection</selectable> </selectables> </h:li> <h:li>For non-volatile memory <selectables linebreak="yes"><selectable id="fcs_ckm.6.2_10">that employs a wear-leveling algorithm, the destruction shall be executed by a <selectables><selectable id="fcs_ckm.6.2_11">single overwrite consisting of <selectables onlyone="yes"><selectable id="fcs_ckm.6.2_12" >zeroes</selectable><selectable id="fcs_ckm.6.2_13" >ones</selectable><selectable id="fcs_ckm.6.2_14" >pseudo-random pattern</selectable><selectable id="fcs_ckm.6.2_15" >a new value of a key of the same size</selectable><selectable id="fcs_ckm.6.2_17" ><assignable>some value that does not contain any CSP</assignable></selectable></selectables> </selectable><selectable id="fcs_ckm.6.2_18" >block erase</selectable></selectables> </selectable><selectable id="fcs_ckm.6.2_19">that does not employ a wear-leveling algorithm, the destruction shall be executed by a <selectables linebreak="yes"><selectable id="fcs_ckm.6.2_20"> <selectables onlyone="yes"><selectable id="fcs_ckm.6.2_21" >single</selectable><selectable id="fcs_ckm.6.2_23" ><assignable>ST Author-defined multi-pass</assignable></selectable></selectables> overwrite consisting of <selectables><selectable id="fcs_ckm.6.2_24" >zeros</selectable><selectable id="fcs_ckm.6.2_25" >ones</selectable><selectable id="fcs_ckm.6.2_26" >pseudo-random pattern</selectable><selectable id="fcs_ckm.6.2_27" >a new value of a key of the same size</selectable><selectable id="fcs_ckm.6.2_29" ><assignable>some value that does not contain any CSP</assignable></selectable></selectables> followed by a read-verify. If the read-verification of the overwritten data fails, the process shall be repeated again up to <assignable>number of times to attempt overwrite</assignable> times, whereupon an error is returned</selectable><selectable id="fcs_ckm.6.2_31" >block erase</selectable></selectables> </selectable> </selectables> </h:li> </h:ul></h:i>  ] that meets the following: [ <h:i>no standard</h:i>  ].</title>
            <note role="application">This SFR must be included in the ST if the TOE handles sensitive cryptographic keys or credentials. In particular, if the TOE creates or stores keys, it must be able to destroy them. Specifically, this SFR must be included in the ST if any of the following SFRs are claimed: FCS_CKM.1/AKG, FCS_CKM.1/SKG, FCS_CKM.2, FCS_CKM.5, FCS_COP.1/KAT, FCS_STG_EXT.1, or FIA_AFL_EXT.1<h:p/> The term “cryptographic keys” in this SFR includes the authorization data that is the entry point to a key chain and all other cryptographic keys and keying material (whether in plaintext or encrypted form). Examples of keys and key material include intermediate keys, encryption keys, signing keys, verification keys, authentication tokens, and submasks. This SFR does not apply to the public component of asymmetric key pairs, or to keys that are permitted to remain stored such as device identification keys. The TOE will have mechanisms to destroy keys and key material when the keys and key material is no longer needed. Based on their implementations, vendors will explain when certain keys are no longer needed.<h:p/> In the case of volatile memory, the selection “<h:i>removal of all references to the key directly followed by a request for garbage collection</h:i> ” is used in a situation where the TSF cannot address the specific physical memory locations holding the data to be erased and therefore relies on addressing logical addresses (which frees the relevant physical addresses holding the old data) and then requesting the platform to ensure that the data in the physical addresses is no longer available for reading (i.e. the “garbage collection” referred to in the SFR text).<h:p/> The selection for destruction of data in non-volatile memory includes block erase as an option, and this option applies only to flash memory. A block erase does not require a read verify, since the mappings of logical addresses to the erased memory locations are erased as well as the data itself.<h:p/> Some selections allow assignment of “some value that does not contain any CSP.” This means that the TOE uses some specified data not drawn from an RBG meeting FCS_RBG requirements, and not being any of the particular values listed as other selection options. The point of the phrase “does not contain any sensitive data” is to ensure that the overwritten data is carefully selected, and not taken from a general pool that might contain current or residual data that itself requires confidentiality protection.<h:p/> <h:p/> In the case of volatile memory, the selection “removal of all references to the key directly followed by a request for garbage collection” is used in a situation where the TSF cannot address the specific physical memory locations holding the data to be erased and therefore relies on addressing logical addresses (which frees the relevant physical addresses holding the old data) and then requesting the platform to ensure that the data in the physical addresses is no longer available for reading (i.e. the “garbage collection” referred to in the SFR text).<h:p/> The selection for destruction of data in non-volatile memory includes block erase as an option, and this option applies only to flash memory. A block erase does not require a read verify, since the mappings of logical addresses to the erased memory locations are erased, as well as the data itself.<h:p/> Some selections allow the assignment of “some value that does not contain any CSP.” This means that the TOE uses some specified data not drawn from an RBG meeting FCS_RBG requirements, and not being any of the values listed as other selection options. The point of the phrase “does not contain any CSP” is to ensure that the overwritten data is carefully selected, and not taken from a general pool that might contain data that itself requires confidentiality protection.</note>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM_EXT.7 Cryptographic Key Agreement-->
        <f-component cc-id="fcs_ckm_ext.7" id="sfr-fcs-ckm-ext-7" name="Cryptographic Key Agreement" status="sel-based">
          <depends>
            <optional/>
          </depends>
          <comp-lev>requires that cryptographic key agreement be performed in accordance with specified standards.</comp-lev>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP, PP-Module, functional package or ST:<h:br/><h:ul><h:li>minimal: Success and failure of the activity;</h:li> <h:li>basic: The object attribute(s), and object value(s) excluding any sensitive information.</h:li> </h:ul> </audit>
          <dependencies><h:br/><h:br/>[FDP_ITC.1 Import of user data without security attributes, or<h:br/>FDP_ITC.2 Import of user data with security attributes, or<h:br/>[FCS_CKM.1 Cryptographic key generation, or<h:br/>FCS_CKM.5 Cryptographic key derivation, or<h:br/>FCS_CKM_EXT.8 Password-based key derivation],<h:br/>[FCS_CKM.2 Cryptographic key distribution, or<h:br/>FCS_COP.1 Cryptographic operation]<h:br/>FCS_CKM.6 Timing and event of cryptographic key destruction<h:br/>[FCS_COP.1/CMAC CMAC, or<h:br/>FCS_COP.1/Hash Hashing, or<h:br/>FCS_COP.1/KeyedHash Keyed Hashing, or<h:br/>FCS_COP.1/SKC Symmetric Key Cryptography, or<h:br/>FCS_COP.1/AEAD Authenticated Encryption with Associated Data]</dependencies>
          <f-element id="fcs-ckm-ext-7e1">
            <title>The TSF shall derive shared cryptographic keys with input from multiple parties in accordance with specified cryptographic key agreement algorithms<selectables><tabularize id="fcs-ckm-ext-7-sels" title="Recommended choices for FCS_CKM_EXT.7"><textcol>Identifier</textcol><selectcol>Cryptographic algorithm</selectcol><reqtext>and specified cryptographic parameters</reqtext><selectcol>Cryptographic parameters</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_CKM_EXT.7.</reqtext></tabularize><selectable id="sel-fcs-ckm-kat-kas2"><col>KAS2</col><col>RSA</col><col>Modulus size <selectables><selectable id="fcs_ckm_ext.7.1_1" >2048</selectable><selectable id="fcs_ckm_ext.7.1_2" >3072</selectable><selectable id="fcs_ckm_ext.7.1_3" >4096</selectable><selectable id="fcs_ckm_ext.7.1_4" >6144</selectable><selectable id="fcs_ckm_ext.7.1_5" >8192</selectable> </selectables> bits</col><col>NIST SP 800-56B Revision 2 (Section 8.3) [KAS2]</col></selectable><selectable id="sel-fcs-ckm-kat-dh"><col>DH</col><col>Finite Field Cryptography Diffie-Hellman</col><col>Static domain parameters approved for <selectables><selectable id="fcs_ckm_ext.7.1_6">IKE Groups <selectables><selectable id="sel-kat-ffc-modp2048" >MODP-2048</selectable><selectable id="sel-kat-ffc-modp3072" >MODP-3072</selectable><selectable id="sel-kat-ffc-modp4096" >MODP-4096</selectable><selectable id="sel-kat-ffc-modp6144" >MODP-6144</selectable><selectable id="sel-kat-ffc-modp8192" >MODP-8192</selectable></selectables> </selectable><selectable id="fcs_ckm_ext.7.1_7">TLS Groups <selectables><selectable id="sel-kat-ffc-ffdhe2048" >ffdhe2048</selectable><selectable id="sel-kat-ffc-ffdhe3072" >ffdhe3072</selectable><selectable id="sel-kat-ffc-ffdhe4096" >ffdhe4096</selectable><selectable id="sel-kat-ffc-ffdhe6144" >ffdhe6144</selectable><selectable id="sel-kat-ffc-ffdhe8192" >ffdhe8192</selectable></selectables> </selectable> </selectables> </col><col>NIST SP 800-56A Revision 3 (Section 5.7.1.1) [DH] <selectables><selectable id="fcs_ckm_ext.7.1_8" >RFC 3526 [IKE groups]</selectable><selectable id="fcs_ckm_ext.7.1_9" >RFC 7919 [TLS groups]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-kat-ecdh"><col>ECDH</col><col>Elliptic Curve Diffie-Hellman</col><col>Elliptic Curve <selectables><selectable id="sel-exp-kat-ecdh-P256" >P-256</selectable><selectable id="sel-exp-kat-ecdh-brainpoolP256r1" >brainpoolP256r1</selectable><selectable id="sel-exp-kat-ecdh-P384" >P-384</selectable><selectable id="sel-exp-kat-ecdh-brainpoolP384r1" >brainpoolP384r1</selectable><selectable id="sel-exp-kat-ecdh-P521" >P-521</selectable><selectable id="sel-exp-kat-ecdh-brainpoolP512r1" >brainpoolP512r1</selectable> </selectables> </col><col>NIST SP 800-56A Revision 3 (Section 5.7.1.2) [ECDH] <selectables><selectable id="fcs_ckm_ext.7.1_10" >: NIST SP 800-186 (Section 3.2.1) [NIST Curves]</selectable><selectable id="fcs_ckm_ext.7.1_11" >RFC 5639 (Section 3) [Brainpool curves]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-ckm-kat-eddsa"><col>ECDH-Ed</col><col>ECDH with Montgomery Curves</col><col>Domain parameters approved for elliptic curves <selectables><selectable id="fcs_ckm_ext.7.1_12" >curve25519</selectable><selectable id="fcs_ckm_ext.7.1_13" >curve448</selectable> </selectables> </col><col>RFC 7748 (Section 5) [ECDH-Ed]NIST SP 800-186 (Section 3.2.2) [Montgomery Curves]</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if key agreement or transport is a service provided by the TOE to tenant software, or if they are used by the TOE itself to support or implement PP-specified security functionality.<h:p/> If this SFR is claimed, then FCS_CKM.6 must also be claimed.<h:p/> This SFR has dependencies FCS_COP.1/Hash and FCS_COP.1/XOF only if ML-KEM is selected.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS documents that the security strength of the material contributed by the TOE is sufficient for the security strength of the key and the agreement method.</TSS>
              <Guidance>There are no additional Guidance evaluation activities for this component.</Guidance>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>KAS2</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KAS2</h:td><h:td valign="top">RSA</h:td><h:td valign="top">Modulus Size [<h:b>selection:</h:b> 2048, 3072, 4096, 6144, 8192] bits</h:td><h:td valign="top">NIST SP 800-56B Revision 2 (Section 8.3) [KAS2]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of the of the KAS2 RSA Key Agreement scheme, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>RSA Private key format [Basic, Prime Factor, Chinese Remainder Theorem]</h:li> <h:li>Modulo value [2048, 3072, 4096, 6144, 8192]</h:li> <h:li>Role [initiator, responder]</h:li> </h:ul> <h:p/>The evaluator shall generate a test group (i.e. set of tests) for each parameter value of the above parameter type with the largest number of supported values. For example, if the TOE supports all five Modulo values, then the evaluator shall generate five test groups. Each of the above supported parameter values must be included in at least one test group. <h:p/>Regardless of how many parameter values are supported, there must be at least two test groups. <h:p/>Half of the test groups are designated as Algorithm Functional Tests (AFT) and the remainder are designated as Validation Tests (VAT). If there is an odd number of groups, then the extra group is designated randomly as either AFT or VAT. <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each test group designated as AFT, the evaluator shall generate 10 test cases using random data (except for a fixed public exponent, if supported). The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:i><h:b>Validation Test</h:b> </h:i> <h:br/><h:br/>For each test group designated as VAT, the evaluator shall generate 25 test cases are using random data (except for a fixed public exponent, if supported). Of the 25 test cases: <h:ul><h:li>Two test cases must have a shared secret with a leading nibble of 0s,</h:li> <h:li>Two test cases have modified derived key material,</h:li> <h:li>Two test cases have modified tags, if key confirmation is supported,</h:li> <h:li>Two test cases have modified MACs, if key confirmation is supported, and</h:li> <h:li>The remaining test cases are not modified.</h:li> </h:ul> <h:p/>To determine correctness, the evaluator shall confirm that the resulting 25 shared secrets correspond as expected for both the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>FFC Diffie-Hellman Key Agreement</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">DH</h:td><h:td valign="top">Finite Field Cryptography Diffie-Hellman</h:td><h:td valign="top">Static domain parameters approved for [<h:b>selection:</h:b> IKE groups [<h:b>selection:</h:b> MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192], TLS groups [<h:b>selection:</h:b> ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]]]</h:td><h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.7.1.1) [DH]<h:p/> [<h:b>selection:</h:b> RFC 3526 [IKE Groups], RFC 7919 [TLS Groups]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of FFC Diffie-Hellman Key Agreement, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>Domain Parameter Group [MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported domain parameter group, the evaluator shall generate 10 test cases by generating the initiator and responder secret keys using random data, calculating the responder public key, and creating the shared secret. The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:i><h:b>Validation Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above parameters the evaluator shall generate 15 Diffie Hellman initiator/responder key pairs using the key generation function of a known-good implementation. For each set of key pairs, the evaluator shall modify five initiator private key values. The remaining key values are left unchanged (i.e., correct). To determine correctness, the evaluator shall confirm that the 15 shared secrets correspond as expected for both the modified and unmodified inputs. <h:p/> <h:br/><h:br/> <h:b>Elliptic Curve Diffie-Hellman Key Agreement</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ECDH</h:td><h:td valign="top">Elliptic Curve Diffie-Hellman</h:td><h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:td><h:td valign="top">NIST SP 800-56A Revision 3 (Section 5.7.1.2) [ECDH]<h:p/> [<h:b>selection:</h:b> NIST SP 800-186 (Section 3.2.1) [NIST Curves], RFC 5639 (Section 3) [Brainpool Curves]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of Elliptic Curve Diffie-Hellman Key Agreement, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>Elliptic Curve [P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported Elliptic Curve the evaluator shall generate 10 test cases by generating the initiator and responder secret keys using random data, calculating the responder public key, and creating the shared secret. The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:i><h:b>Validation Test</h:b> </h:i> <h:br/><h:br/>For each supported Elliptic Curve the evaluator shall generate 15 Diffie Hellman initiator/responder key pairs using the key generation function of a known-good implementation. For each set of key pairs, the evaluator shall modify five initiator private key values. The remaining key values are left unchanged (i.e., correct). To determine correctness, the evaluator shall confirm that the 15 shared secrets correspond as expected for the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>Elliptic Curve Diffie-Hellman Key Agreement with Montgomery Curves</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ECDH-Ed</h:td><h:td valign="top">ECDH with Montgomery Curves</h:td><h:td valign="top">Domain parameters approved for elliptic curves [<h:b>selection:</h:b> curve25519, curve448]</h:td><h:td valign="top">RFC 7748 (Section 5) [ECDH-Ed]<h:p/> NIST SP 800-186 (Section 3.2.2) [Montgomery Curves]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of Elliptic Curve Diffie-Hellman Key Agreement with Montgomery Curves, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>- Domain Parameters for elliptic curves [curve25519, curve448]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:i><h:b>Algorithm Functional Test</h:b> </h:i> <h:br/><h:br/>For each supported set of domain parameters, the evaluator shall generate 10 test cases by generating the initiator and responder secret keys using random data, calculating the responder public key, and creating the shared secret. The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs <h:p/> <h:br/><h:br/> <h:i><h:b>Validation Test</h:b> </h:i> <h:br/><h:br/>For each supported combination of the above parameters the evaluator shall generate 15 Diffie Hellman initiator/responder key pairs using the key generation function of a known-good implementation. For each set of key pairs, modify five initiator private keys values. The remaining key values are left unchanged (i.e., correct). To determine correctness, the evaluator shall confirm that the 15 shared secrets correspond as expected for the modified and unmodified values. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_CKM_EXT.8 Password-Based Key Derivation-->
        <f-component cc-id="fcs_ckm_ext.8" id="sfr-fcs-ckm-ext-8" name="Password-Based Key Derivation" status="optional">
          <comp-lev>requires that password-based key derivation be performed in accordance with specified standards.</comp-lev>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP, PP-Module, functional package or ST:<h:br/><h:ul><h:li>minimal: Success and failure of the activity;</h:li> <h:li>basic: The object attribute(s), and object value(s) excluding any sensitive information.</h:li> </h:ul> </audit>
          <dependencies><h:br/><h:br/>[FCS_CKM.2 Cryptographic key distribution, or<h:br/>FCS_COP.1 Cryptographic operation]<h:br/>FCS_CKM_EXT.7 Cryptographic Key Agreement],<h:br/>FCS_CKM.6 Timing and event of cryptographic key destruction<h:br/>FCS_OTV_EXT.1 One-Time Value Generation</dependencies>
          <f-element id="fcs-ckm-ext-8-1">
            <title>The TSF shall perform password-based key derivation functions in accordance with a specified cryptographic algorithm [HMAC- <selectables><selectable id="fcs_ckm_ext.8.1_1" >SHA-256</selectable><selectable id="fcs_ckm_ext.8.1_2" >SHA-384</selectable><selectable id="fcs_ckm_ext.8.1_3" >SHA-512</selectable><selectable id="fcs_ckm_ext.8.1_4" >SHA3-256</selectable><selectable id="fcs_ckm_ext.8.1_5" >SHA3-384</selectable><selectable id="fcs_ckm_ext.8.1_6" >SHA3-512</selectable> </selectables> , with iteration count of <assignable>number of iterations</assignable> using a randomly generated salt of length <assignable>equal to or greater than 128</assignable> and output cryptographic key sizes <selectables><selectable id="fcs_ckm_ext.8.1_9" >128</selectable><selectable id="fcs_ckm_ext.8.1_10" >192</selectable><selectable id="fcs_ckm_ext.8.1_11" >256</selectable><selectable id="fcs_ckm_ext.8.1_12" >512</selectable> </selectables> bits that meet the following standard: [NIST SP 800-132 (Section 5.3) [PBKDF2]].</title>
            <note role="application">NIST recommends a minimum “number of iterations” of 1000 but prefers the largest number feasible given performance constraints.<h:p/> NIST recommends that the randomly generated portion of the salt have length of at least 128 bits and must be derived from a Random Bit Generation. Therefore FCS_OTV_EXT.1 must be claimed.<h:p/> For CNSA 2.0 compliance, only SHA-384 or SHA-512 may be used.</note>
            <aactivity level="component">
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/>To test the TOE’s ability to derive cryptographic keys from a password using PBKDF2 the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>HMAC algorithms [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:li> <h:li>Iteration count [1-10000000]</h:li> <h:li>Derived Key size [128, 192, 256, 512] bits</h:li> <h:li>Password length [8-128] bytes</h:li> <h:li>Salt length [128-4096] bits in multiples of 8.</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported HMAC algorithm, the evaluator shall generate 50 test cases using supported values for the above parameters such that <h:ul><h:li>All supported derived key sizes are tested at least 10 times,</h:li> <h:li>Iteration counts are random values between the supported minimum and maximum values, with the supported minimum and maximum tested at least once each,</h:li> <h:li>Passwords are random byte strings representing upper- and lower-case letters of random supported lengths such that the minimum and maximum lengths are tested at least once, and</h:li> <h:li>Salts are random values between the supported minimum and maximum lengths such that the supported minimum and maximum lengths are both tested at least once.</h:li> </h:ul> <h:p/>The evaluator shall compare the resulting keys from each test case with keys derived using a known-good implementation with the same input parameters.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/AEAD Cryptographic Operation – Authenticated Encryption with Associated Data-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-aead" name="Cryptographic Operation – Authenticated Encryption with Associated Data" iteration="AEAD" status="sel-based">
          <depends on-incl="sfr-fcs-stg-ext-2"/>
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-sel="sel-rbg-ctr"/>
          <depends on-sel="sel-fdp-itc-ext-1e2-sk"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-aead">
            <title>The TSF shall perform [authenticated encryption with associated data] in accordance with a specified cryptographic algorithm<selectables><tabularize id="fcs-cop-aead-sels" title="Recommended choices for FCS_COP.1/AEAD"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/AEAD.</reqtext></tabularize><selectable id="sel-fcs-cop-aead-aes-ccm"><col>AES-CCM</col><col>AES in CCM mode with unpredictable, non-repeating nonce, minimum size of 64 bits</col><col> <selectables><selectable id="fcs_cop.1.1_AEAD_1" >128 bits</selectable><selectable id="fcs_cop.1.1_AEAD_2" >192 bits</selectable><selectable id="fcs_cop.1.1_AEAD_3" >256 bits</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_AEAD_4" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_AEAD_5" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_AEAD_6" >ISO/IEC 19772:2020 (Clause 7)</selectable><selectable id="fcs_cop.1.1_AEAD_7" >NIST SP 800-38C</selectable> </selectables> [CCM]</col></selectable><selectable id="sel-fcs-cop-aead-aes-gcm"><col>AES-GCM</col><col>AES in GCM mode with non-repeating IVs using <selectables><selectable id="fcs_cop.1.1_AEAD_8" >deterministic</selectable><selectable id="fcs_cop.1.1_AEAD_9" >RBG-based</selectable> </selectables> , IV construction; the tag must be of length <selectables><selectable id="fcs_cop.1.1_AEAD_10" >96</selectable><selectable id="fcs_cop.1.1_AEAD_11" >104</selectable><selectable id="fcs_cop.1.1_AEAD_12" >112</selectable><selectable id="fcs_cop.1.1_AEAD_13" >120</selectable><selectable id="fcs_cop.1.1_AEAD_14" >128</selectable> </selectables> bits.</col><col> <selectables><selectable id="fcs_cop.1.1_AEAD_15" >128 bits</selectable><selectable id="fcs_cop.1.1_AEAD_16" >192 bits</selectable><selectable id="fcs_cop.1.1_AEAD_17" >256 bits</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_AEAD_18" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_AEAD_19" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_AEAD_20" >ISO/IEC 19772:2020 (Clause 10)</selectable><selectable id="fcs_cop.1.1_AEAD_21" >NIST SP 800-38D</selectable> </selectables> [GCM]</col></selectable></selectables></title>
            <note role="application">If the selected cryptographic algorithm requires an IV or nonce, then FCS_OTV_EXT.1 must be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it describes the construction of any IVs, nonces, and tags.</TSS>
              <Guidance/>
              <Tests>The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>AES-CCM</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-CCM</h:td><h:td valign="top">AES in CCM mode with nonrepeating nonce, minimum size of 64 bits</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 19772:2020 (Clause 7), NIST SP 800-38C] [CCM]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of AES-CCM authenticated encryption functionality the evaluator shall perform the Algorithm Functional Tests described below using the following input parameters: <h:ul><h:li>Key Size [128, 192, 256] bits</h:li> <h:li>Associated data size [0-65536] bits in increments of 8</h:li> <h:li>Payload size [0-256] bits in increments of 8</h:li> <h:li>IV/Nonce size [64-104] bits in increments of 8</h:li> <h:li>Tag size [32-128] bits in increments of 16</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Tests</h:b> <h:p/>Unless otherwise specified, the following tests should use random data, a tag size of 128 bits, IV/Nonce size of 104 bits, payload size of 256 bits, and associated data size of 256 bits. If any of these values are not supported, any supported value may be used. The evaluator shall compare the output from each test case against results generated by a known-good implementation with the same input parameters. <h:p/> <h:br/><h:br/> <h:b><h:i>Variable Associated Data Test</h:i> </h:b> <h:p/>For each claimed key size, and for each supported associated data size from 0 through 256 bits in increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data. In addition, for each key size, the TOE must be tested by encrypting 10 cases with associated data lengths of 65536 bits, if supported. <h:p/> <h:br/><h:br/> <h:b><h:i>Variable Payload Test</h:i> </h:b> <h:p/>For each claimed key size, and for each supported payload size from 0 through 256 bits in increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data. <h:p/> <h:br/><h:br/> <h:b><h:i>Variable Nonce Test</h:i> </h:b> <h:p/>For each claimed key size, and for each supported IV/Nonce size from 64 through 104 bits in increments of 8 bits, the TOE must be tested by encrypting 10 test cases using all random data. <h:p/> <h:br/><h:br/> <h:b><h:i>Variable Tag Test</h:i> </h:b> <h:p/>For each claimed key size, and for each supported tag size from 32 through 128 bits in increments of 16 bits, the TOE must be tested by encrypting 10 test cases using all random data. <h:p/> <h:br/><h:br/> <h:b><h:i>Decryption Verification Test</h:i> </h:b> <h:p/>For each claimed key size, for each supported associated data size from 0 through 256 bits in increments of 8 bits, for each supported payload size from 0 through 256 bits in increments of 8 bits, for each supported IV/Nonce size from 64 through 104 bits in increments of 8 bits, and for each supported tag size from 32 through 128 bits in increments of 16 bits, the TOE must be tested by decrypting 10 test cases using all random data. <h:p/> <h:br/><h:br/> <h:b>AES-GCM</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-GCM</h:td><h:td valign="top">AES in GCM mode with nonrepeating IVs using [<h:b>selection:</h:b> deterministic, RBG-based] IV construction; the tag must be of length [<h:b>selection:</h:b> 96, 104, 112, 120, or 128] bits.</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 19772:2020 (Clause 10), NIST SP 800-38D] [GCM]</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of AES-GCM authenticated encryption functionality the evaluator shall perform the Encryption Algorithm Functional Tests and Decryption Algorithm Functional Tests as described below using the following input parameters: <h:ul><h:li>Key Size [128, 192, 256] bits</h:li> <h:li>Associated data size [0-65536] bits</h:li> <h:li>Payload size [0-65536] bits</h:li> <h:li>IV size [96] bits</h:li> <h:li>Tag size [96, 104, 112, 120, 128] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Encryption Algorithm Functional Tests</h:b> <h:p/>The evaluator shall generate 15 test cases using random data for each combination of the above parameters as follows: <h:p/> <h:ul><h:li>Each claimed key size,</h:li> <h:li>Each supported tag size,</h:li> <h:li>Four supported non-zero payload sizes, such that two are multiples of 128 bits and two are not multiples of 128 bits,</h:li> <h:li>Four supported non-zero associated data sizes, such that two are multiples of 128 bits and two are not multiples of 128 bits, and</h:li> <h:li>An associated data size of zero, if supported.</h:li> </h:ul> <h:p/>Note that the IV size is always 96 bits. <h:p/>The evaluator shall compare the output from each test case against results generated by a known- good implementation with the same input parameters. <h:p/> <h:br/><h:br/> <h:b><h:i>Decryption Algorithm Functional Tests</h:i> </h:b> <h:p/>The evaluator shall test the authenticated decrypt functionality of AES-GCM by supplying 15 test cases for the supported combinations of the parameters as described above. For each parameter combination the evaluator shall introduce an error into either the Ciphertext or the Tag such that approximately half of the cases are correct and half the cases contain errors.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/CMAC Cryptographic Operation - CMAC-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-cmac" name="Cryptographic Operation - CMAC" iteration="CMAC" status="sel-based">
          <depends on-sel="sel-stg3-digsig"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-cmac">
            <title>The TSF shall perform [CMAC] in accordance with a specified cryptographic algorithm<selectables><tabularize id="tab-fcs-cop-cmac-sels" title="Recommended choices for FCS_COP.1/CMAC"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/CMAC.</reqtext></tabularize><selectable id="sel-fcs-cop-cmac-aes"><col>AES-CMAC</col><col>AES using CMAC mode</col><col> <selectables><selectable id="fcs_cop.1.1_CMAC_1" >128 bits</selectable><selectable id="fcs_cop.1.1_CMAC_2" >192 bits</selectable><selectable id="fcs_cop.1.1_CMAC_3" >256 bits</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_CMAC_4" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_CMAC_5" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_CMAC_6" >: ISO/IEC 9797-1:2011 Subclause 7.6</selectable><selectable id="fcs_cop.1.1_CMAC_7" >NIST SP 800-38B</selectable> </selectables> [CMAC]</col></selectable></selectables></title>
            <aactivity level="component">
              <TSS/>
              <Guidance/>
              <Tests>The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>AES-CMAC</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-CMAC</h:td><h:td valign="top">AES using CMAC mode</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 9797-1:2011 (Subclause 7.6), NIST SP 800-38B] [CMAC]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate MAC values using AES in CMAC mode the evaluator shall perform the CMAC Generation Test and CMAC Verification Test using the following input parameters: <h:ul><h:li>Key Size [128, 192, 256] bits</h:li> <h:li>Message size [0-524288] bits in increments of 8</h:li> <h:li>MAC sizes [1-128] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>CMAC Generation Test</h:b> <h:p/>The evaluator shall generate eight test cases using random keys and data for each combination of the above parameters as follows: <h:p/> <h:ul><h:li>For each claimed key size,</h:li> <h:li>For four message sizes as follows:<h:ul><h:li>The smallest supported message size,</h:li> <h:li>The largest supported message size,</h:li> <h:li>Two sizes that are divisible by the block size, and</h:li> <h:li>Two sizes that are not divisible by the block size</h:li> </h:ul> </h:li> <h:li>For three MAC sizes as follows:<h:ul><h:li>The smallest supported MAC size,</h:li> <h:li>The largest supported MAC size, and</h:li> <h:li>Some other supported MAC size</h:li> </h:ul> </h:li> </h:ul> <h:p/>The evaluator shall compare the output from each test case against results generated by a known- good implementation with the same input parameters. <h:br/><h:br/> <h:b>CMAC Verification Test</h:b> <h:p/>The evaluator shall generate 20 test cases using random keys and data for each combination of the above parameters as follows: <h:ul><h:li>For each claimed key size,</h:li> <h:li>For four message sizes as follows:<h:ul><h:li>The smallest supported message size,</h:li> <h:li>The largest supported message size,</h:li> <h:li>Two sizes that are divisible by the block size, and</h:li> <h:li>Two sizes that are not divisible by the block size</h:li> </h:ul> </h:li> <h:li>For three MAC sizes as follows:<h:ul><h:li>The smallest supported MAC size,</h:li> <h:li>The largest supported MAC size, and</h:li> <h:li>Some other supported MAC size</h:li> </h:ul> </h:li> </h:ul> <h:p/>The evaluator shall modify the tag such that 25% of the test cases in each group of 20 test cases should fail. <h:p/>The evaluator shall determine that the verification fails for the test cases with modified inputs, and succeeds for those with unmodified inputs.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/Hash Cryptographic Operation - Hashing)-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-hash" name="Cryptographic Operation - Hashing)" iteration="Hash" status="sel-based">
          <depends on-incl="sfr-fcs-cop-1-keyedhash"/>
          <depends on-incl="sfr-fcs-cop-1-sigver"/>
          <depends on-incl="sfr-fcs-cop-1-siggen"/>
          <depends on-sel="sel-rot2-hash"/>
          <depends on-sel="sel-rbg-hmac"/>
          <depends on-sel="sel-tud2-hash"/>
          <depends on-sel="sel-fdp-itc-ext-1e2-hash"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-hash">
            <title>The TSF shall perform [ <h:i>cryptographic hashing</h:i>  ] in accordance with a specified cryptographic algorithm <selectables><selectable id="sel-cop1-sha1" >SHA-1</selectable><selectable id="sel-cop1-sha224" >SHA-224</selectable><selectable id="sel-cop1-sha256" >SHA-256</selectable><selectable id="sel-cop1-sha384" >SHA-384</selectable><selectable id="sel-cop1-sha512" >SHA-512</selectable><selectable id="sel-cop1-sha512224" >SHA-512/224</selectable><selectable id="sel-cop1-sha512256" >SHA-512/256</selectable><selectable id="sel-cop1-sha3-224" >SHA-3-224</selectable><selectable id="sel-cop1-sha3-256" >SHA-3-256</selectable><selectable id="sel-cop1-sha3-384" >SHA-3-384</selectable><selectable id="sel-cop1-sha3-512" >SHA-3-512</selectable> </selectables> that meet the following: <selectables><selectable id="fcs_cop.1.1_Hash_1" >ISO/IEC 10118-3:2018 [SHA, SHA3]</selectable><selectable id="fcs_cop.1.1_Hash_2" >FIPS PUB 180-4 [SHA]</selectable><selectable id="fcs_cop.1.1_Hash_3" >FIPS PUB 202 [SHA3]</selectable> </selectables>.</title>
            <note role="application">The hash selection should be consistent with the overall strength of the algorithm used for signature generation. For example, the TOE should choose SHA-256 for 2048-bit RSA or ECC with P-256; SHA-384 for 3072-bit RSA, 4096-bit RSA, or ECC with P-384; and SHA-512 for ECC with P-521. The ST author selects the standard based on the algorithms selected.<h:p/> SHA-1 may be used as a general hash function and for the following applications: generating and verifying hash-based message authentication codes (HMACs), key derivation functions (KDFs), and random bit/number generation. SHA-1 may also be used for verifying old digital signatures and time stamps, if this is explicitly allowed by the application domain. SHA-1 should not be used in applications in which collision resistance is needed.</note>
            <aactivity level="component">
              <TSS/>
              <Guidance/>
              <Tests>The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>SHA-1, SHA2-224, SHA2-256, SHA2-384, SHA2-512, SHA2-512/224, SHA2-512/256</h:b> <h:p/>To test the TOE’s ability to generate hash digests using SHA-1 and SHA2 the evaluator shall perform the Algorithm Functional Test, Monte Carlo Test, and Large Data Test for each claimed SHA-1 and SHA2 algorithm. <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>The evaluator shall generate a number of test cases equal to the block size of the hash (512 for SHA-1, SHA2-224, and SHA2-256; 1024 for the other SHA2 algorithms). <h:p/>Each test case is to consist of random data of a random length between 0 and 65536 bits, or the largest size supported. <h:p/>Each test case is to consist of random data of a random length between 0 and 65536 bits, or the largest size supported. <h:p/> <h:br/><h:br/> <h:b>Monte Carlo Test</h:b> <h:p/>Monte Carlo tests begin with a single seed and run 100 iterations of the chained computation. <h:p/>There are two versions of the Monte Carlo test for SHA-1 and SHA-2. Either one is acceptable. For the Standard Monte Carlo test the message hashed is always three times the length of the initial seed. <h:p/> <h:pre>For j = 0 to 99 A = B = C = SEED For i = 0 to 999 MSG = A || B || C MD = SHA(MSG) A = B B = C C = MD Output MD SEED = MD</h:pre> <h:p/>For the alternate version of the Monte Carlo Test, the hashed message is always the same length as the seed. <h:p/> <h:pre>INITIAL_SEED_LENGTH = LEN(SEED) For j = 0 to 99 A = B = C = SEED For i = 0 to 999 MSG = A || B || C if LEN(MSG) >= INITIAL_SEED_LENGTH: MSG = leftmost INITIAL_SEED_LENGTH bits of MSG else: MSG = MSG || INITIAL_SEED_LENGTH - LEN(MSG) 0 bits MD = SHA(MSG) A = B B = C C = MD Output MD SEED = MD</h:pre> <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>Large Data Test</h:b> <h:p/>The implementation must be tested against one test case each on large data messages of 1GB, 2GB, 4GB, and 8GB of data as supported. The data need not be random. It may, for example, consist of a repeated pattern of 64 bits. <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>SHA3-224, SHA3-256, SHA3-384, SHA3-512</h:b>To test the TOE’s ability to generate hash digests using SHA3 the evaluator shall perform the Algorithm Functional Test, Monte Carlo Test, and Large Data Tests for each claimed SHA3 algorithm. <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>Generate a test case consisting of random data for every message length from 0 bits (or the smallest supported message size) to rate bits, where rate equals <h:ul><h:li>1152 for SHA3-224,</h:li> <h:li>1088 for SHA3-256,</h:li> <h:li>832 for SHA3-384, and</h:li> <h:li>576 for SHA3-512.</h:li> </h:ul> <h:p/>Additionally, generate tests cases of random data for messages of every multiple of (rate+1) bits starting at length rate, and continuing until 65535 is exceeded. <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>Monte Carlo Test</h:b> <h:p/>Monte Carlo tests begin with a single seed and run 100 iterations of the chained computation. <h:p/>For this Monte Carlo Test, the hashed message is always the same length as the seed. <h:p/> <h:pre>MD[0] = SEED INITIAL_SEED_LENGTH = LEN(SEED) For 100 iterations For i = 1 to 1000 MSG = MD[i-1]; if LEN(MSG) >= INITIAL_SEED_LENGTH: MSG = leftmost INITIAL_SEED_LENGTH bits of MSG else: MSG = MSG || INITIAL_SEED_LENGTH - LEN(MSG) 0 bits MD[i] = SHA3(MSG) MD[0] = MD[1000] Output MD[0]</h:pre> <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>Large Data Test</h:b> <h:p/>The implementation must be tested against one test case each on large data messages of 1GB, 2GB, 4GB, and 8GB of data as supported. The data need not be random. It may, for example, consist of a repeated pattern of 64 bits. <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/KeyedHash Cryptographic Operation - Keyed Hash-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-keyedhash" name="Cryptographic Operation - Keyed Hash" iteration="KeyedHash" status="sel-based">
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-sel="sel-rbg-hmac"/>
          <depends on-sel="sel-fdp-itc-ext-1e2-mac"/>
          <depends on-sel="sel-stg3-hmac"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-keyedhash">
            <title>The TSF shall perform [keyed hash message authentication] in accordance with a specified cryptographic algorithm<selectables><tabularize id="tab-fcs-cop-keyedhash-sels" title="Recommended choices for FCS_COP.1/KeyedHash"><selectcol>Keyed Hash Algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/KeyedHash.</reqtext></tabularize><selectable id="sel-fcs-cop-keyedhash-hmac-sha-1"><col>HMAC-SHA-1</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_1" >(ISO, FIPS) 160</selectable><selectable id="fcs_cop.1.1_KeyedHash_2" >(FIPS) 128</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_3" >ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_4" >FIPS PUB 198-1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-hmac-sha-224"><col>HMAC-SHA-224</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_5" >224 (ISO, FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_6" >192 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_7" >128 (FIPS)</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_8" >ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_9" >FIPS PUB 198-1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-hmac-sha-256"><col>HMAC-SHA-256</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_10" >256 (ISO, FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_11" >192 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_12" >128 (FIPS)</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_13" >ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_14" >FIPS PUB 198-1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-hmac-sha-384"><col>HMAC-SHA-384</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_15" >384 (ISO, FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_16" >256 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_17" >192 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_18" >128 (FIPS)</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_19" >ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_20" >FIPS PUB 198-1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-hmac-sha-512"><col>HMAC-SHA-512</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_21" >512 (ISO, FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_22" >384 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_23" >256 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_24" >192 (FIPS)</selectable><selectable id="fcs_cop.1.1_KeyedHash_25" >128 (FIPS)</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_26" >ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_27" >FIPS PUB 198-1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-kmac"><col>KMAC</col><col>TBD</col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_28" >ISO/IEC 9797-2:2021 (Section 9 “MAC Algorithm 4”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_29" >NIST SP 800-185 (Section 4 “KMAC”)</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-keyedhash-kmacxof"><col>KMACXOF</col><col> <assignable>integer 256 ≤ Lk &lt; 22040</assignable> </col><col> <selectables><selectable id="fcs_cop.1.1_KeyedHash_30" >ISO/IEC 9797-2:2021 (Section 9 “MAC Algorithm 4”)</selectable><selectable id="fcs_cop.1.1_KeyedHash_31" >NIST SP 800-185 (Section 4 “KMAC”)</selectable> </selectables> </col></selectable></selectables></title>
            <note role="application">The HMAC minimum key sizes in the table are specified in ISO/IEC 9797-2:2021, which requires that the minimum key size be equal to the digest size. The FIPS standard specifies no minimum or maximum key sizes, so if FIPS PUB 198-1 is selected, larger or smaller key sizes may be used. This is indicated by the parenthesized annotations in the Cryptographic Key Sizes column.<h:p/> If “KMACXOF128” or “KMACXOF256” is selected as Keyed Hash Algorithm, then FCS_COP.1/XOF must be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that the size of the key is sufficient for the desired security strength of the output.</TSS>
              <Guidance/>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>HMAC</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Keyed Hash Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">HMAC-SHA-1</h:td><h:td valign="top">[<h:b>selection:</h:b> (ISO, FIPS) 160, (FIPS) 128] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1]</h:td></h:tr><h:tr><h:td valign="top">HMAC-SHA-224</h:td><h:td valign="top">[<h:b>selection:</h:b> (ISO, FIPS) 224, (FIPS) 192, 128] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1]</h:td></h:tr><h:tr><h:td valign="top">HMAC-SHA-256</h:td><h:td valign="top">[<h:b>selection:</h:b> (ISO, FIPS) 256, (FIPS) 192, 128] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1]</h:td></h:tr><h:tr><h:td valign="top">HMAC-SHA-384</h:td><h:td valign="top">[<h:b>selection:</h:b> (ISO, FIPS) 384, (FIPS) 256, 192, 128] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1]</h:td></h:tr><h:tr><h:td valign="top">HMAC-SHA-512</h:td><h:td valign="top">[<h:b>selection:</h:b> (ISO, FIPS) 512, (FIPS) 384, 256, 192, 128] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 7 “MAC Algorithm 2”), FIPS PUB 198-1]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate keyed hashes using HMAC the evaluator shall perform the Algorithm Functional Test for each combination of claimed HMAC algorithm the following parameters: <h:ul><h:li>Hash function [SHA-1, SHA-224, SHA-256, SHA-384, SHA-512]</h:li> <h:li>Key length [8-65536] bits by 8s</h:li> <h:li>MAC length [32-[digest size of hash function (160, 224, 256, 384, 512)]] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported Hash function the evaluator shall generate 75 test cases using random input messages of 128 bits, random supported key lengths, random keys, and random supported MAC lengths such that across the 75 test cases: <h:ul><h:li>The key length includes the minimum, the maximum, a key length equal to the block size, and key lengths that are both larger and smaller than the block size.</h:li> <h:li>The MAC size includes the minimum, the maximum, and two other random values.</h:li> </h:ul> <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>KMAC</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Keyed Hash Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KMAC</h:td><h:td valign="top">TBD</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 9 “MAC Algorithm 4”), NIST SP 800-185 (Section 4 “KMAC”)]</h:td></h:tr><h:tr><h:td valign="top">KMACXOF</h:td><h:td valign="top">[<h:b>assignment:</h:b> <h:i>integer 256 ≤<h:i>Lk</h:i> &lt; 2<h:sup>2040</h:sup> </h:i> ]</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 9797-2:2021 (Section 9 “MAC Algorithm 4”), NIST SP 800-185 (Section 4 “KMAC”)]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate keyed hashes using KMAC the evaluator shall perform the Algorithm Functional Test and MAC Verification Test for each claimed KMAC algorithm using the following input parameters: <h:ul><h:li>KMAC function [KMAC128, KMAC256, KMACXOF128, KMACXOF256]</h:li> <h:li>Input message length [0-65536] bits</h:li> <h:li>Key size (<h:i>K</h:i> ) [128-524288] bits by 8s</h:li> <h:li>Output MAC Length (<h:i>L</h:i> ) [32-65536] bits by 8s</h:li> <h:li>Customization bit string length [0-1024]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported KMAC function, the evaluator shall generate 100 test cases using random data and random values for input message length, customization string length, and MAC length. Such that across the 100 test cases: <h:p/> <h:ul><h:li>the Message length includes the supported minimum, supported maximum, 49 unique supported values that are less than (2*digest length), and 49 unique supported values that are that are greater than or equal to (2*digest length),</h:li> <h:li>the Key length includes the supported minimum, the supported maximum, and 98 other unique random values,</h:li> <h:li>the MAC length includes the supported minimum, the supported maximum, and 98 other unique random values, and</h:li> <h:li>the Customization string length includes the supported minimum, the supported maximum, and 98 other random values.</h:li> </h:ul> <h:p/>The evaluator shall compare the output against results generated by a known-good implementation with the same input. <h:p/> <h:br/><h:br/> <h:b>MAC Verification Tests</h:b> <h:p/>For each key size, the evaluator shall generate 100 test cases as above. In half of the test cases, the evaluator shall modify the MAC so that verification fails. <h:p/>The evaluator shall determine that the results are as expected.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/KeyEncap Cryptographic Operation - Key Encapsulation-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-keyencap" name="Cryptographic Operation - Key Encapsulation" iteration="KeyEncap" status="sel-based">
          <depends on-sel="sel-ckm-2-encap"/>
          <f-element id="fcs-cop-1e1-keyencap">
            <title>The TSF shall perform [key encapsulation] in accordance with a specified cryptographic algorithm<selectables><tabularize id="tab-fcs-cop-keyencap-sels" title="Recommended choices for FCS_COP.1/KeyEncap"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/KeyEncap.</reqtext></tabularize><selectable id="sel-fcs-cop-keyencap-kas1"><col>KAS1</col><col>KAS1 [RSA-single party]</col><col> <selectables><selectable id="fcs_cop.1.1_KeyEncap_1" >2048 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_2" >3072 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_3" >4096 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_4" >8192 bit</selectable> </selectables> </col><col>NIST SP 800-56B Revision 2 (Sections 6.3 and 8.2)</col></selectable><selectable id="sel-fcs-cop-keyencap-kts"><col>KTS-OAEP</col><col>KTS-OAEP [RSA-OAEP]</col><col> <selectables><selectable id="fcs_cop.1.1_KeyEncap_5" >2048 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_6" >3072 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_7" >4096 bit</selectable><selectable id="fcs_cop.1.1_KeyEncap_8" >8192 bit</selectable> </selectables> </col><col>NIST SP 800-56B Revision 2 (Sections 6.3 and 9)</col></selectable><selectable id="sel-fcs-cop-keyencap-mlkem"><col>ML-KEM</col><col>ML-KEM Key Encapsulation</col><col>Parameter set = ML-KEM-1024</col><col>NIST FIPS 203 (Section 7.2)</col></selectable></selectables></title>
            <note role="application">NIST SP 800-57 Part 1 Revision 5 Section 5.6.2 specifies that the size of key used to protect the key being transported should be at least the security strength of the key it is protecting.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS documents that the selection of the key size is sufficient for the security strength of the key encapsulated.</TSS>
              <Guidance/>
              <Tests>The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>KAS1 [RSA-single party]</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KAS1</h:td><h:td valign="top">KAS1 [RSA-single party]</h:td><h:td valign="top">[<h:b>selection:</h:b> 2048, 3072, 4096, 8192] bits</h:td><h:td valign="top">NIST SP 800-56B Revision 2 (Sections 6.3 &amp; 8.2)</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of the of KAS1 RSA Single-Party Key Encapsulation, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>RSA Private key format [Basic with fixed public exponent, Prime Factor with fixed public exponent, Chinese Remainder Theorem with fixed public exponent, Basic with random public exponent, Prime Factor with random public exponent, Chinese Remainder Theorem with random public exponent]</h:li> <h:li>Modulo value [2048, 3072, 4096, 8192]</h:li> <h:li>Role [initiator, responder]</h:li> <h:li>Key confirmation supported [yes, no] [not included in KAS2]</h:li> </h:ul> <h:p/>The evaluator shall generate a test group (i.e. set of tests) for each parameter value of the above parameter type with the largest number of supported values. For example, if the TOE supports all six key formats, then the evaluator shall generate six test groups. Each of the above supported parameter values must be included in at least one test group. <h:p/>Regardless of how many parameter values are supported, there must be at least two test groups. <h:p/>Half of the test groups are designated as Algorithm Functional Tests (AFT) and the remainder are designated as Validation Tests (VAT). If there is an odd number of groups, then the extra group is designated randomly as either AFT or VAT. <h:p/>If there are only two test groups, in addition to the above, one shall act as an initiator, and the other as a responder, if supported. <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each test group designated as AFT, the evaluator shall generate 10 test cases using random data (except for a fixed public exponent, if supported). The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:b>Validation Test</h:b> <h:p/>For each test group designated as VAT, the evaluator shall generate 25 test cases are using random data (except for a fixed public exponent, if supported). Of the 25 test cases: <h:ul><h:li>Two test cases must have a shared secret with a leading nibble of 0s,</h:li> <h:li>Two test cases have modified derived key material,</h:li> <h:li>Two test cases have modified tags, if key confirmation is supported,</h:li> <h:li>Two test cases have modified MACs, if key confirmation is supported, and</h:li> <h:li>The remaining test cases are not modified.</h:li> </h:ul> <h:p/>To determine correctness, the evaluator shall confirm that the resulting 25 shared secrets correspond as expected for both the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>KTS-OAEP [RSA-OAEP]</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KTS-OAEP</h:td><h:td valign="top">KTS-OAEP [RSA-OAEP]</h:td><h:td valign="top">[<h:b>selection:</h:b> 2048, 3072, 4096, 8192] bits</h:td><h:td valign="top">NIST SP 800-56B Revision 2 (Sections 6.3 &amp; 9)</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of the of KTS-OAEP, the evaluator shall perform the Algorithm Functional Test and Validation Test using the following input parameters: <h:ul><h:li>Roles [initiator, receiver]</h:li> <h:li>Private Key format [Basic with fixed public exponent, Prime Factor with fixed public exponent, Chinese Remainder Theorem with fixed public exponent, Basic with random public exponent, Prime Factor with random public exponent, Chinese Remainder Theorem with random public exponent]</h:li> <h:li>Supported modulo values [2048, 3072, 4096, 8192]</h:li> <h:li>Key confirmation supported [yes, no]</h:li> </h:ul> <h:p/>The evaluator shall generate a test group (i.e. set of tests) for each parameter value of the above parameter type with the largest number of supported values. For example, if the TOE supports all six key formats, then the evaluator shall generate six test groups. Each of the above supported parameter values must be included in at least one test group. <h:p/>Regardless of how many parameter values are supported, there must be at least two test groups. <h:p/>Half of the test groups are designated as Algorithm Functional Tests (AFT) and the remainder are designated as Validation Tests (VAT). If there is an odd number of groups, then the extra group is designated randomly as either AFT or VAT. <h:p/>If there are only two test groups, in addition to the above, one shall act as an initiator, and the other as a responder, if supported. <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each test group designated as AFT, the evaluator shall generate 10 test cases using random data (except for a fixed public exponent, if supported). The resulting shared secrets shall be compared with those generated by a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:b>Validation Test</h:b> <h:p/>For each test group designated as VAT, the evaluator shall generate 25 test cases are using random data (except for a fixed public exponent, if supported). Of the 25 test cases: <h:ul><h:li>Two test cases must have a shared secret with a leading nibble of 0s,</h:li> <h:li>Two test cases have modified derived key material,</h:li> <h:li>Two test cases have modified tags, if key confirmation is supported,</h:li> <h:li>Two test cases have modified MACs, if key confirmation is supported, and</h:li> <h:li>The remaining test cases are not modified.</h:li> </h:ul> <h:p/>To determine correctness, the evaluator shall confirm that the resulting 25 shared secrets correspond as expected for both the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>ML-KEM Key Encapsulation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ML-KEM</h:td><h:td valign="top">ML-KEM KeyEncap</h:td><h:td valign="top">Parameter set = ML-KEM-1024</h:td><h:td valign="top">NIST FIPS PUB 203 (Section 7.2)</h:td></h:tr></h:table> <h:p/>To test the TOE’s implementation of ML-KEM key encapsulation/decapsulation, the evaluator shall perform the Encapsulation Test and the Decapsulation Test using the following input parameters: <h:ul><h:li>Encapsulation Parameters:<h:ul><h:li>Parameter set [ML-KEM-1024]</h:li> <h:li>Previously generated encapsulation key (<h:i>ek</h:i> )</h:li> <h:li>Random value (<h:i>m</h:i> ) [32 bytes]</h:li> </h:ul> </h:li> <h:li>Decapsulation Parameters:<h:ul><h:li>Parameter set [ML-KEM-1024]</h:li> <h:li>Previously generated decapsulation key (<h:i>dk</h:i> )</h:li> <h:li>Previously generated ciphertext (<h:i>c</h:i> ) [32 bytes]</h:li> </h:ul> </h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Encapsulation Test</h:b> <h:p/>For each supported parameter set the evaluator shall generate 25 test cases consisting of an encapsulation key ek and random value m. For each test case the valuator shall require the implementation under test to generate the corresponding shared secret k and ciphertext c. To determine correctness, the evaluator shall compare the resulting values with those generated using a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:b>Encapsulation Key Validity Test</h:b> <h:p/>TBD <h:p/> <h:br/><h:br/> <h:b>Decapsulation Test</h:b> <h:p/>For each supported parameter set the evaluator shall use a single previously generated decapsulation key <h:i>dk</h:i>and generate 10 test cases consisting of valid and invalid ciphertexts c. For each test case the evaluator shall require the implementation under test to generate the corresponding shared secret <h:i>k</h:i>whether or not the ciphertext is valid. To determine correctness, the evaluator shall compare the resulting values with those generated using a known-good implementation using the same inputs. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/KeyWrap Cryptographic Operation - Key Wrapping-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-kw" name="Cryptographic Operation - Key Wrapping" iteration="KeyWrap" status="sel-based">
          <depends on-sel="sel-ckm-2-wrap"/>
          <depends on-sel="sel-stg3-kw"/>
          <f-element id="fcs-cop-1e1-kw">
            <title>The TSF shall perform [key wrapping] in accordance with a specified cryptographic algorithm<selectables><tabularize id="fcs-cop-kw-sels" title="Recommended choices for FCS_COP.1/KeyWrap"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
								completion of the selection operations of FCS_COP.1/KeyWrap.</reqtext></tabularize><selectable id="sel-fcs-cop-kw-aes-kw"><col>AES-KW</col><col>AES in KW mode</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_1" >128</selectable><selectable id="fcs_cop.1.1_KeyWrap_2" >192</selectable><selectable id="fcs_cop.1.1_KeyWrap_3" >256</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_4" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_KeyWrap_5" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_KeyWrap_6" >ISO/IEC 19772:2020 (clause 6)</selectable><selectable id="fcs_cop.1.1_KeyWrap_7" >NIST SP 800-38F (Section 6.2)</selectable> </selectables> [KW mode]</col></selectable><selectable id="sel-fcs-cop-kw-aes-kwp"><col>AES-KWP</col><col>AES in KWP mode</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_8" >128</selectable><selectable id="fcs_cop.1.1_KeyWrap_9" >192</selectable><selectable id="fcs_cop.1.1_KeyWrap_10" >256</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_11" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_KeyWrap_12" >FIPS PUB 197</selectable> </selectables> [AES]NIST SP 800-38F (Section 6.3) [KWP mode]</col></selectable><selectable id="sel-fcs-cop-kw-aes-ccm"><col>AES-CCM</col><col>AES in CCM mode with unpredictable, non-repeating nonce, minimum size of 64 bits</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_13" >128 bits</selectable><selectable id="fcs_cop.1.1_KeyWrap_14" >192 bits</selectable><selectable id="fcs_cop.1.1_KeyWrap_15" >256 bits</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_16" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_KeyWrap_17" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_KeyWrap_18" >ISO/IEC 19772:2020 (Clause 7)</selectable><selectable id="fcs_cop.1.1_KeyWrap_19" >NIST SP 800-38C</selectable> </selectables> [CCM]</col></selectable><selectable id="sel-fcs-cop-kw-aes-gcm"><col>AES-GCM</col><col>AES in GCM mode with non-repeating IVs using <selectables><selectable id="fcs_cop.1.1_KeyWrap_20" >deterministic</selectable><selectable id="fcs_cop.1.1_KeyWrap_21" >RBG-based</selectable> </selectables> , IV construction; the tag must be of length <selectables><selectable id="fcs_cop.1.1_KeyWrap_22" >96</selectable><selectable id="fcs_cop.1.1_KeyWrap_23" >104</selectable><selectable id="fcs_cop.1.1_KeyWrap_24" >112</selectable><selectable id="fcs_cop.1.1_KeyWrap_25" >120</selectable><selectable id="fcs_cop.1.1_KeyWrap_26" >128</selectable> </selectables> bits.</col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_27" >128 bits</selectable><selectable id="fcs_cop.1.1_KeyWrap_28" >192 bits</selectable><selectable id="fcs_cop.1.1_KeyWrap_29" >256 bits</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_KeyWrap_30" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_KeyWrap_31" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_KeyWrap_32" >ISO/IEC 19772:2020 (Clause 10)</selectable><selectable id="fcs_cop.1.1_KeyWrap_33" >NIST SP 800-38D</selectable> </selectables> [GCM]</col></selectable></selectables></title>
            <note role="application">NIST 800-57p1rev5 sec. 5.6.2 specifies that the size of key used to protect the key being transported should be at least the security strength of the key it is protecting.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS documents that the selection of the key size is sufficient for the security strength of the key wrapped.<h:p/> The evaluator shall examine the TSS to ensure that it describes the construction of any IVs, nonces, and MACs.</TSS>
              <Guidance/>
              <Tests>For tests of AES-GCM and AES-CCM, see testing for FCS_COP.1/AEAD. <h:p/> <h:br/><h:br/> <h:b>AES-KW</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-KW</h:td><h:td valign="top">AES in KW mode</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 19772:2020 (clause 6), NIST SP 800-38F (Section 6.2)] [KW mode]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to wrap keys using AES in Key Wrap mode the evaluator shall perform the Algorithm Functional Tests using the following input parameters: <h:ul><h:li>Key size [128, 192, 256] bits</h:li> <h:li>Keyword cipher type [cipher, inverse]</h:li> <h:li>Payload sizes [128-4096] bits by 64s</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>The evaluator shall generate 100 encryption test cases using random data for each combination of claimed key size, keyword cipher type, and six supported payload sizes such that the payload sizes include the minimum, the maximum, two that are divisible by 128, and two that are not divisible by 128. <h:p/>The results shall be compared with those generated by a known-good implementation using the same inputs. <h:p/>The evaluator shall generate 100 decryption test cases using the same parameters as above, but with 20 of each 100 test cases having modified ciphertext to produce an incorrect result. To determine correctness, the evaluator shall confirm that the results correspond as expected for both the modified and unmodified values. <h:p/> <h:br/><h:br/> <h:b>AES-KWP</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-KWP</h:td><h:td valign="top">AES in KWP mode</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> NIST SP 800-38F (Section 6.3) [KWP mode]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to wrap keys using AES in Key Wrap with Padding mode with padding the evaluator shall perform the Algorithm Functional Tests using the following input parameters: <h:ul><h:li>Key size [128, 192, 256] bits</h:li> <h:li>Keyword cipher type [cipher, inverse]</h:li> <h:li>Payload sizes [8-4096] bits by 8s</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>The evaluator shall generate 100 encryption test cases using random data for each combination of claimed key size, keyword cipher type, and six supported payload sizes such that the payload sizes include the minimum, the maximum, two that are divisible by 128, and two that are not divisible by 128. <h:p/>The results shall be compared with those generated by a known-good implementation using the same inputs. <h:p/>The evaluator shall generate 100 decryption test cases using the same parameters as above, but with 20 of each 100 test cases having modified ciphertext to produce an incorrect result. To determine correctness, the evaluator shall confirm that the results correspond as expected for both the modified and unmodified values. <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/SigGen Cryptographic Operation - Signature Generation-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-siggen" name="Cryptographic Operation - Signature Generation" iteration="SigGen" status="sel-based">
          <depends on-sel="sel-stg3-digsig"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-siggen">
            <title>The TSF shall perform [digital signature generation] in accordance with a specified cryptographic algorithm<selectables><tabularize id="tab-fcs-cop-siggen-sels" title="Recommended choices for FCS_COP.1/SigGen"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/SigGen.</reqtext></tabularize><selectable id="sel-fcs-cop-siggen-rsa-pkcs"><col>RSA-PKCS</col><col>RSASSA-PKCS1-v1_5</col><col>Modulus of size <selectables><selectable id="fcs_cop.1.1_SigGen_1" >2048</selectable><selectable id="fcs_cop.1.1_SigGen_2" >3072</selectable><selectable id="fcs_cop.1.1_SigGen_3" >4096</selectable> </selectables> bits, hash or XOF <selectables><selectable id="fcs_cop.1.1_SigGen_4" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigGen_5" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigGen_6" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigGen_7" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigGen_8" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigGen_9" >SHA3-512</selectable> </selectables> </col><col>RFC 8017 (Section 8.2) [PKCS #1 v2.2]FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</col></selectable><selectable id="sel-fcs-cop-siggen-rsa-pss"><col>RSA-PSS</col><col>RSASSA-PSS</col><col>Modulus of size <selectables><selectable id="fcs_cop.1.1_SigGen_10" >2048</selectable><selectable id="fcs_cop.1.1_SigGen_11" >3072</selectable><selectable id="fcs_cop.1.1_SigGen_12" >4096</selectable> </selectables> bits, hash or XOF <selectables><selectable id="fcs_cop.1.1_SigGen_13" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigGen_14" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigGen_15" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigGen_16" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigGen_17" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigGen_18" >SHA3-512</selectable><selectable id="fcs_cop.1.1_SigGen_19" >SHAKE128</selectable><selectable id="fcs_cop.1.1_SigGen_20" >SHAKE256</selectable> </selectables> , Salt Length () such that <assignable>0 ≤ sLen ≤ hLen (Hash/XOF Output Length)</assignable> and Mask Generation Function = <selectables><selectable id="fcs_cop.1.1_SigGen_21" >MGF1</selectable><selectable id="fcs_cop.1.1_SigGen_22" >SHAKE128</selectable><selectable id="fcs_cop.1.1_SigGen_23" >SHAKE256</selectable> </selectables> </col><col>RFC 8017 (Section 8.1) [PKCS#1 v2.2]FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</col></selectable><selectable id="sel-fcs-cop-siggen-ecdsa"><col>ECDSA</col><col>ECDSA</col><col>Elliptic Curve <selectables><selectable id="fcs_cop.1.1_SigGen_24" >NIST P-256</selectable><selectable id="fcs_cop.1.1_SigGen_25" >brainpoolP256r1</selectable><selectable id="fcs_cop.1.1_SigGen_26" >NIST P-384</selectable><selectable id="fcs_cop.1.1_SigGen_27" >brainpoolP384r1</selectable><selectable id="fcs_cop.1.1_SigGen_28" >NIST P-521</selectable><selectable id="fcs_cop.1.1_SigGen_29" >brainpoolP512r1</selectable> </selectables> , per-message secret number generation <selectables><selectable id="fcs_cop.1.1_SigGen_30" >extra random bits</selectable><selectable id="fcs_cop.1.1_SigGen_31" >rejection sampling</selectable><selectable id="fcs_cop.1.1_SigGen_32" >deterministic</selectable> </selectables> and hash or XOF function using <selectables><selectable id="fcs_cop.1.1_SigGen_33" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigGen_34" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigGen_35" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigGen_36" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigGen_37" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigGen_38" >SHA3-512</selectable><selectable id="fcs_cop.1.1_SigGen_39" >SHAKE128</selectable><selectable id="fcs_cop.1.1_SigGen_40" >SHAKE256</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_SigGen_41" >ISO/IEC 14888-3:2018 (Subclause 6.6)</selectable><selectable id="fcs_cop.1.1_SigGen_42" >FIPS PUB 186-5 (Sections 6.3.1, 6.4.1]</selectable> </selectables> [ECDSA] <selectables><selectable id="fcs_cop.1.1_SigGen_43" >RFC 5639 (Section 3) [Brainpool Curves]</selectable><selectable id="fcs_cop.1.1_SigGen_44" >NIST SP-800 186 (Section 4) [NIST Curves]]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-siggen-eddsa"><col>EdDSA</col><col>Edwards-Curve Digital Signature Algorithm</col><col>Domain parameters approved for elliptic curves <selectables><selectable id="fcs_cop.1.1_SigGen_45" >Edwards25519</selectable><selectable id="fcs_cop.1.1_SigGen_46" >Edwards448</selectable> </selectables> </col><col>NIST FIPS PUB 186-5 (Section 7.6) [EdDSA]RFC 8032 [Edwards Curves]</col></selectable><selectable id="sel-fcs-cop-siggen-lms"><col>LMS</col><col>LMS</col><col>Private key size = <selectables><selectable id="fcs_cop.1.1_SigGen_47">192 bits with <selectables><selectable id="fcs_cop.1.1_SigGen_48" >SHA-256/192</selectable><selectable id="fcs_cop.1.1_SigGen_49" >SHAKE256/192</selectable></selectables> </selectable><selectable id="fcs_cop.1.1_SigGen_50">256 bits with <selectables><selectable id="fcs_cop.1.1_SigGen_51" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigGen_52" >SHAKE256</selectable></selectables> </selectable> </selectables> Winternitz parameter = <selectables><selectable id="fcs_cop.1.1_SigGen_53" >1</selectable><selectable id="fcs_cop.1.1_SigGen_54" >2</selectable><selectable id="fcs_cop.1.1_SigGen_55" >4</selectable><selectable id="fcs_cop.1.1_SigGen_56" >8</selectable> </selectables> Tree height = <selectables><selectable id="fcs_cop.1.1_SigGen_57" >5</selectable><selectable id="fcs_cop.1.1_SigGen_58" >10</selectable><selectable id="fcs_cop.1.1_SigGen_59" >15</selectable><selectable id="fcs_cop.1.1_SigGen_60" >20</selectable><selectable id="fcs_cop.1.1_SigGen_61" >25</selectable> </selectables> </col><col>RFC 8554 [LMS]NIST SP 800-208 [parameters]</col></selectable><selectable id="sel-fcs-cop-siggen-mldsa"><col>ML-DSA</col><col>ML-DSA Signature Generation</col><col>Perameter set = ML-DSA-87</col><col>NIST FIPS 204 (Section 5.2)</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if digital signature generation is a service provided by the TOE to tenant software, or if digital signature generation is used by the TOE itself to support or implement PP-specified security functionality.<h:p/> Specifically, this SFR must be included if "<h:i>A digital signature of the stored key in accordance with FCS_COP.1/SigGen using an asymmetric key that is protected in accordance with FCS_STG_EXT.2</h:i> " is selected in FCS_STG_EXT.3.<h:p/> If this SFR is included in the ST, then FCS_COP.1/Hash and FCS_RBG.1 must also be claimed.<h:p/> For LMS, the key sizes do not represent the expected security strength. All key sizes given here correspond to an expected security strength of 128 bits, per NIST SP 800-208. Also, SHA-256/192 is the preferred hash algorithm when feasible in accordance with CNSA 2.0.<h:p/> The dependency on FCS_OTV_EXT.1 is needed only for signature schemes that require random bits, such as ECDSA, LMS, and ML-DSA.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS and verify that any hash function is the appropriate security strength for the signing algorithm.<h:p/> The evaluator shall examine the TSS to verfiy that the TOE has appropriate measures in place to ensure that hash-based signature algorithms do not reuse private keys</TSS>
              <Guidance/>
              <Tests>Boilerplate text goes here <h:p/> <h:br/><h:br/> <h:b>RSA-PKCS Signature Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">RSA-PKCS</h:td><h:td valign="top">RSASSA-PKCS1-v1_5</h:td><h:td valign="top">Modulus of size [<h:b>selection:</h:b> 2048, 3072, 4096] bits, hash or XOF [<h:b>selection:</h:b> SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:td><h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/> NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform RSA Digital Signature Generation using PKCS1-v1,5 signature type, the evaluator shall perform the Generated Data Test using the following input parameters: <h:ul><h:li>Modulus size [2048, 3072, 4096] bits</h:li> <h:li>Hash algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Generated Data Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate three test cases using random data. The evaluator shall compare the results against those from a known-good implementation. <h:p/> <h:br/><h:br/> <h:b>RSA-PSS Signature Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">RSA-PSS</h:td><h:td valign="top">RSASSA-PSS</h:td><h:td valign="top">Modulus of size [<h:b>selection:</h:b> 2048, 3072, 4096] bits, hash or XOF [<h:b>selection:</h:b> SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256], Salt Length (<h:i>sLen</h:i> ) such that [<h:b>assignmant:</h:b> 0 ≤<h:i>sLen</h:i> ≤<h:i>hLen</h:i> (Hash/XOF Output Length)] and Mask Generation Function = [<h:b>selection:</h:b> MGF1, SHAKE128, SHAKE256]</h:td><h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/> NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform RSA Digital Signature Generation using PSS signature type, the evaluator shall perform the Generated Data Test using the following input parameters: <h:ul><h:li>Modulus size [2048, 3072, 4096] bits</h:li> <h:li>Hash or XOF algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3- 512, SHAKE128, SHAKE25]</h:li> <h:li>Salt length [Fixed based on implementation]</h:li> <h:li>Mask function [MGF1, SHAKE128, SHAKE256]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Generated Data Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate three test cases using random data. The evaluator shall compare the reulsts against those from a known-good implementation. <h:p/> <h:br/><h:br/> <h:b>ECDSA Signature Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ECDSA</h:td><h:td valign="top">ECDSA</h:td><h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1], per-message secret number generation [<h:b>selection:</h:b> extra random bits, rejection sampling, deterministic] and hash or XOF function using [<h:b>selection:</h:b> SHA256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, SHAKE-128, SHAKE256]</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 14888-3:2018 (Subclause 6.6), NIST FIPS PUB 186-5 (Sections 6.3.1, 6.4.1] [ECDSA]<h:p/> [<h:b>selection:</h:b> RFC 5639 (Section 3) [Brainpool Curves], NIST SP-800 186 (Section 4) [NIST Curves]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform ECDSA Digital Signature Generation using extra random bits or rejection sampling for secret number generation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Ellliptic Curve [P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:li> <h:li>Hash algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, SHAKE-128, SHAKE-256]</h:li> </h:ul> <h:p/>To test the TOE’s ability to perform ECDSA Digital Signature Generation using deterministic secret number generation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Ellliptic Curve [P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:li> <h:li>Hash algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate 10 test cases using random data. The evaluator shall compare the results against those from a known-good implementation. <h:p/> <h:br/><h:br/> <h:b>EdDSA Signature Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">EdDSA</h:td><h:td valign="top">Edwards-Curve Digital Signature Algorithm</h:td><h:td valign="top">Domain parameters approved for elliptic curves [<h:b>selection:</h:b> Edwards25519, Edwards448]</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section 7.6) [EdDSA]<h:p/> RFC 8032 [Edwards Curves]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform EdDSA Digital Signature Generation, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Ellliptic Curve [Edwards25519, Edwards448]</h:li> <h:li>Supports [Pure EdDSA, PreHash EdDSA]</h:li> <h:li>Context string length [0-255] bytes<h:ul><h:li>Context string is required for curve Edwards448 or PreHash EdDSA</h:li> <h:li>Context string is not allowed for curve Edwards25519 when Pure EdDSA</h:li> </h:ul> </h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate 10 test cases using random data. If context string is required, then each set of 10 test cases shall include one context string of the minimum supported length, one of the maximum supported length, and eight of random lengths, The evaluator shall compare the results against those from a known-good implementation. <h:p/> <h:br/><h:br/> <h:b>LMS Signature Generation</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">LMS</h:td><h:td valign="top">LMS</h:td><h:td valign="top">Private key size = [<h:b>selection:</h:b> 192 bits with [<h:b>selection:</h:b> SHA256/192, SHAKE256/192], 256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]] , Winternitz parameter = [<h:b>selection:</h:b> 1, 2, 4, 8], and tree height = [<h:b>selection:</h:b> 5, 10, 15, 20, 25]</h:td><h:td valign="top">RFC 8554 [LMS]<h:p/> NIST SP 800-208 [parameters]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate cryptographic digital signature using LMS, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li> <h:li>Winterlitz [1, 2, 4, 8]</h:li> <h:li>Tree height [5, 10, 15, 20, 25]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall generate 10 signatures. The evaluator shall verify the correctness of the implementation by comparing values generated by the TOE with those generated by a known good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>ML-DSA Signature Gneration</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ML-DSA</h:td><h:td valign="top">ML-DSA SigGen</h:td><h:td valign="top">Parameter set = ML-DSA-87</h:td><h:td valign="top">NIST FIPS PUB 204 (Section 5.2)</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to generate digital signatures using ML-DSA, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Parameter set [ML-DSA-87]</h:li> <h:li>Seed [32 random bytes] (for non-deterministic signature testing), or</h:li> <h:li>Seed [32 zero bytes] (for deterministic signature testing)</h:li> <h:li>Message to sign [8-65535] bytes</h:li> <h:li><h:i>Mu</h:i> value (if generated externally)</h:li> <h:li>Previously generated private key (<h:i>sk</h:i> )</h:li> <h:li>Context (for external interface testing)</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each combination of supported parameter set and capabilities, the evaluator shall require the implementation under test to generate 15 signatures pairs using 15 different randomly generated 32-byte seed values. To determine correctness, the evaluator shall compare the resulting key pairs with those generated using a known-good implementation using the same inputs. <h:p/> <h:br/><h:br/> <h:b>Known Answer Test for Rejection Cases</h:b> <h:p/>For each supported parameter set, the evaluator shall cause the TOE to generate signatures using the data below and a deterministic seed of all 0’s. Correctness is determined by comparing the hash of the resulting signature with the hash of the signature. <h:p/>The values are defined as follows: <h:ul><h:li><h:i>Seed</h:i> is the seed to generate the key pair (<h:i>pk, sk</h:i> )</h:li> <h:li><h:i>Hash of keys</h:i> is computed by SHA-256(<h:i>pk</h:i> ||<h:i>sk</h:i> )</h:li> <h:li><h:i>Message</h:i> is the message to be signed</h:li> <h:li><h:i>Hash of sig</h:i> is computed by SHA-256(<h:i>sig</h:i> )</h:li> </h:ul> <h:p/> <h:p/> <h:b>ML-DSA-87 Test Cases for Rejection Cases</h:b> <h:p/> <h:pre>Test case 87-RC-01 Seed: E4F5AFCF697E0EC3C1BDEB66FAA903221E803902F9C3F716E1056A63D77DC250 Hash of Keys: 61618E8DDA6998072C8EB36974E03880D741CAF0BD523356DFC161E7C9E63934 Message: F4F1C05004D5B946F69EAFE104C4020519086ADDB9582A20FDE887D13DFC36B1 Hash of sig: B584E38FA442FC3C81A147D4BDBF058D73C822CAF5CA4C06B0110867F60A8001 Test case 87-RC-02 Seed: 8B828D871254D6C57384A8E7025AA3F7160CAD1D2C754499DF3844426062C3DD Hash of Keys: BB64481317D6C0DBAD20C0C7EF11078AD54E5D574F4A07652115A95F77C655FA Message: 0F9409C5A4930C25B83FC5B77FDB5BB49C75372DE724D9C1A77DB700CF0CF154 Hash of sig: F86B49BE9DEB2B209BDEB4E922E5939E92D38E562C44BB09AFBD67323C345192 Test case 87-RC-03 Seed: E693D282CACB8CE65FD4D108DA7A373F097F0AA9713550BE242AAD5BD3E2E452 Hash of Keys: B0BEAF56713A69BD4AB2CBEE006FA5001E7B41F3AE541E05F088933AA0CC78DF Message: 24DABB9D57ADEBD560ED65D9451C5106D437061708F849BA53F3543CDF9AAAE0 Hash of sig: DBF65CEFF9F96A74AAF6F3AB27B043231BE6AA04FBA2EEC987A24A00BDD6A08E Test case 87-RC-04 Seed: 4002163EB8EED01A8E0919BA8C07D291341EDCAE25B02B9779A2CFFE50561AF0 Hash of Keys: FED1BE685C20ECB322FC40D41DEE7E0E98D0409FBF989CAE71B8AD2D58AD645E Message: EE316BB5EBED53325B4A55571C60657B53E353B51B831F4A0BBB28107EBA4BA8 Hash of sig: 3BE9B5545FDCED92547B3409C83B3312CCB5792A8EC3A4DA63BA692C79BEF17C Test case 87-RC-05 Seed: 9C7AD524F65854C27E565BCEDF8E86D650F13A40D0448F9AE10C05F10F777120 Hash of Keys: 0EA872CA5A4BEA94F4E8EF7ED31800727899A51059FDEE111E5CB15F0233B534 Message: CE09831294AA96CAF684B9E667947B021C57B24C138EC7D4DA270694C82F2E08 Hash of sig: 3B9526CEE6587F2418BFE603ADB0F7DF0D69EBA31C9F9F005C60C993945EBD33 Test case 87-RC-06 Seed: 2EB7676D4A28700DA7772A7A035EB495CAA6F842352A74824EF5FD891BC38B2A Hash of Keys: D5B73703A1DDC5BCB0D14AE39B193A25D6ADA6535827973181ADB0BE70435A5B Message: C2B3A0AC483A5517682285C205974B2A506946448A8F7D3E1934C155EFDFE922 Hash of sig: 375D598704B722C8A1FEF1626FD7738A532C06329AA4217357460E3B729660F8 Test case 87-RC-07 Seed: E4E80CCE8B26DF1B02B99949851EE2F907FE4F0CC34790352C76D5D91634D073 Hash of Keys: 84B7E61684A12698400B09EA332EA3C4FBCFA47FE37FD6AE725CBC5FA8A99D3F Message: 89E6AB43C9CB1CC59C3986D53217A558357E62102A26F666F2B64CD1DBB7A536 Hash of sig: 7C4AABD163CAEF8F6EBFDA3E3EEBC0A9604675B0E991ABAFD284F1AE8BA07B2A Test case 87-RC-08 Seed: 5787262B803499223D4E5A8C1EE572E89F7A69B359B3F8505355B0BDEAB95E5C Hash of Keys: 85AE1DE605A7B479C02730BF4B7DD6D0FD8FFE5C980893CA6DAD00BD8BD1CE68 Message: D3230C4E061964BBFB17702432D5D36FC1EB3D1068F8CCAA84044776E3B5CC55 Hash of sig: D3ABE460EE2DD9595F413CFE2780A319E4E4DFD6592995298A7AB0B82A5E2815 Test case 87-RC-09 Seed: CE099B99330537DD153052243FC32ACAD509A126AB982410258858567D410D79 Hash of Keys: E04A9F15EDF8F078EB336CE624249EF2A8EDF2CDBF6A8276E9F5E92ED9B0BAE8 Message: 0035931762665F561A1B22176567E3B10FDE2441521F77030733A8E39312EEEE Hash of sig: 3EEF413CB5EB179896ECA172D0DBFB9B251545DC561D61580BD5BBC8B6D734E1 Test case 87-RC-10 Seed: FC8F2929878CBD81E1CCC23913F290380120C043A4A8A251AEEBF09705B8E590 Hash of Keys: 7E2ECCA86F532E8E8092FEBB6E0007F92E7909AD2BCBE2E02AB375DAC9969E5E Message: D3C28875D2671C0EF23BFDC8869E8ECF8868D3F0561C3134D254F7479D0CE0E5 Hash of sig: EB69A908EDCC04320A0B61AD57E21B044465F2037698636B64229CF2DB259789</h:pre> <h:br/><h:br/> <h:b>Known Answer Test for Large Number of Rejection Cases (Total Rejection Count)</h:b> <h:p/>For each supported parameter set, the evaluator shall cause the TOE to generate signatures using the data below and a deterministic seed of all 0’s. Correctness is determined by comparing the hash of the resulting signature with the hash of the signature. <h:p/> <h:p/> <h:b>ML-DSA-87 Test Cases for Total Rejection Count</h:b> <h:p/> <h:pre>Test case 87-LN-01 Seed: 98B6298051D92BF37293C93C97370747BF527B87B71F6C4264182F45155ADE4C Hash of Keys: 04A135B5C9B7020332C7B16E7108E8FF7FC1EAE1C23C5FA0B5D5CED0FEEE7424 Message: D7B0341269259083ABF3C8DC47559A19D57669B4486E0224F376DC43E577A3D8 Hash of sig: 58D72D76EC0FB65BFB9893C4479366B79DD7B8B7577E4291D13514FCC76C26DD Test case 87-LN-02 Seed: DFB5BDD90F58571DCA962426C623F13D046BBE814D183886AC90D143EAD725A7 Hash of Keys: 2B6AB8CFCCCC41F759CAF01932E9413F5DC6D949BC827F739866929683FB155E Message: 21005DB2B583CC826A9684BFFD0EE00AB97E0479FE4A1D266699337540145778 Hash of sig: C93EA34E00FFFFC3ECEA072D5FB038A83B5539CAF7B831AEDCFA785E50B3CA5E Test case 87-LN-03 Seed: 5AD414E0DD0EF2FE685F342871875FDF06F503717A86C3B3466565ADD2096417 Hash of Keys: BD9C2D52F3FC78DB17E682DA2E78947ECFC0898333838D60C892700B2B0DDA9F Message: 29139C279816B25F2D6BB52C8247D163544F7BA332C3CF63359B9E23FBC56515 Hash of sig: DB4BE2DE19FB40437BDB7E9B6578D665DB05B4E88C16907DF4546EBA9BE03AEA Test case 87-LN-04 Seed: 484DD2F406A4D15F49A91AD5FC3BDC1D0FF253622EB68F83D6E1C870D0E89E29 Hash of Keys: A719DC9A77C91C46295555C2353BA0CBEA513DA9A92A5C34D2E949EFF46A12D8 Message: 6AD6E959F0EA60126364FB7C95FA71133F246A9265A11B4965EE78AB0CB5AF0E Hash of sig: 5050D7A665074EC63D9F3966C1F01A1BFB18F9E83AE0B09F838BC1E2342ED6F4 Test case 87-LN-05 Seed: B25C1816F82D59940D5CB829BAC364AAD013C4C16415CE1CF6DCC2F15199B391 Hash of Keys: ADBB2CD43F222640BD9FF4E61C80E63853E8DC1F759C581B7447C9C166EAA38E Message: 824E47322895BFFE37B6B4AFC41CF6115C07EEC0C24EB81076C87A1B01AE8617 Hash of sig: 667ADA46073BC69D64DC47BB9A76DD0D78302E7415D87D5E816B05FB95F9E84D Test case 87-LN-06 Seed: B2CE72B3560AF07E06465881F56ADA00262BA708D87B73F39E04E310F3B8A3E9 Hash of Keys: FD9C4AC53AE803242A62DF933B8E8BAD6CE5207AC4A73683B6D9383B5E70B17A Message: A1501CC84C917E0D2D7C27C2AC382220BD8FFFE807DB38E37A9E429EC2781911 Hash of sig: 779553B195E11558EE59EF3942F5F6B446A2144600D1F4F50B300C6C56504760 Test case 87-LN-07 Seed: AB01D0E591B7DDCD3C03395AED808FA2763C0A486D44119D621BE0FD0B022B25 Hash of Keys: 93B6ADE34F78A4ADB36B2F6D2C51DB793E659E1243E80488AE1C03B65125D6D7 Message: 8DE8122D89D15FE84A4C34F6B59B2C4B11F33B6A053154D199B634F557FDF5F6 Hash of sig: 0483045999A79B583F403DB96A736F0F0B24E2DFBC4E5CFA9B50E3D910786F07 Test case 87-LN-08 Seed: 15D60D3693762F82C9AC1DCB0576936651AC81D863842EDB91109C8EE83AE705 Hash of Keys: 2DF544E2E939AA717741C2437288FAEB308DEB8FF37A2652FAE34BAE8B84D779 Message: F05946A6113905C34163AEF2246FD69016CE24A7BA40F8E7E42EDAC2D0A44605 Hash of sig: F8383917AF79C8E540D2356AB05F08B465BF32DFEC444B787CE31BF48CC6C3DD Test case 87-LN-09 Seed: 21212285BED53B3411705DAF5F3BDDB6F0618EB571B36EE11A74053407A269F5 Hash of Keys: 737061155A9A03F11F9FEBBB940BED4DD54542C4A6212F89A5EB4EC2BE542782 Message: FFE38246BF3DEFD9CAD15CC17CEA511C067D582E04227B479E32F9197CF91482 Hash of sig: C4C12C58032052FB2D21F0C6A7388A63154FB85B74287D2859DE6C1C6F7F277B Test case 87-LN-10 Seed: A2744470587C71BA43EC26DC390CE3531978F315993C653E5D3EFD2849D5D9F1 Hash of Keys: B1BF37BFFB11531B6ADD697870D7DB2E2462D0A97A63F09C1D0038457C6D795A Message: 9831A830231A160B9847203341A5F30BF3E87A2A482AEEA6886315C92B5C4E4C Hash of sig: 46C669D2FEB643A38E54FF87B790CC33F44043A1B6B31DB9474D301328CA2A7F</h:pre></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/SigVer Cryptographic Operation - Signature Verification-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-sigver" name="Cryptographic Operation - Signature Verification" iteration="SigVer" status="sel-based">
          <depends on-sel="sel-rot2-digsig"/>
          <depends on-sel="sel-tud1-auth-update"/>
          <depends on-sel="sel-tud1-unauth-update"/>
          <depends on-sel="sel-fdp-itc-ext-1e2-sig"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-sigver">
            <title>The TSF shall perform [digital signature verification] in accordance with a specified cryptographic algorithm<selectables><tabularize id="tab-fcs-cop-sigver-sels" title="Recommended choices for FCS_COP.1/SigVer"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
										completion of the selection operations of FCS_COP.1/SigVer.</reqtext></tabularize><selectable id="sel-fcs-cop-sigver-rsa-pkcs"><col>RSA-PKCS</col><col>RSASSA-PKCS1-v1_5</col><col>Modulus of size <selectables><selectable id="fcs_cop.1.1_SigVer_1" >2048</selectable><selectable id="fcs_cop.1.1_SigVer_2" >3072</selectable><selectable id="fcs_cop.1.1_SigVer_3" >4096</selectable> </selectables> bits, hash or XOF <selectables><selectable id="fcs_cop.1.1_SigVer_4" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigVer_5" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigVer_6" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigVer_7" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigVer_8" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigVer_9" >SHA3-512</selectable> </selectables> </col><col>RFC 8017 (Section 8.2) [PKCS #1 v2.2]FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</col></selectable><selectable id="sel-fcs-cop-sigver-rsa-pss"><col>RSA-PSS</col><col>RSASSA-PSS</col><col>Modulus of size <selectables><selectable id="fcs_cop.1.1_SigVer_10" >2048</selectable><selectable id="fcs_cop.1.1_SigVer_11" >3072</selectable><selectable id="fcs_cop.1.1_SigVer_12" >4096</selectable> </selectables> bits, hash or XOF <selectables><selectable id="fcs_cop.1.1_SigVer_13" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigVer_14" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigVer_15" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigVer_16" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigVer_17" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigVer_18" >SHA3-512</selectable><selectable id="fcs_cop.1.1_SigVer_19" >SHAKE128</selectable><selectable id="fcs_cop.1.1_SigVer_20" >SHAKE256</selectable> </selectables> </col><col>RFC 8017 (Section 8.1) [PKCS#1 v2.2]FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</col></selectable><selectable id="sel-fcs-cop-sigver-dsa"><col>DSA</col><col>DSA</col><col>Domain parameters for (L, N) = <selectables><selectable id="fcs_cop.1.1_SigVer_21" >(2048, 224)</selectable><selectable id="fcs_cop.1.1_SigVer_22" >(2048, 256)</selectable><selectable id="fcs_cop.1.1_SigVer_23" >(3072, 256)</selectable> </selectables> bits</col><col>FIPS PUB 186-4 (Section 4.7) [DSA Signature Verification]</col></selectable><selectable id="sel-fcs-cop-sigver-ecdsa"><col>ECDSA</col><col>ECDSA</col><col>Elliptic Curve <selectables><selectable id="fcs_cop.1.1_SigVer_24" >NIST P-256</selectable><selectable id="fcs_cop.1.1_SigVer_25" >brainpoolP256r1</selectable><selectable id="fcs_cop.1.1_SigVer_26" >NIST P-384</selectable><selectable id="fcs_cop.1.1_SigVer_27" >brainpoolP384r1</selectable><selectable id="fcs_cop.1.1_SigVer_28" >NIST P-521</selectable><selectable id="fcs_cop.1.1_SigVer_29" >brainpoolP512r1</selectable> </selectables> using hash or XOF <selectables><selectable id="fcs_cop.1.1_SigVer_30" >SHA-1</selectable><selectable id="fcs_cop.1.1_SigVer_31" >SHA-224</selectable><selectable id="fcs_cop.1.1_SigVer_32" >SHA-512/224</selectable><selectable id="fcs_cop.1.1_SigVer_33" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigVer_34" >SHA-512/256</selectable><selectable id="fcs_cop.1.1_SigVer_35" >SHA-384</selectable><selectable id="fcs_cop.1.1_SigVer_36" >SHA-512</selectable><selectable id="fcs_cop.1.1_SigVer_37" >SHA3-224</selectable><selectable id="fcs_cop.1.1_SigVer_38" >SHA3-256</selectable><selectable id="fcs_cop.1.1_SigVer_39" >SHA3-384</selectable><selectable id="fcs_cop.1.1_SigVer_40" >SHA3-512</selectable><selectable id="fcs_cop.1.1_SigVer_41" >SHAKE128</selectable><selectable id="fcs_cop.1.1_SigVer_42" >SHAKE256</selectable> </selectables> </col><col> <selectables><selectable id="fcs_cop.1.1_SigVer_43" >ISO/IEC 14888-3:2018 (Subclause 6.6)</selectable><selectable id="fcs_cop.1.1_SigVer_44" >FIPS PUB 186-5 (Section 6.4.2)</selectable> </selectables> [ECDSA] <selectables><selectable id="fcs_cop.1.1_SigVer_45" >RFC 5639 (Section 3) [Brainpool Curves]</selectable><selectable id="fcs_cop.1.1_SigVer_46" >NIST SP-800 186 (Section 4) [NIST Curves]</selectable> </selectables> </col></selectable><selectable id="sel-fcs-cop-sigver-eddsa"><col>EdDSA</col><col>Edwards-Curve Digital Signature Algorithm</col><col>Domain parameters approved for elliptic curves <selectables><selectable id="fcs_cop.1.1_SigVer_47" >Edwards25519</selectable><selectable id="fcs_cop.1.1_SigVer_48" >Edwards448</selectable> </selectables> </col><col>NIST FIPS PUB 186-5 (Section 7.6) [EdDSA]RFC 8032 [Edwards Curves]</col></selectable><selectable id="sel-fcs-cop-sigver-lms"><col>LMS</col><col>LMS</col><col>Private key size = <selectables><selectable id="fcs_cop.1.1_SigVer_49">192 bits with <selectables><selectable id="fcs_cop.1.1_SigVer_50" >SHA-256/192</selectable><selectable id="fcs_cop.1.1_SigVer_51" >SHAKE256/192</selectable></selectables> </selectable><selectable id="fcs_cop.1.1_SigVer_52">256 bits with <selectables><selectable id="fcs_cop.1.1_SigVer_53" >SHA-256</selectable><selectable id="fcs_cop.1.1_SigVer_54" >SHAKE256</selectable></selectables> </selectable> </selectables> Winternitz parameter = <selectables><selectable id="fcs_cop.1.1_SigVer_55" >1</selectable><selectable id="fcs_cop.1.1_SigVer_56" >2</selectable><selectable id="fcs_cop.1.1_SigVer_57" >4</selectable><selectable id="fcs_cop.1.1_SigVer_58" >8</selectable> </selectables> Tree height = <selectables><selectable id="fcs_cop.1.1_SigVer_59" >5</selectable><selectable id="fcs_cop.1.1_SigVer_60" >10</selectable><selectable id="fcs_cop.1.1_SigVer_61" >15</selectable><selectable id="fcs_cop.1.1_SigVer_62" >20</selectable><selectable id="fcs_cop.1.1_SigVer_63" >25</selectable> </selectables> </col><col>RFC 8554 [LMS]NIST SP 800-208 [parameters]</col></selectable><selectable id="sel-fcs-cop-sigver-mldsa"><col>ML-DSA</col><col>ML-DSA Signature Verification</col><col>Perameter set = ML-DSA-87</col><col>NIST FIPS 204 (Section 5.3)</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if digital signature verification is a service provided by the TOE to tenant software, or if digital signature verification is used by the TOE itself to support or implement PP-specified security functionality.<h:p/> Specifically, this SFR must be included if the ST Author chooses "<h:i>implement an authenticated platform firmware update mechanism as described in FPT_TUD_EXT.2</h:i> " or "<h:i>implement a delayed-authentication platform firmware update mechanism as described in FPT_TUD_EXT.3</h:i> " in FPT_TUD_EXT.1; or if the ST Author selects "<h:i>verification of a digital signature by trusted code/data</h:i> " in FPT_ROT_EXT.2.<h:p/> If this SFR is included in the ST, then FCS_COP.1/Hash must also be claimed.<h:p/> The ST Author should choose the algorithm implemented to perform verification of digital signatures. For the algorithm chosen, the ST Author should make the appropriate assignments/selections to specify the parameters that are implemented for that algorithm. In particular, if ECDSA is selected as one of the signature algorithms, the key size specified must match the selection for the curve used in the algorithm.<h:p/> For elliptic curve-based schemes, the key size refers to the binary logarithm (log2) of the order of the base point. As the preferred approach for digital signatures, elliptic curves will be required after all the necessary standards and other supporting information are fully established.<h:p/> The TOE may contain a public key which is integrity protected (e.g., in hardware), in which case the FDP_ITC.1 and FDP_ITC.2 dependencies do not apply. In this case, no dependencies may be chosen. For signature verifications, private keys are not necessary, so there are no dependencies required for generating or destroying cryptographic keys.</note>
            <aactivity level="component">
              <TSS/>
              <Guidance/>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>RSA-PKCS Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">RSA-PKCS</h:td><h:td valign="top">RSASSA-PKCS1-v1_5</h:td><h:td valign="top">Modulus of size [<h:b>selection:</h:b> 2048, 3072, 4096] bits, hash or XOF [<h:b>selection:</h:b> SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:td><h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/> NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PKCS1-v1_5]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform RSA Digital Signature Verification using PKCS1-v1,5 signature type, the evaluator shall perform Generated Data Test using the following input parameters: <h:ul><h:li>Modulus size [2048, 3072, 4096] bits</h:li> <h:li>Hash algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Generated Data Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate six test cases using a random message and its signature such that the test cases are modified as follows: <h:p/> <h:ul><h:li>One test case is left unmodified</h:li> <h:li>For one test case the Message is modified</h:li> <h:li>For one test case the Signature is modified</h:li> <h:li>For one test case the exponent (<h:i>e</h:i> ) is modified</h:li> <h:li>For one test case the IR is moved</h:li> <h:li>For one test case the Trailer is moved</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures. <h:p/> <h:br/><h:br/> <h:b>RSA-PSS Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">RSA-PSS</h:td><h:td valign="top">RSASSA-PSS</h:td><h:td valign="top">Modulus of size [<h:b>selection:</h:b> 2048, 3072, 4096] bits, hash or XOF [<h:b>selection:</h:b> SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256]</h:td><h:td valign="top">RFC 8017 (Section 8.2) [PKCS #1 v2.2]<h:p/> NIST FIPS PUB 186-5 (Section 5.4) [RSASSA-PSS]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform RSA Digital Signature Verification using PSS signature type, the evaluator shall perform the Generated Data Test using the following input parameters: <h:ul><h:li>Modulus size [2048, 3072, 4096] bits</h:li> <h:li>Hash or XOF algorithm [SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3- 512, SHAKE128, SHAKE256]</h:li> <h:li>Salt length [0-hash length]</h:li> <h:li>Mask function [MGF1, SHAKE128, SHAKE256]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Generated Data Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate six test cases using random data such that the test cases are modified as follows: <h:p/> <h:ul><h:li>One test case is left unmodified</h:li> <h:li>For one test case the Message is modified</h:li> <h:li>For one test case the Signature is modified</h:li> <h:li>For one test case the exponent (<h:i>e</h:i> ) is modified</h:li> <h:li>For one test case the IR is moved</h:li> <h:li>For one test case the Trailer is moved</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures. <h:p/> <h:br/><h:br/> <h:b>DSA Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">DSA</h:td><h:td valign="top">DSA</h:td><h:td valign="top">Domain parameters for (L, N) = [<h:b>selection:</h:b> (2048, 224) (2048, 256), (3072, 256)] bits</h:td><h:td valign="top">FIPS PUB 186-4 (Section 4.7) [DSA Signature Verification]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform DSA Digital Signature Verification, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>(L, N) = (2048, 224), (2048, 256), (3072, 256)</h:li> <h:li>Hash algorithm [SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate 15 test cases consisting of messages and signatures such that the 15 test cases are modified as follows: <h:p/> <h:ul><h:li>Three test cases are left unmodified</h:li> <h:li>For three test cases the Message is modified</h:li> <h:li>For three test cases the key is modified</h:li> <h:li>For three test cases the<h:i>r</h:i> value is modified</h:li> <h:li>For three test cases the<h:i>s</h:i> value is modified</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures. <h:p/> <h:br/><h:br/> <h:b>ECDSA Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ECDSA</h:td><h:td valign="top">ECDSA</h:td><h:td valign="top">Elliptic Curve [<h:b>selection:</h:b> P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1] and hash or XOF function using [<h:b>selection:</h:b> SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512, SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE-128, SHAKE256]</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 14888-3:2018 (Subclause 6.6), NIST FIPS PUB 186-5 (Sections 6.3.1, 6.4.1] [ECDSA]<h:p/> [<h:b>selection:</h:b> RFC 5639 (Section 3) [Brainpool Curves], NIST SP-800 186 (Section 4) [NIST Curves]]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform ECDSA Digital Signature Verification, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Elliptic Curve [P-256, brainpoolP256r1, P-384, brainpoolP384r1, P-521, brainpoolP512r1]</h:li> <h:li>Hash algorithm [SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512, SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE-128, SHAKE-256]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate 21test cases consisting of messages and signatures such that the 21 test cases are modified as follows: <h:p/> <h:ul><h:li>Three test cases are left unmodified</h:li> <h:li>For three test cases the Message is modified</h:li> <h:li>For three test cases the key is modified</h:li> <h:li>For three test cases the<h:i>r</h:i> value is modified</h:li> <h:li>For three test cases the<h:i>s</h:i> value is modified</h:li> <h:li>For three test cases the value<h:i>r</h:i> is zeroed</h:li> <h:li>For three test cases the value<h:i>s</h:i> is zeroed</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures. <h:p/> <h:br/><h:br/> <h:b>EdDSA Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">EdDSA</h:td><h:td valign="top">Edwards-Curve Digital Signature Algorithm</h:td><h:td valign="top">Domain parameters approved for elliptic curves [<h:b>selection:</h:b> Edwards25519, Edwards448]</h:td><h:td valign="top">NIST FIPS PUB 186-5 (Section 7.6) [EdDSA]<h:p/> RFC 8032 [Edwards Curves]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to perform EdDSA Digital Signature Verification, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Elliptic Curve [Edwards25519, Edwards448]</h:li> <h:li>Supports [Pure EdDSA, PreHash EdDSA]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall cause the TOE to generate 15 test cases consisting of a signed message and signing key such that the 15 test cases are modified as follows: <h:p/> <h:ul><h:li>Three test cases are left unmodified</h:li> <h:li>For three test cases the Message is modified</h:li> <h:li>For three test cases the key is modified</h:li> <h:li>For three test cases the<h:i>r</h:i> value is modified</h:li> <h:li>For three test cases the<h:i>s</h:i> value is modified</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures. <h:p/> <h:br/><h:br/> <h:b>LMS Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">LMS</h:td><h:td valign="top">LMS</h:td><h:td valign="top">Private key size = [<h:b>selection:</h:b> 192 bits with [<h:b>selection:</h:b> SHA256/192, SHAKE256/192], 256 bits with [<h:b>selection:</h:b> SHA-256, SHAKE256]] , Winternitz parameter = [<h:b>selection:</h:b> 1, 2, 4, 8], and tree height = [<h:b>selection:</h:b> 5, 10, 15, 20, 25]</h:td><h:td valign="top">RFC 8554 [LMS]<h:p/> NIST SP 800-208 [parameters]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to verify cryptographic digital signature using LMS, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Hash algorithm [SHA-256/192, SHAKE256/192, SHA-256, SHAKE256]</h:li> <h:li>Winterlitz [1, 2, 4, 8]</h:li> <h:li>Tree height [5, 10, 15, 20, 25]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each supported combination of the above parameters, the evaluator shall generate 4 test cases consisting of signed messages and keys, such that <h:ul><h:li>One test case is unmodified (i.e. correct)</h:li> <h:li>For one test case modify the message, i.e. the message is different</h:li> <h:li>For one test case modify the signature, i.e. signature is different</h:li> <h:li>For one test case modify the signature header so that it is a valid header for a different LMS parameter set.</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified test case and fail to verify the modified test cases. <h:p/> <h:br/><h:br/> <h:b>ML-DSA Signature Verification</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptogrphic Algorithm Parameters</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">ML-DSA</h:td><h:td valign="top">ML-DSA SigVer</h:td><h:td valign="top">Parameter set = ML-DSA-87</h:td><h:td valign="top">NIST FIPS PUB 204 (Section 5.2)</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to validate digital signatures using ML-DSA, the evaluator shall perform the Algorithm Functional Test using the following input parameters: <h:ul><h:li>Parameter set [ML-DSA-87]</h:li> <h:li>Previously generated signed Message [8-65535] bytes</h:li> <h:li><h:i>Mu</h:i> value (if generated externally)</h:li> <h:li>Context (for external interface testing)</h:li> <h:li>Previously generated Public key (<h:i>pk</h:i> )</h:li> <h:li>Previously generated Signature</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Test</h:b> <h:p/>For each combination of supported parameter set and capabilities, the evaluator shall require the implementation under test to validate 15 signatures. Each group of 15 test cases is modified as follows: <h:ul><h:li>Three test cases are left unmodified</h:li> <h:li>For three test cases the Signed message is modified</h:li> <h:li>For three test cases the component of the signature that commits the signer to the message is modified</h:li> <h:li>For three test cases the component of the signature that allows the verifier to construct the vector z is modified</h:li> <h:li>For three test cases the component of the signature that allows the verifier to construct the hint array is modified</h:li> </h:ul> <h:p/>The TOE must correctly verify the unmodified signatures and fail to verify the modified signatures.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/SKC Cryptographic Operation - Symmetric Key Cryptography-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-skc" name="Cryptographic Operation - Symmetric Key Cryptography" iteration="SKC" status="sel-based">
          <depends on-incl="sfr-fcs-stg-ext-2"/>
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-sel="sel-rbg-ctr"/>
          <depends on-sel="sel-fdp-itc-ext-1e2-sk"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-cop-1e1-skc">
            <title>The TSF shall perform [symmetric-key encryption/decryption] in accordance with a specified cryptographic algorithm<selectables><tabularize id="fcs-cop-skc-sels" title="Recommended choices for FCS_COP.1/SKC"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>Cryptographic algorithm</selectcol><reqtext>and cryptographic key sizes</reqtext><selectcol>Cryptographic key sizes</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
								completion of the selection operations of FCS_COP.1/SKC.</reqtext></tabularize><selectable id="sel-fcs-cop-skc-aes-cbc"><col>AES-CBC</col><col>AES in CBC mode with non-repeating and unpredictable IVs</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_1" >128</selectable><selectable id="fcs_cop.1.1_SKC_2" >192</selectable><selectable id="fcs_cop.1.1_SKC_3" >256</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_4" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_SKC_5" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_SKC_6" >ISO/IEC 10116:2017 (Clause 7)</selectable><selectable id="fcs_cop.1.1_SKC_7" >NIST SP 800-38A</selectable> </selectables> [CBC]</col></selectable><selectable id="sel-fcs-cop-skc-aes-xts"><col>XTS-AES</col><col>AES in XTS mode with unique tweak values that are consecutive non-negative integers starting at an arbitrary non-negative integer</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_8" >256</selectable><selectable id="fcs_cop.1.1_SKC_9" >512</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_10" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_SKC_11" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_SKC_12" >IEEE Std. 1619-2018</selectable><selectable id="fcs_cop.1.1_SKC_13" >NIST SP 800-38E</selectable> </selectables> [XTS]</col></selectable><selectable id="sel-fcs-cop-skc-aes-ctr"><col>AES-CTR</col><col>AES in Counter Mode with a non-repeating initial counter and with no repeated use of counter values across multiple messages with the same secret key</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_14" >128</selectable><selectable id="fcs_cop.1.1_SKC_15" >192</selectable><selectable id="fcs_cop.1.1_SKC_16" >256</selectable> </selectables> bits</col><col> <selectables><selectable id="fcs_cop.1.1_SKC_17" >ISO/IEC 18033-3:2010 (Subclause 5.2)</selectable><selectable id="fcs_cop.1.1_SKC_18" >FIPS PUB 197</selectable> </selectables> [AES] <selectables><selectable id="fcs_cop.1.1_SKC_19" >: ISO/IEC 10116:2017 (Clause 10)</selectable><selectable id="fcs_cop.1.1_SKC_20" >NIST SP 800-38A</selectable> </selectables> [CBC]</col></selectable></selectables></title>
            <note role="application">This SFR must be included in the ST if symmetric-key cryptography is a service provided by the TOE to tenant software, or if the TOE itself uses SKC to support or implement PP-specified security functionality.<h:p/> Specifically, this SFR must be included if the ST includes FCS_IPSEC_EXT.1 or FCS_STG_EXT.2, or includes any of the following selections:<h:ul><h:li>"<h:i>CTR_DRBG (AES)</h:i> " in FCS_RBG.1</h:li> <h:li>"<h:i>AES-*</h:i> " in FCS_STG_EXT.3</h:li> </h:ul> <h:p/> If the selected “cryptographic algorithm" requires an IV, counter, or tweak value, then FCS_OTV_EXT.1 must be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it describes the construction of any IVs, tweak values, and counters.<h:p/> If XTS-AES is claimed then the evaluator shall examine the TSS to verify that the TOE creates full-length keys by methods that ensure that the two key halves are different and independent.</TSS>
              <Guidance/>
              <Tests>The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products. <h:p/>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>AES-CBC</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-CBC</h:td><h:td valign="top">AES in CBC mode with non-repeating and unpredictable IVs</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 10116:2017 (Clause 7), NIST SP 800-38A] [CBC]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to encrypt/decrypt data using AES in CBC mode, the evaluator shall perform Algorithm Functional Tests and Monte Carlo Tests using the following input parameters: <h:ul><h:li>Key size [128, 192, 256] bits</h:li> <h:li>Direction [encryption, decryption]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Tests</h:b> <h:p/>Algorithm Functional Tests are designed to verify the correct operation of the logical components of the algorithm implementation under normal operation using different block sizes. For AES-CBC, there are two types of AFTs: <h:p/> <h:br/><h:br/> <h:b><h:i>Known-Answer Tests</h:i> </h:b> <h:p/>For each combination of direction and claimed key size, the TOE must be tested using the GFSbox, KeySbox, VarTxt, and VarKey test cases listed in Appendixes B through E of <h:i>The Advanced Encryption Standard Algorithm Validation Suite (AESAVS)</h:i>, NIST, 15 November 2002. <h:p/> <h:br/><h:br/> <h:b><h:i>Multi-Block Message Tests</h:i> </h:b> <h:p/>For each combination of direction and claimed key size, the TOE must be tested against 10 test cases consisting of a random IV, random key, and random plaintext/ciphertext. The plaintext/ciphertext starts with a length of 16 bytes and increases by 16 bytes for each test case until reaching 160 bytes. <h:p/> <h:br/><h:br/> <h:b><h:i>Monte Carlo Tests</h:i> </h:b> <h:p/>Monte Carlo tests are intended to test the implementation under strenuous conditions. The TOE must process the test cases according to the following algorithm once for each combination of direction and key size: <h:p/> <h:pre>Key[0] = Key IV[0] = IV PT[0] = PT for i = 0 to 99 { Output Key[i], IV[i], PT[0] for j = 0 to 999 { if (j == 0) { CT[j] = AES-CBC-Encrypt(Key[i], IV[i], PT[j]) PT[j+1] = IV[i] } else { CT[j] = AES-CBC-Encrypt(Key[i], PT[j]) PT[j+1] = CT[j-1] } } Output CT[j] AES_KEY_SHUFFLE(Key, CT) IV[i+1] = CT[j] PT[0] = CT[j-1] }</h:pre> <h:p/>where <h:pre>AES_KEY_SHUFFLE</h:pre>is defined as: <h:p/> <h:pre>If ( keylen = 128 ) Key[i+1] = Key[i] xor MSB(CT[j], 128) If ( keylen = 192 ) Key[i+1] = Key[i] xor (LSB(CT[j-1], 64) || MSB(CT[j], 128)) If ( keylen = 256 ) Key[i+1] = Key[i] xor (MSB(CT[j-1], 128) || MSB(CT[j], 128))</h:pre> <h:p/>The above pseudocode is for encryption. For decryption, swap all instances of CT and PT. <h:p/>The initial IV, key, and plaintext/ciphertext should be random. <h:p/>The evaluator shall test the decrypt functionality using the same test as above, exchanging CT and PT, and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. <h:p/> <h:br/><h:br/> <h:b>XTS-AES</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">XTS-AES</h:td><h:td valign="top">AES in XTS mode with unique tweak values that are consecutive non-negative integers starting at an arbitrary non-negative integer</h:td><h:td valign="top">[<h:b>selection:</h:b> 256, 512] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> IEEE Std. 1619-2018, NIST SP 800-38E] [XTS]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to encrypt/decrypt data using AES in XTS mode, the evaluator shall perform the Single Data Unit Test and the Multiple Data Unit Test using the following input parameters: <h:ul><h:li>Direction [encryption, decryption]</h:li> <h:li>Key size [128, 256] bits</h:li> <h:li>Tweak value format [128-bit hex string, data unit sequence number]</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Single Data Unit Test</h:b> <h:p/>For each combination of claimed key size, direction, and supported tweak value format, the evaluator shall generate 50 test cases consisting of random payload data. The payload data size is determined randomly for each test case from supported values within the range [128-65536] bits. The payload size and data unit size must be equal. <h:p/> <h:br/><h:br/> <h:b>Multiple Data Unit Test</h:b> <h:p/>For each combination of claimed key size, direction, and supported tweak value format, the evaluator shall generate 50 test cases consisting of random payload data. The payload data size is determined randomly for each test case from supported values within the range [128-65536] bits. Likewise, the data unit size is determined randomly for each test case from supported values within the range [128-65535] bits. The payload size and data unit size must not be equal. <h:p/>The evaluator shall verify the correctness of the TSF’s implementation by comparing values generated by the TSF with those generated by a known good implementation using the same input parameters. <h:p/> <h:br/><h:br/> <h:b>AES-CTR</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Identifier</h:td><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Cryptographic Key Sizes</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">AES-CTR</h:td><h:td valign="top">AES in Counter Mode with a non-repeating initial counter and with no repeated use of counter values across multiple messages with the same secret key.</h:td><h:td valign="top">[<h:b>selection:</h:b> 128, 192, 256] bits</h:td><h:td valign="top">[<h:b>selection:</h:b> ISO/IEC 18033-3:2010 (Subclause 5.2), FIPS PUB 197] [AES]<h:p/> [<h:b>selection:</h:b> ISO/IEC 10116:2017 (Clause 10), NIST SP 800-38A] [CTR]</h:td></h:tr></h:table> <h:p/>To test the TOE’s ability to encrypt/decrypt data using AES in CTR mode, the evaluator shall perform the Algorithm Functional Test and the Counter Test using the following input parameters: <h:ul><h:li>Direction [encryption, decryption]</h:li> <h:li>Key size [128, 192, 256] bits</h:li> </h:ul> <h:p/> <h:br/><h:br/> <h:b>Algorithm Functional Tests</h:b> <h:p/>Algorithm Functional Tests are designed to verify the correct operation of the logical components of the algorithm implementation under normal operation using different block sizes. For AES-CTR, there are three types of AFTs: <h:p/> <h:br/><h:br/> <h:b><h:i>Known-Answer Tests</h:i> </h:b> <h:p/>For each combination of direction and claimed key size, the TOE must be tested using the GFSbox, KeySbox, VarTxt, and VarKey test cases listed in Appendixes B through E of <h:i>The Advanced Encryption Standard Algorithm Validation Suite (AESAVS)</h:i>, NIST, 15 November 2002. <h:p/> <h:br/><h:br/> <h:b><h:i>Single Block Message Tests</h:i> </h:b> <h:p/>For each combination of direction and claimed key, the evaluator shall generate 10 test cases with a data size of 128 bits. <h:p/> <h:br/><h:br/> <h:b><h:i>Partial Block Message Tests</h:i> </h:b> <h:p/>Monte Carlo tests are intended to test the implementation under strenuous conditions. The TOE must process the test cases according to the following algorithm once for each combination of direction and key size: <h:p/>For each combination of direction and claimed key, the evaluator shall generate five test cases such that the data size is not a multiple of 128 bits. <h:p/>The evaluator shall verify the correctness of the TSF’s implementation by comparing values generated by the TSF with those generated by a known good implementation using the same input parameters. <h:br/><h:br/> <h:b><h:i>Counter Test</h:i> </h:b> <h:p/>The evaluator shall generate a single message of 1000 blocks (128000 bits) and either encrypt or decrypt it. Back-compute the IVs used. Verify that they are unique and increasing (encryption) or decreasing (decryption). <h:p/></Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_COP.1/XOF Cryptographic Operation - Extendable-Output Function-->
        <f-component cc-id="fcs_cop.1" id="sfr-fcs-cop-1-xof" name="Cryptographic Operation - Extendable-Output Function" iteration="XOF">
          <f-element id="fcs-cop-1e1-xof">
            <title>The TSF shall perform [extendable-output function] in accordance with a specified cryptographic algorithm<selectables><tabularize id="fcs-cop-xof-sels" title="Recommended choices for FCS_COP.1/XOF"><selectcol>Cryptographic algorithm</selectcol><reqtext>and and parameters</reqtext><selectcol>Parameters</selectcol><reqtext>that meet the following:</reqtext><selectcol>List of standards</selectcol><reqtext>The following table provides the recommended choices for
								completion of the selection operations of FCS_COP.1/XOF.</reqtext></tabularize><selectable id="sel-fcs-cop-xof-cshake"><col>cSHAKE</col><col>Output length d = <selectables><selectable id="fcs_cop.1.1_XOF_1" >128</selectable><selectable id="fcs_cop.1.1_XOF_2" >256</selectable> </selectables> bits and function <selectables><selectable id="fcs_cop.1.1_XOF_3" >SHAKEd</selectable><selectable id="fcs_cop.1.1_XOF_4" >KECCAK[<h:i>2d</h:i>]</selectable> </selectables> </col><col>NIST SP 800-185 Section 3 [cSHAKE], Section 6.2 [SHAKE]NIST FIPS PUB 202 Section 5 [KECCAK]</col></selectable><selectable id="sel-fcs-cop-xof-kmacxof"><col>KMACXOF</col><col>Output length d = <selectables><selectable id="fcs_cop.1.1_XOF_5" >128</selectable><selectable id="fcs_cop.1.1_XOF_6" >256</selectable> </selectables> bits</col><col>NIST SP 800-185 Section 4.3.1 [KMACXOF]</col></selectable><selectable id="sel-fcs-cop-xof-shake"><col>SHAKE</col><col>Output length d = <selectables><selectable id="fcs_cop.1.1_XOF_7" >128</selectable><selectable id="fcs_cop.1.1_XOF_8" >256</selectable> </selectables> bits</col><col>NIST FIPS PUB 202 Section 6.2 [SHAKE]</col></selectable></selectables></title>
            <note role="application">The functions in cSHAKE depend on the output length d. i.e. SHAKEd is either SHAKE128 for d = 128 or SHAKE256 for d = 256. Similarly, KECCAK[2d] is either KECCAK[256] for d = 128 or KECCAK[512] for d = 256. Note that KECCAK is a cryptographic primitive which should have no direct interface exposed to the user of the TOE.</note>
            <aactivity level="component">
              <TSS>TBD</TSS>
              <Guidance>TBD</Guidance>
              <Tests>The following tests are conditional based upon the selections made in the SFR. The evaluator shall perform the following test or witness respective tests executed by the developer. The tests must be executed on a platform that is as close as practically possible to the operational platform (but which may be instrumented in terms of, for example, use of a debug mode). Where the test is not carried out on the TOE itself, the test platform shall be identified and the differences between test environment and TOE execution environment shall be described. <h:p/> <h:br/><h:br/> <h:b>cSHAKE</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">cSHAKE</h:td><h:td valign="top">Output length<h:i>d</h:i> = [<h:b>selection:</h:b> 128, 256] bits and function [<h:b>selection:</h:b> SHAKE<h:i>d</h:i> , KECCAK[2<h:i>d</h:i> ]]</h:td><h:td valign="top">NIST SP 800-185 Section 3 [cSHAKE], Section 6.2 [SHAKE]<h:p/> NIST FIPS PUB 202 Section 5 [KECCAK]</h:td></h:tr></h:table> <h:p/> <h:br/><h:br/> <h:b>SHAKE</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">SHAKE</h:td><h:td valign="top">Output length<h:i>d</h:i> = [<h:b>selection:</h:b> 128, 256] bits</h:td><h:td valign="top">NIST FIPS PUB 202 Section 6.2 [SHAKE]</h:td></h:tr></h:table> <h:p/> <h:br/><h:br/> <h:b>KMACXOF</h:b> <h:p/> <h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Cryptographic Algorithm</h:td><h:td valign="top">Parameters</h:td><h:td valign="top">List of Standards</h:td></h:tr><h:tr><h:td valign="top">KMACXOF</h:td><h:td valign="top">Output length<h:i>d</h:i> = [<h:b>selection:</h:b> 128, 256] bits</h:td><h:td valign="top">NIST SP 800-185 Section 4.3.1 [KMACXOF]</h:td></h:tr></h:table> <h:p/>For KMACXOF tests, refer to FCS_COP.1/KeyedHash.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_HTTPS_EXT.1 HTTPS Protocol-->
        <f-component cc-id="fcs_https_ext.1" id="sfr-fcs-https-ext-1" name="HTTPS Protocol" status="sel-based">
          <depends on-sel="sel-itc-https"/>
          <comp-lev>defines requirements for the implementation of the HTTPS protocol.</comp-lev>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ol type="a"><h:li>Failure to establish an HTTPS session.</h:li> <h:li>Establishment/termination of an HTTPS session.</h:li> </h:ol> </audit>
          <dependencies><h:br/>[FCS_TLSC_EXT.1 TLS Client Protocol, or<h:br/>FCS_TLSC_EXT.2 TLS Client Protocol with Mutual Authentication, or<h:br/>FCS_TLSS_EXT.1 TLS Server Protocol, or<h:br/>FCS_TLSS_EXT.2 TLS Server Protocol with Mutual Authentication]</dependencies>
          <f-element id="fcs-https-ext-1e1">
            <title>The TSF shall implement the HTTPS protocol that complies with RFC 2818.</title>
            <note role="application">This SFR is included in the ST if the ST Author selects "<h:i>TLS/HTTPS</h:i> " in FTP_ITC_EXT.1.1.<h:p/> If this SFR is included in the ST, then the<xref to="pkg-tls"/> must also be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall check the TSS to ensure that it is clear on how HTTPS uses TLS to establish an administrative session, focusing on any client authentication required by the TLS protocol vs. security administrator authentication which may be done at a different level of the processing stack.</TSS>
              <Guidance/>
              <Tests>Testing for this activity is done as part of the TLS testing; this may result in additional testing if the TLS tests are done at the TLS protocol level.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-https-ext-1e2">
            <title>The TSF shall implement HTTPS using TLS.</title>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure to establish a HTTPS Session.</audit-event-descr>
            <audit-event-info>Reason for failure.</audit-event-info>
            <audit-event-info>Non-TOE endpoint of connection (IP address) for failures.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Establishment/Termination of a HTTPS session.</audit-event-descr>
            <audit-event-info>Non-TOE endpoint of connection (IP address).</audit-event-info>
          </audit-event>
        </f-component>
        <!--FCS_IPSEC_EXT.1 IPsec Protocol-->
        <f-component cc-id="fcs_ipsec_ext.1" id="sfr-fcs-ipsec-ext-1" name="IPsec Protocol" status="sel-based">
          <depends on-sel="sel-itc-ipsec"/>
          <comp-lev>requires that IPsec be implemented as specified manner.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ol type="a"><h:li>Managing the cryptographic functionality.</h:li> </h:ol> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ol type="a"><h:li>Failure to establish an IPsec SA.</h:li> <h:li>Establishment/Termination of an IPsec SA.</h:li> </h:ol> </audit>
          <dependencies><h:br/>FCS_CKM.1 Cryptographic Key Generation<h:br/>FCS_CKM.2 Cryptographic Key Establishment<h:br/>FCS_COP.1 Cryptographic Operation<h:br/>FCS_RBG.1 Random Bit Generation<h:br/>FIA_X509_EXT.1 X.509 Certificate Validation</dependencies>
          <f-element id="fcs-ipsec-ext-1e1">
            <title>The TSF shall implement the IPsec architecture as specified in RFC 4301.</title>
            <note role="application">This SFR must be included in the ST if the ST Author selects "<h:i>IPsec</h:i> " in FTP_ITC_EXT.1.1.<h:p/> If this SFR is claimed, then FCS_COP.1/KeyedHash and FCS_RBG.1 must also be claimed.<h:p/> RFC 4301 calls for an IPsec implementation to protect IP traffic through the use of a Security Policy Database (SPD). The SPD is used to define how IP packets are to be handled: PROTECT the packet (e.g., encrypt the packet), BYPASS the IPsec services (e.g., no encryption), or DISCARD the packet (e.g., drop the packet). The SPD can be implemented in various ways, including router access control lists, firewall rule-sets, a "traditional" SPD, etc. Regardless of the implementation details, there is a notion of a "rule" that a packet is "matched" against and a resulting action that takes place.<h:p/> While there must be a means to order the rules, a general approach to ordering is not mandated, as long as the TOE can distinguish the IP packets and apply the rules accordingly. There may be multiple SPDs (one for each network interface), but this is not required.<h:p/> </note>
            <aactivity level="component">
              <TSS>In addition to the TSS EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall perform the following:<h:p/> If the TOE boundary includes a general-purpose operating system or mobile device, the evaluator shall examine the TSS to ensure that it describes whether the VPN client capability is architecturally integrated with the platform itself or whether it is a separate executable that is bundled with the platform.</TSS>
              <Guidance>In addition to the AGD EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall perform the following:<h:p/> If the configuration of the IPsec behavior is from an environmental source, most notably a VPN gateway (e.g through receipt of required connection parameters from a VPN gateway), the evaluator shall ensure that the AGD contains any appropriate information for ensuring that this configuration can be properly applied.<h:p/> Note in this case that the implementation of the IPsec protocol must be enforced entirely within the TOE boundary; i.e. it is not permissible for a software application TOE to be a graphical front-end for IPsec functionality implemented totally or in part by the underlying OS platform. The behavior referenced here is for the possibility that the configuration of the IPsec connection is initiated from outside the TOE, which is permissible so long as the TSF is solely responsible for enforcing the configured behavior. However, it is allowable for the TSF to rely on low-level platform-provided networking functions to implement the SPD from the client (e.g., enforcement of packet routing decisions).</Guidance>
              <Tests>As a prerequisite for performing the Test EAs for the individual FCS_IPSEC_EXT.1 elements below, the evaluator shall do the following: <h:p/>The evaluator shall minimally create a test environment equivalent to the test environment illustrated below. The traffic generator used to construct network packets should provide the evaluator with the ability manipulate fields in the ICMP, IPv4, IPv6, UDP, and TCP packet headers. The evaluator shall provide justification for any differences in the test environment. <h:p/> <figure entity="images/network.png" title="IPsec Test Environment" id="fig-ipsectest"/> </Tests>
            </aactivity>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS and determine that it describes how the IPsec capabilities are implemented.<h:p/> The evaluator shall ensure that the TSS describes at a high level the architectural relationship between the IPsec implementation and the rest of the TOE.<h:p/> The evaluator shall ensure that the TSS describes how the SPD is implemented and the rules for processing both inbound and outbound packets in terms of the IPsec policy. The TSS describes the rules that are available and the resulting actions available after matching a rule. The TSS describes how the available rules and actions form the SPD using terms defined in RFC 4301 such as BYPASS (e.g., no encryption), DISCARD (e.g., drop the packet), and PROTECT (e.g., encrypt the packet) actions defined in RFC 4301.<h:p/> As noted in section 4.4.1 of RFC 4301, the processing of entries in the SPD is non-trivial and the evaluator shall determine that the description in the TSS is sufficient to determine which rules will be applied given the rule structure implemented by the TOE. For example, if the TOE allows specification of ranges, conditional rules, etc., the evaluator shall determine that the description of rule processing (for both inbound and outbound packets) is sufficient to determine the action that will be applied, especially in the case where two different rules may apply. This description shall cover both the initial packets (that is, no SA is established on the interface or for that particular packet) as well as packets that are part of an established SA.</TSS>
              <Guidance>The evaluator shall examine the AGD to verify it instructs the Administrator how to construct entries into the SPD that specify a rule for processing a packet. The description includes all three cases – a rule that ensures packets are encrypted/decrypted, dropped, and flow through the TOE without being encrypted. The evaluator shall determine that the description in the AGD is consistent with the description in the TSS, and that the level of detail in the AGD is sufficient to allow the administrator to set up the SPD in an unambiguous fashion. This includes a discussion of how ordering of rules impacts the processing of an IP packet.</Guidance>
              <Tests>
                The evaluator uses the operational guidance to configure the TOE to carry out the following tests: <h:p/>
                <testlist>
                  <test>The evaluator shall configure the SPD such that there is a rule for dropping a packet, encrypting a packet, and allowing a packet to flow in plaintext. The selectors used in the construction of the rule shall be different such that the evaluator can generate a packet and send packets to the gateway with the appropriate fields (fields that are used by the rule - e.g., the IP addresses, TCP/UDP ports) in the packet header. The evaluator performs both positive and negative test cases for each type of rule (e.g., a packet that matches the rule and another that does not match the rule). The evaluator observes via the audit trail, and packet captures that the TOE exhibited the expected behavior: appropriate packets were dropped, allowed to flow without modification, encrypted by the IPsec implementation.</test>
                  <test>The evaluator shall devise several tests that cover a variety of scenarios for packet processing. As with Test 1, the evaluator ensures both positive and negative test cases are constructed. These scenarios shall exercise the range of possibilities for SPD entries and processing modes as outlined in the TSS and operational guidance. Potential areas to cover include rules with overlapping ranges and conflicting entries, inbound and outbound packets, and packets that establish SAs as well as packets that belong to established SAs. The evaluator shall verify, via the audit trail and packet captures, for each scenario that the expected behavior is exhibited, and is consistent with both the TSS and the operational guidance.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e2">
            <title>The TSF shall implement <selectables><selectable id="fcs_ipsec_ext.1.2_1" >transport mode</selectable><selectable id="fcs_ipsec_ext.1.2_2" >tunnel mode</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall implement<assignable>IPsec modes</assignable>.</title></ext-comp-def-title>
            <note role="application">If the TOE is used to connect to a VPN gateway for the purposes of establishing a secure connection to a private network, the ST Author should select tunnel mode. If the TOE uses IPsec to establish an end-to-end connection to another IPsec VPN Client, the ST Author should select transport mode. If the TOE uses IPsec to establish a connection to a specific endpoint device for the purpose of secure remote administration, the ST Author should select transport mode.<h:p/> </note>
            <aactivity level="element">
              <TSS>The evaluator checks the TSS to ensure it states that an IPsec VPN can be established to operate in tunnel mode or transport mode (as selected).</TSS>
              <Guidance>The evaluator shall confirm that the AGD contains instructions on how to configure the connection in each mode selected.<h:p/> If both transport mode and tunnel mode are implemented, the evaluator shall review the AGD to determine how the use of a given mode is specified.</Guidance>
              <Tests>
                The evaluator shall perform the following test(s) based on the selections chosen:
                <testlist>
                  <test>[conditional] If tunnel mode is selected, the evaluator uses the operational guidance to configure the TOE/platform to operate in tunnel mode and also configures a VPN peer to operate in tunnel mode. The evaluator configures the TOE/platform and the VPN peer to use any of the allowable cryptographic algorithms, authentication methods, etc. to ensure an allowable SA can be negotiated. The evaluator shall then initiate a connection from the TOE/Platform to the VPN peer. The evaluator observes (for example, in the audit trail and the captured packets) that a successful connection was established using the tunnel mode.</test>
                  <test>[conditional] If transport mode is selected, the evaluator uses the operational guidance to configure the TOE/platform to operate in transport mode and also configures a VPN peer to operate in transport mode. The evaluator configures the TOE/platform and the VPN peer to use any of the allowed cryptographic algorithms, authentication methods, etc. to ensure an allowable SA can be negotiated. The evaluator then initiates a connection from the TOE/platform to connect to the VPN peer. The evaluator observes (for example, in the audit trail and the captured packets) that a successful connection was established using the transport mode.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e3">
            <title>The TSF shall have a nominal, final entry in the SPD that matches anything that is otherwise unmatched, and discards it.</title>
            <aactivity level="element">
              <TSS/>
              <Guidance>The evaluator shall check that the AGD provides instructions on how to construct or acquire the SPD and uses the AGD to configure the TOE for the following test.<h:br/>If both transport mode and tunnel mode are implemented, the evaluator shall review the AGD to determine how the use of a given mode is specified.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>The evaluator shall configure the SPD such that it has entries that contain operations that DISCARD, PROTECT, and (if applicable) BYPASS network packets. The evaluator may use the SPD that was created for verification of FCS_IPSEC_EXT.1.1. The evaluator shall construct a network packet that matches a BYPASS entry and send that packet. The evaluator should observe that the network packet is passed to the proper destination interface with no modification. The evaluator shall then modify a field in the packet header; such that it no longer matches the evaluator-created entries (there may be a “TOE-created” final entry that discards packets that do not match any previous entries). The evaluator sends the packet, and observes that the packet was not permitted to flow to any of the TOE’s interfaces.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e4">
            <title>The TSF shall implement the IPsec protocol ESP as defined by RFC 4303 using the cryptographic algorithms [AES-GCM-128, AES-GCM-256 (as specified in RFC 4106), <selectables><selectable id="fcs_ipsec_ext.1.4_1" >AES-CBC-128 (specified in RFC 3602)</selectable><selectable id="fcs_ipsec_ext.1.4_2" >AES-CBC-256 (specified in RFC 3602)</selectable><selectable id="fcs_ipsec_ext.1.4_3" exclusive="yes">no other algorithms</selectable> </selectables> ] together with a Secure Hash Algorithm (SHA)-based HMAC.</title>
            <ext-comp-def-title><title>The TSF shall implement the IPsec protocol ESP as defined by RFC 4303 using the cryptographic algorithms<assignable>cryptographic algorithms</assignable>together with a Secure Hash Algorithm (SHA)-based HMAC.</title></ext-comp-def-title>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that the algorithms AES-GCM-128 and AES-GCM-256 are implemented. If the ST Author has selected either AES-CBC-128 or AES-CBC-256 in the requirement, then the evaluator verifies the TSS describes these as well. In addition, the evaluator ensures that the SHA-based HMAC algorithm conforms to the algorithms specified in FCS_COP.1/KeyedHash Cryptographic Operations (Keyed Hash Algorithms).</TSS>
              <Guidance>The evaluator checks the AGD to ensure it provides instructions on how the TOE is configured to use the algorithms selected in this component and whether this is performed through direct configuration, defined during initial installation, or defined by acquiring configuration settings from an environmental component.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>The evaluator shall configure the TOE/platform as indicated in the operational guidance configuring the TOE/platform to use each of the supported algorithms, attempt to establish a connection using ESP, and verify that the attempt succeeds.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e5">
            <title>The TSF shall implement the protocol: <h:p/> <selectables linebreak="yes"><selectable id="fcs_ipsec_ext.1.5_1">IKEv1, using Main Mode for Phase 1 exchanges, as defined in RFC 2407, RFC 2408, RFC 2409, RFC 4109, <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.5_2" >no other RFCs for extended sequence numbers</selectable><selectable id="fcs_ipsec_ext.1.5_3" >RFC 4304 for extended sequence numbers</selectable></selectables> , <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.5_4" >no other RFCs for hash functions</selectable><selectable id="fcs_ipsec_ext.1.5_5" >RFC 4868 for hash functions</selectable></selectables> , and <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.5_6" >support for XAUTH</selectable><selectable id="fcs_ipsec_ext.1.5_7" >no support for XAUTH</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.5_8">IKEv2 as defined in RFC 7296 (with mandatory support for NAT traversal as specified in section 2.23), RFC 8784, RFC 8247, and <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.5_9" >no other RFCs for hash functions</selectable><selectable id="fcs_ipsec_ext.1.5_10" >RFC 4868 for hash functions</selectable></selectables> </selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall implement the protocol:<assignable>key exchange protocol</assignable>.</title></ext-comp-def-title>
            <note role="application">If the TOE implements SHA-2 hash algorithms for IKEv1 or IKEv2, the ST Author should select RFC 4868.</note>
            <aactivity level="element">
              <TSS>The evaluator shall examine the TSS to verify that IKEv1 and/or IKEv2 are implemented. If IKEv1 is implemented, the evaluator shall verify that the TSS indicates whether or not XAUTH is supported, and that aggressive mode is not used for IKEv1 Phase 1 exchanges (i.e. only main mode is used). It may be that these are configurable options.</TSS>
              <Guidance>The evaluator shall check the AGD to ensure it instructs the administrator how to configure the TOE to use IKEv1 and/or IKEv2 (as selected), and uses the guidance to configure the TOE to perform NAT traversal for the test below. If XAUTH is implemented, the evaluator shall verify that the AGD provides instructions on how it is enabled or disabled.<h:br/>If the TOE supports IKEv1, the evaluator shall verify that the AGD either asserts that only main mode is used for Phase 1 exchanges, or provides instructions for disabling aggressive mode.</Guidance>
              <Tests>
                Tests are performed in conjunction with the other IPsec evaluation activities with the exception of the activities below: <h:p/>
                <testlist>
                  <test>The evaluator shall configure the TOE so that it will perform NAT traversal processing as described in the TSS and RFC 7296, section 2.23. The evaluator shall initiate an IPsec connection and determine that the NAT is successfully traversed. If the TOE supports IKEv1 with or without XAUTH, the evaluator shall verify that this test can be successfully repeated with XAUTH enabled and disabled in the manner specified by the operational guidance. If the TOE only supports IKEv1 with XAUTH, the evaluator shall verify that connections not using XAUTH are unsuccessful. If the TOE only supports IKEv1 without XAUTH, the evaluator shall verify that connections using XAUTH are unsuccessful.</test>
                  <test>[conditional] If the TOE supports IKEv1, the evaluator shall perform any applicable operational guidance steps to disable the use of aggressive mode and then attempt to establish a connection using an IKEv1 Phase 1 connection in aggressive mode. This attempt should fail. The evaluator shall show that the TOE will reject a VPN gateway from initiating an IKEv1 Phase 1 connection in aggressive mode. The evaluator should then show that main mode exchanges are supported.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e6">
            <title>The TSF shall ensure the encrypted payload in the <selectables><selectable id="fcs_ipsec_ext.1.6_1" >IKEv1</selectable><selectable id="fcs_ipsec_ext.1.6_2" >IKEv2</selectable> </selectables> protocol uses the cryptographic algorithms AES-CBC-128, AES-CBC-256 as specified in RFC 6379 and <selectables><selectable id="fcs_ipsec_ext.1.6_3" >AES-GCM-128 as specified in RFC 5282</selectable><selectable id="fcs_ipsec_ext.1.6_4" >AES-GCM-256 as specified in RFC 5282</selectable><selectable id="fcs_ipsec_ext.1.6_5" exclusive="yes">no other algorithm</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall ensure the encrypted payload in the<assignable>key exchange protocol</assignable>protocol uses the cryptographic algorithms<assignable>cryptographic algorithms</assignable>.</title></ext-comp-def-title>
            <aactivity level="element">
              <TSS>The evaluator shall ensure the TSS identifies the algorithms used for encrypting the IKEv1 and/or IKEv2 payload, and that the algorithms AES-CBC-128, AES-CBC-256 are specified, and if others are chosen in the selection of the requirement, those are included in the TSS discussion.</TSS>
              <Guidance>The evaluator checks the AGD to ensure it provides instructions on how the TOE is configured to use the algorithms selected in this component and whether this is performed through direct configuration, defined during initial installation, or defined by acquiring configuration settings from an environmental component.</Guidance>
              <Tests>The evaluator shall use the operational guidance to configure the TOE (or to configure the Operational Environment to have the TOE receive configuration) to perform the following test for each ciphersuite selected: <h:p/>The evaluator shall configure the TOE to use the ciphersuite under test to encrypt the IKEv1 and/or IKEv2 payload and establish a connection with a peer device, which is configured to only accept the payload encrypted using the indicated ciphersuite. The evaluator will confirm the algorithm was that used in the negotiation. The evaluator will confirm that the connection is successful by confirming that data can be passed through the connection once it is established. For example, the evaluator may connect to a webpage on the remote network and verify that it can be reached.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e7">
            <title>The TSF shall ensure that <selectables><selectable id="fcs_ipsec_ext.1.7_1">IKEv2 SA lifetimes can be configured by <selectables><selectable id="fcs_ipsec_ext.1.7_2" >an Administrator</selectable><selectable id="fcs_ipsec_ext.1.7_3" >a VPN Gateway</selectable></selectables> based on <selectables><selectable id="fcs_ipsec_ext.1.7_4" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_5" >length of time</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.7_6">IKEv1 SA lifetimes can be configured by <selectables><selectable id="fcs_ipsec_ext.1.7_7" >an Administrator</selectable><selectable id="fcs_ipsec_ext.1.7_8" >a VPN Gateway</selectable></selectables> based on <selectables><selectable id="fcs_ipsec_ext.1.7_9" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_10" >length of time</selectable></selectables> </selectable><selectable id="fcs_ipsec_ext.1.7_11">IKEv1 SA lifetimes are fixed based on <selectables><selectable id="fcs_ipsec_ext.1.7_12" >number of packets/number of bytes</selectable><selectable id="fcs_ipsec_ext.1.7_13" >length of time</selectable></selectables> . If length of time is used, it must include at least one option that is 24 hours or less for Phase 1 SAs and 8 hours or less for Phase 2 SAs.</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall ensure that<assignable>key exchange protocol lifetime configuration rules</assignable>.</title></ext-comp-def-title>
            <note role="application">The ST Author is afforded a selection based on the version of IKE in their implementation. There is a further selection within this selection that allows the ST Author to specify which entity is responsible for “configuring” the life of the SA. An implementation that allows an administrator to configure the client or a VPN gateway that pushes the SA lifetime down to the client are both acceptable.<h:p/> As far as SA lifetimes are concerned, the TOE can limit the lifetime based on the number of bytes transmitted, or the number of packets transmitted. Either packet-based or volume-based SA lifetimes are acceptable; the ST Author makes the appropriate selection to indicate which type of lifetime limits are supported.<h:p/> The ST Author chooses either the IKEv1 requirements or IKEv2 requirements (or both, depending on the selection in FCS_IPSEC_EXT.1.5. The IKEv1 requirement can be accomplished either by providing Authorized Administrator-configurable lifetimes (with appropriate instructions in documents mandated by AGD_OPE), or by “hard coding” the limits in the implementation. For IKEv2, there are no hard-coded limits, but in this case it is required that an administrator be able to configure the values. In general, instructions for setting the parameters of the implementation, including lifetime of the SAs, should be included in the operational guidance generated for AGD_OPE. It is appropriate to refine the requirement in terms of number of MB/KB instead of number of packets, as long as the TOE is capable of setting a limit on the amount of traffic that is protected by the same key (the total volume of all IPsec traffic protected by that key).</note>
            <aactivity level="element">
              <TSS/>
              <Guidance>The evaluator shall check the AGD to ensure it provides instructions on how the TOE configures the values for SA lifetimes. In addition, the evaluator shall check that the AGD has the option for either the Administrator or VPN Gateway to configure Phase 1 SAs if time-based limits are supported. Currently there are no values mandated for the number of packets or number of bytes, the evaluator shall simply check the AGD to ensure that this can be configured if selected in the requirement.</Guidance>
              <Tests>
                When testing this functionality, the evaluator needs to ensure that both sides are configured appropriately. From the RFC “A difference between IKEv1 and IKEv2 is that in IKEv1 SA lifetimes were negotiated. In IKEv2, each end of the SA is responsible for enforcing its own lifetime policy on the SA and rekeying the SA when necessary. If the two ends have different lifetime policies, the end with the shorter lifetime will end up always being the one to request the rekeying. If the two ends have the same lifetime policies, it is possible that both will initiate a rekeying at the same time (which will result in redundant SAs). To reduce the probability of this happening, the timing of rekeying requests SHOULD be jittered.” <h:p/>Each of the following tests shall be performed for each version of IKE selected in the FCS_IPSEC_EXT.1.5 protocol selection:
                <testlist>
                  <test>[conditional] The evaluator shall configure a maximum lifetime in terms of the # of packets (or bytes) allowed following the operational guidance. The evaluator shall establish an SA and determine that once the allowed # of packets (or bytes) through this SA is exceeded, the connection is closed.</test>
                  <test>[conditional] The evaluator shall construct a test where a Phase 1 SA is established and attempted to be maintained for more than 24 hours before it is renegotiated. The evaluator shall observe that this SA is closed or renegotiated in 24 hours or less. If such an action requires that the TOE be configured in a specific way, the evaluator shall implement tests demonstrating that the configuration capability of the TOE works as documented in the operational guidance.</test>
                  <test>[conditional] The evaluator shall perform a test similar to Test 2 for Phase 2 SAs, except that the lifetime will be 8 hours or less instead of 24 hours or less.</test>
                  <test>[conditional] If a fixed limit for IKEv1 SAs is supported, the evaluator shall establish an SA and observe that the connection is closed after the fixed traffic and/or time value is reached.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e8">
            <title>The TSF shall ensure that all IKE protocols implement DH groups [ <h:i>19 (256-bit Random ECP), 20 (384-bit Random ECP), and</h:i> <selectables><selectable id="fcs_ipsec_ext.1.8_1" >24 (2048-bit MODP with 256-bit POS)</selectable><selectable id="fcs_ipsec_ext.1.8_2" >15 (3072-bit MODP)</selectable><selectable id="fcs_ipsec_ext.1.8_3" >14 (2048-bit MODP)</selectable><selectable id="fcs_ipsec_ext.1.8_4" exclusive="yes">no other DH groups</selectable> </selectables> ].</title>
            <ext-comp-def-title><title>The TSF shall ensure that all IKE protocols implement DH groups<assignable>DH Groups</assignable>.</title></ext-comp-def-title>
            <note role="application">The selection is used to specify additional DH groups supported. This applies to IKEv1 and IKEv2 exchanges. It should be noted that if any additional DH groups are specified, they must comply with the requirements (in terms of the ephemeral keys that are established) listed in FCS_CKM.1.<h:p/> Since the implementation may allow different Diffie-Hellman groups to be negotiated for use in forming the SAs, the assignments in FCS_IPSEC_EXT.1.9 and FCS_IPSEC_EXT.1.10 may contain multiple values. For each DH group supported, the ST Author consults Table 2 in 800-57 to determine the “bits of security” associated with the DH group. Each unique value is then used to fill in the assignment (for 1.9 they are doubled; for 1.10 they are inserted directly into the assignment). For example, suppose the implementation supports DH group 14 (2048-bit MODP) and group 20 (ECDH using NIST curve P-384). From Table 2, the bits of security value for group 14 is 112, and for group 20 it is 192. For FCS_IPSEC_EXT.1.9, then, the assignment would read “[224, 384]” and for FCS_IPSEC_EXT.1.10 it would read “[112, 192]” (although in this case the requirement should probably be refined so that it makes sense mathematically).</note>
            <aactivity level="element">
              <TSS>The evaluator shall check to ensure that the DH groups specified in the requirement are listed as being supported in the TSS. If there is more than one DH group supported, the evaluator checks to ensure the TSS describes how a particular DH group is specified/negotiated with a peer.</TSS>
              <Guidance/>
              <Tests>The evaluator shall perform the following test: <h:p/>For each supported DH group, the evaluator shall test to ensure that all supported IKE protocols can be successfully completed using that particular DH group.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e9">
            <title>The TSF shall generate the secret value x used in the IKE Diffie-Hellman key exchange (“x” in gx mod p) using the random bit generator specified in FCS_RBG.1, and having a length of at least <assignable>(one or more) number(s) of bits that is at least twice the “bits of security” value associated with the negotiated Diffie-Hellman group as listed in Table 2 of NIST SP 800-57, Recommendation for Key Management – Part 1: General</assignable> bits.</title>
            <aactivity level="element">
              <TSS>The evaluator shall check to ensure that, for each DH group supported, the TSS describes the process for generating "x" (as defined in FCS_IPSEC_EXT.1.9) and each nonce. The evaluator shall verify that the TSS indicates that the random number generated that meets the requirements in this EP is used, and that the length of "x" and the nonces meet the stipulations in the requirement.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e10">
            <title>The TSF shall generate nonces used in IKE exchanges in a manner such that the probability that a specific nonce value will be repeated during the life a specific IPsec SA is less than 1 in 2^ <assignable>(one or more) “bits of security” value(s) associated with the negotiated Diffie-Hellman group as listed in Table 2 of NIST SP 800-57, Recommendation for Key Management – Part 1: General</assignable>.</title>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.9.<h:br/></no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e11">
            <title>The TSF shall ensure that all IKE protocols perform peer authentication using a <selectables><selectable id="sel-ipsec-rsa-auth" >RSA</selectable><selectable id="sel-ipsec-ecdsa-auth" >ECDSA</selectable> </selectables> that use X.509v3 certificates that conform to RFC 4945 and <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.11_1" >Pre-shared Keys</selectable><selectable id="fcs_ipsec_ext.1.11_2" >no other method</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall ensure that all IKE protocols perform peer authentication using a<assignable>IKE peer authentication algorithm</assignable>that use X.509v3 certificates that conform to RFC 4945 and<assignable>other IKE peer authentication mechanism</assignable>.</title></ext-comp-def-title>
            <note role="application">At least one public-key-based Peer Authentication method is required in order to conform to this PP. One or more of the public key schemes is chosen by the ST Author to reflect what is implemented. The ST Author also ensures that appropriate FCS requirements reflecting the algorithms used (and key generation capabilities, if provided) are listed to support those methods. Applicable claims from the<xref to="pkg-x509"/> are made to support X.509 validation functionality, most notably FIA_XCU_EXT.1 (mandatory requirement defining the TOE's use of certificates), FIA_X509_EXT.1 (X.509 certificate validation) and FIA_X509_EXT.2 (X.509 certificate authentication).<h:p/> </note>
            <aactivity level="element">
              <TSS>The evaluator ensures that the TSS identifies RSA and/or ECDSA as being used to perform peer authentication.<h:p/> If pre-shared keys are chosen in the selection, the evaluator shall check to ensure that the TSS describes how pre-shared keys are established and used in authentication of IPsec connections. The description in the TSS shall also indicate how pre-shared key establishment is accomplished depending on whether the TSF can generate a pre-shared key, accept a pre-shared key, or both.<h:p/> The evaluator shall ensure that the TSS describes how the TOE compares the peer’s presented identifier to the reference identifier. This description shall include whether the certificate presented identifier is compared to the ID payload presented identifier, which field(s) of the certificate are used as the presented identifier (DN, Common Name, or SAN) and, if multiple fields are supported, the logical order comparison. If the ST Author assigned an additional identifier type, the TSS description shall also include a description of that type and the method by which that type is compared to the peer’s presented certificate.</TSS>
              <Guidance>The evaluator shall check that the AGD describes how pre-shared keys are to be generated and established.<h:p/> The evaluator ensures the AGD describes how to set up the TOE to use the cryptographic algorithms RSA and/or ECDSA.<h:p/> In order to construct the environment and configure the TOE for the following tests, the evaluator will ensure that the AGD also describes how to configure the TOE to connect to a trusted CA, and ensure a valid certificate for that CA is loaded into the TOE as a trusted CA.<h:p/> The evaluator shall also ensure that the AGD includes the configuration of the reference identifier(s) for the peer.</Guidance>
              <Tests>
                For efficiency’s sake, the testing that is performed here has been combined with the testing for X.509 certificate validation defined by <xref to="pkg-x509"/> , FCS_IPSEC_EXT.1.12, and FCS_IPSEC_EXT.1.13. The following tests shall be repeated for each peer authentication protocol selected in the FCS_IPSEC_EXT.1.11 selection above: <h:p/>
                <testlist>
                  <test>The evaluator shall have the TOE generate a public-private key pair, and submit a CSR (Certificate Signing Request) to a CA (trusted by both the TOE and the peer VPN used to establish a connection) for its signature. The values for the DN (Common Name, Organization, Organizational Unit, and Country) will also be passed in the request. Alternatively, the evaluator may import to the TOE a previously generated private key and corresponding certificate.</test>
                  <test>The evaluator shall configure the TOE to use a private key and associated certificate signed by a trusted CA and shall establish an IPsec connection with the peer.</test>
                  <test>The evaluator shall test that the TOE can properly handle revoked certificates – conditional on whether CRL or OCSP is selected; if both are selected, then a test is performed for each method. For this current version of the PP-Module, the evaluator has to only test one up in the trust chain (future drafts may require to ensure the validation is done up the entire chain). The evaluator shall ensure that a valid certificate is used, and that the SA is established. The evaluator then attempts the test with a certificate that will be revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the TOE will not establish an SA.</test>
                  <test>[conditional] The evaluator shall generate a pre-shared key and use it, as indicated in the operational guidance, to establish an IPsec connection with the VPN GW peer. If the generation of the pre-shared key is supported, the evaluator shall ensure that establishment of the key is carried out for an instance of the TOE generating the key as well as an instance of the TOE merely taking in and using the key.<h:p/> For each supported identifier type (excluding DNs), the evaluator shall repeat the following tests:<h:p/> </test>
                  <test>For each field of the certificate supported for comparison, the evaluator shall configure the peer’s reference identifier on the TOE (per the administrative guidance) to match the field in the peer’s presented certificate and shall verify that the IKE authentication succeeds.</test>
                  <test>For each field of the certificate support for comparison, the evaluator shall configure the peer’s reference identifier on the TOE (per the administrative guidance) to not match the field in the peer’s presented certificate and shall verify that the IKE authentication fails.<h:p/> The following tests are conditional:</test>
                  <test>[conditional] If, according to the TSS, the TOE supports both Common Name and SAN certificate fields and uses the preferred logic outlined in the Application Note, the tests above with the Common Name field shall be performed using peer certificates with no SAN extension. Additionally, the evaluator shall configure the peer’s reference identifier on the TOE to not match the SAN in the peer’s presented certificate but to match the Common Name in the peer’s presented certificate, and verify that the IKE authentication fails.</test>
                  <test>[conditional] If the TOE supports DN identifier types, the evaluator shall configure the peer's reference identifier on the TOE (per the administrative guidance) to match the subject DN in the peer's presented certificate and shall verify that the IKE authentication succeeds. To demonstrate a bit-wise comparison of the DN, the evaluator shall change a single bit in the DN (preferably, in an Object Identifier (OID) in the DN) and verify that the IKE authentication fails. To demonstrate a comparison of DN values, the evaluator shall change any one of the four DN values and verify that the IKE authentication fails.</test>
                  <test>[conditional] If the TOE supports both IPv4 and IPv6 and supports IP address identifier types, the evaluator must repeat test 1 and 2 with both IPv4 address identifiers and IPv6 identifiers. Additionally, the evaluator shall verify that the TOE verifies that the IP header matches the identifiers by setting the presented identifiers and the reference identifier with the same IP address that differs from the actual IP address of the peer in the IP headers and verifying that the IKE authentication fails.</test>
                  <test>[conditional] If, according to the TSS, the TOE performs comparisons between the peer’s ID payload and the peer’s certificate, the evaluator shall repeat the following test for each combination of supported identifier types and supported certificate fields (as above). The evaluator shall configure the peer to present a different ID payload than the field in the peer’s presented certificate and verify that the TOE fails to authenticate the IKE peer.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e12">
            <title>The TSF shall not establish an SA if the <selectables><selectable id="fcs_ipsec_ext.1.12_1" >IP address</selectable><selectable id="fcs_ipsec_ext.1.12_2" >Fully Qualified Domain Name (FQDN)</selectable><selectable id="fcs_ipsec_ext.1.12_3" >user FQDN</selectable><selectable id="fcs_ipsec_ext.1.12_4" >Distinguished Name (DN)</selectable> </selectables> and <selectables onlyone="yes"><selectable id="fcs_ipsec_ext.1.12_5" >no other reference identifier type</selectable><selectable id="fcs_ipsec_ext.1.12_7" ><assignable>other supported reference identifier types</assignable></selectable> </selectables> contained in a certificate does not match the expected value(s) for the entity attempting to establish a connection.</title>
            <ext-comp-def-title><title>The TSF shall not establish an SA if the<assignable>specific certificate reference identifier</assignable>and<assignable>other certificate reference identifier type</assignable>contained in a certificate does not match the expected value(s) for the entity attempting to establish a connection.</title></ext-comp-def-title>
            <note role="application">The TOE must support at least one of the following identifier types: IP address, Fully Qualified Domain Name (FQDN), user FQDN, or Distinguished Name (DN). In the future, the TOE will be required to support all of these identifier types. The TOE is expected to support as many IP address formats (IPv4 and IPv6) as IP versions supported by the TOE in general. The ST Author may assign additional supported identifier types in the second selection.</note>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.<h:br/></no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e13">
            <title>The TSF shall not establish an SA if the presented identifier does not match the configured reference identifier of the peer.</title>
            <note role="application">At this time, only the comparison between the presented identifier in the peer’s certificate and the peer’s reference identifier is mandated by the testing below. However, in the future, this requirement will address two aspects of the peer certificate validation: 1) comparison of the peer’s ID payload to the peer’s certificate which are both presented identifiers, as required by RFC 4945 and 2) verification that the peer identified by the ID payload and the certificate is the peer expected by the TOE (per the reference identifier). At that time, the TOE will be required to demonstrate both aspects (i.e. that the TOE enforces that the peer’s ID payload matches the peer’s certificate which both match configured peer reference identifiers).<h:p/> Excluding the DN identifier type (which is necessarily the Subject DN in the peer certificate), the TOE may support the identifier in either the Common Name or Subject Alternative Name (SAN) or both. If both are supported, the preferred logic is to compare the reference identifier to a presented SAN, and only if the peer’s certificate does not contain a SAN, to fall back to a comparison against the Common Name. In the future, the TOE will be required to compare the reference identifier to the presented identifier in the SAN only, ignoring the Common Name.</note>
            <aactivity level="element">
              <no-tests>EAs for this element are tested through EAs for FCS_IPSEC_EXT.1.11.<h:br/></no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-ipsec-ext-1e14">
            <title>The <selectables><selectable id="fcs_ipsec_ext.1.14_1" >TSF</selectable><selectable id="fcs_ipsec_ext.1.14_2" >VPN Gateway</selectable> </selectables> shall be able to ensure by default that the strength of the symmetric algorithm (in terms of the number of bits in the key) negotiated to protect the <selectables><selectable id="fcs_ipsec_ext.1.14_3" >IKEv1 Phase 1</selectable><selectable id="fcs_ipsec_ext.1.14_4" >IKEv2 IKE_SA</selectable> </selectables> connection is greater than or equal to the strength of the symmetric algorithm (in terms of the number of bits in the key) negotiated to protect the <selectables><selectable id="fcs_ipsec_ext.1.14_5" >IKEv1 Phase 2</selectable><selectable id="fcs_ipsec_ext.1.14_6" >IKEv2 CHILD_SA</selectable> </selectables> connection.</title>
            <ext-comp-def-title><title>The<assignable>configuring entity</assignable>shall be able to ensure by default that the strength of the symmetric algorithm (in terms of the number of bits in the key) negotiated to protect the<assignable>connection type</assignable>connection is greater than or equal to the strength of the symmetric algorithm (in terms of the number of bits in the key) negotiated to protect the<assignable>connection type</assignable>connection.</title></ext-comp-def-title>
            <note role="application">If this functionality is configurable, the TSF may be configured by a VPN Gateway or by an Administrator of the TOE itself.<h:p/> The ST Author chooses either or both of the IKE selections based on what is implemented by the TOE. Obviously, the IKE version(s) chosen should be consistent not only in this element, but with other choices for other elements in this component. While it is acceptable for this capability to be configurable, the default configuration in the evaluated configuration (either "out of the box" or by configuration guidance in the AGD documentation) must enable this functionality.</note>
            <aactivity level="element">
              <TSS>The evaluator shall check that the TSS describes the potential strengths (in terms of the number of bits in the symmetric key) of the algorithms that are allowed for the IKE and ESP exchanges. The TSS shall also describe the checks that are done when negotiating IKEv1 Phase 2 and/or IKEv2 CHILD_SA suites to ensure that the strength (in terms of the number of bits of key in the symmetric algorithm) of the negotiated algorithm is less than or equal to that of the IKE SA this is protecting the negotiation.</TSS>
              <Guidance/>
              <Tests>
                The evaluator follows the guidance to configure the TOE to perform the following tests for each version of IKE supported: <h:p/>
                <testlist>
                  <test>The evaluator shall successfully negotiate an IPsec connection using each of the supported algorithms and hash functions identified in the requirements.</test>
                  <test>[conditional]The evaluator shall attempt to establish an SA for ESP that selects an encryption algorithm with more strength than that being used for the IKE SA (i.e., symmetric algorithm with a key size larger than that being used for the IKE SA). Such attempts should fail.</test>
                  <test>The evaluator shall attempt to establish an IKE SA using an algorithm that is not one of the supported algorithms and hash functions identified in the requirements. Such an attempt should fail.</test>
                  <test>The evaluator shall attempt to establish an SA for ESP (assumes the proper parameters where used to establish the IKE SA) that selects an encryption algorithm that is not identified in FCS_IPSEC_EXT.1.4. Such an attempt should fail.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure to establish an IPsec SA.</audit-event-descr>
            <audit-event-info>Reason for failure.</audit-event-info>
            <audit-event-info>Non-TOE endpoint of connection (IP address).</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Establishment/Termination of an IPsec SA.</audit-event-descr>
            <audit-event-info>Non-TOE endpoint of connection (IP address).</audit-event-info>
          </audit-event>
        </f-component>
        <!--FCS_OTV_EXT.1 One-Time Value-->
        <f-component cc-id="fcs_otv_ext.1" id="sfr-fcs-otv-ext-1" name="One-Time Value" status="sel-based">
          <comp-lev>requires that values such as salts, nonces, IVs, and initial counters be generated using random bit generation.</comp-lev>
          <audit>The following audit events should be considered if FAU_GEN Security audit data generation is included in the PP, PP-Module, functional package or ST:<h:ul><h:li>minimal: Success and failure of the activity;</h:li> <h:li>basic: The object attribute(s), and object value(s) excluding any sensitive information.</h:li> </h:ul> </audit>
          <dependencies><h:br/>FCS_RBG.1 Random Bit Generation<h:br/>[FCS_COP.1/HMAC Key Hash, or<h:br/>FCS_COP.1/SKC Symmetric key cryptography, or<h:br/>FCS_CKM.5 Key Derivation, or<h:br/>FCS_CKM_EXT.8 Password-Based Key Derivation, or<h:br/>FCS_COP.1/CMAC CMAC, or<h:br/>FCS_COP.1/KeyWrap Key Wrapping<h:br/>FCS_COP.1/AEAD Authenticated Encryption with Associated Data, or<h:br/>FCS_COP.1/KeyEncap Key Encapsulation]<h:br/></dependencies>
          <f-element id="fcs-otv-ext-1e1">
            <title>The TSF shall perform cryptographic one-time value generation for<selectables><tabularize id="fcs-otv-ext-sels" title="Recommended choices and guidance for FCS_OTV_EXT.1"><selectcol>Algorithm or mode</selectcol><reqtext>using the output of a 
								random bit generator as defined in FCS_RBG.1deterministic OTV constructionOTV construction method and sizes of length that meet the following:
							</reqtext><selectcol>List of standards</selectcol><textcol>Notes</textcol><reqtext>The following table provides the recommended choices for
								completion of the selection operations of FCS_COP.1/XOF.</reqtext></tabularize><selectable id="sel-fcs-otv-hmac"><col>HMAC</col><col>FIPS PUB 198-1, NIST SP 800-56C Revision 2</col></selectable><selectable id="sel-fcs-otv-kmac"><col>KMAC</col><col>NIST SP 800-185,NIST SP 800-56C Revision 2</col></selectable><selectable id="sel-fcs-otv-kdf"><col>KDF</col><col>NIST SP 800-108 Revision 1,NIST SP 800-135 Revision 1,ISO/IEC 11770-6:2016 (Subclause 7.3.2)</col></selectable><selectable id="sel-fcs-otv-pbkdf"><col>PBKDF</col><col>NIST SP 800-132</col></selectable><selectable id="sel-fcs-otv-ctr"><col>CTR</col><col>NIST SP 800-38A</col></selectable><selectable id="sel-fcs-otv-cbc"><col>CBC</col><col>NIST SP 800-38A Appendix C</col></selectable><selectable id="sel-fcs-otv-ofb"><col>OFB</col><col>NIST SP 800-38A</col></selectable><selectable id="sel-fcs-otv-cfb"><col>CFB</col><col>NIST SP 800-38A</col></selectable><selectable id="sel-fcs-otv-xts"><col>XTS</col><col>NIST SP 800-38E,IEEE Std 1619-2018</col></selectable><selectable id="sel-fcs-otv-cmac"><col>CMAC</col><col>NIST SP 800-38B</col></selectable><selectable id="sel-fcs-otv-kw"><col>KW, KWP</col><col>NIST SP 800-38F</col></selectable><selectable id="sel-fcs-otv-ccm"><col>CCM</col><col>NIST SP 800-38C</col></selectable><selectable id="sel-fcs-otv-gcm"><col>GCM</col><col>NIST SP 800-38D</col></selectable><selectable id="sel-fcs-otv-oaep"><col>RSA-OAEP</col><col>NIST SP 800-56B Revision 2</col></selectable></selectables></title>
            <note role="application">See the algorithm- or mode-specific Notes above for guidance on completing the second selection.<h:p/> This SFR must be included in the ST if it is a service provided by the TOE to tenant software, or if it is used by the TOE itself to support or implement PP-specified security functionality.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure the TSS describes how one-time values are generated using the RBG.</TSS>
              <Guidance/>
              <Tests>The evaluator shall confirm by testing that the one-time values obtained in the cryptographic operations that use the one-time values are of the length specified in FCS_OTV_EXT.1, are obtained from the RBG, and are fresh on each invocation. <h:p/>This testing may be carried out as part of the testing for the relevant cryptographic operations.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_RBG.1 Random Bit Generation (RBG)-->
        <f-component cc-id="fcs_rbg.1" id="fcs-rbg-1" name="Random Bit Generation (RBG)" status="sel-based">
          <depends on-incl="sfr-fcs-ckm-1-skg"/>
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-incl="sfr-fcs-otv-ext-1"/>
          <depends on-incl="sfr-fcs-ckm-1-akg"/>
          <depends on-incl="sfr-fcs-cop-1-siggen"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fcs-rbg-1e1">
            <title>TSF shall perform deterministic random bit generation services using<selectables><tabularize id="fcs-rbg-1-sels" title="Recommended choices for FCS_RBG.1.1"><textcol>Identifier</textcol><reqtext></reqtext><selectcol>DRBG Algorithm</selectcol><reqtext> in accordance with </reqtext><selectcol>List of standards</selectcol><reqtext>after initialization.The following table provides the recommended choices for
								completion of the selection operations of FCS_RBG.1.</reqtext></tabularize><selectable id="sel-fcs-rbg-hash-drbg"><col>HASH_DRBG</col><col>Hash_DRBG with <selectables><selectable id="fcs_rbg.1.1_1" >SHA-256</selectable><selectable id="fcs_rbg.1.1_2" >SHA-384</selectable><selectable id="fcs_rbg.1.1_3" >SHA-512</selectable><selectable id="fcs_rbg.1.1_4" >SHA3-256</selectable><selectable id="fcs_rbg.1.1_5" >SHA3-384</selectable><selectable id="fcs_rbg.1.1_6" >SHA3-512</selectable> </selectables> </col><col> <selectables><selectable id="fcs_rbg.1.1_7" >ISO/IEC 18031: 2011 (Section C.2.2)</selectable><selectable id="fcs_rbg.1.1_8" >NIST SP 800-90A Revision 1 Section 10.1.1</selectable> </selectables> </col></selectable><selectable id="sel-fcs-rbg-hmac-drbg"><col>HMAC_DRBG</col><col>HMAC_DRBG with <selectables><selectable id="fcs_rbg.1.1_9" >SHA-256</selectable><selectable id="fcs_rbg.1.1_10" >SHA-384</selectable><selectable id="fcs_rbg.1.1_11" >SHA-512</selectable><selectable id="fcs_rbg.1.1_12" >SHA3-256</selectable><selectable id="fcs_rbg.1.1_13" >SHA3-384</selectable><selectable id="fcs_rbg.1.1_14" >SHA3-512</selectable> </selectables> </col><col> <selectables><selectable id="fcs_rbg.1.1_15" >ISO/IEC 18031: 2011 (Section C.2.3)</selectable><selectable id="fcs_rbg.1.1_16" >NIST SP 800-90A Revision 1 Section 10.1.2</selectable> </selectables> </col></selectable><selectable id="sel-fcs-rbg-ctr-drbg"><col>CTR_DRBG</col><col>CTR_DRBG with <selectables><selectable id="fcs_rbg.1.1_17" >AES-128</selectable><selectable id="fcs_rbg.1.1_18" >AES-192</selectable><selectable id="fcs_rbg.1.1_19" >AES-256</selectable> </selectables> </col><col> <selectables><selectable id="fcs_rbg.1.1_20" >ISO/IEC 18031: 2011 (Section C.3.2)</selectable><selectable id="fcs_rbg.1.1_21" >NIST SP800-90A Revision 1 Section 10.2.1</selectable> </selectables> </col></selectable></selectables></title>
            <note role="application"><h:p>NIST SP 800-90A contains three different methods of generating random numbers; each of these, in turn, depends on underlying cryptographic primitives (hash functions/ciphers). The ST author will select the function used and include the specific underlying cryptographic primitives used in the requirement or in the TSS. While any of the identified hash functions (SHA-224, SHA-256, SHA-384, SHA-512) are allowed for Hash_DRBG or HMAC_DRBG, only AES-based implementations for CTR_DRBG are allowed.</h:p> <h:p>This SFR must be included in the ST if random bits are provided by the TOE to tenant software, or if it is used by the TOE itself to support or implement PP-specified security functionality.<h:p/> This SFR is also needed if the following SFRs are included in the ST: FCS_IPSEC_EXT.1, FCS_OTV_EXT.1, FCS_CKM.1/AKG, FCS_CKM.1/SKG, and FCS_COP.1/SigGen.<h:p/> Also, this SFR must be claimed if "<h:i>KDF-CTR</h:i> ," "<h:i>KDF-FB</h:i> ," or "<h:i>KDF-DPI</h:i> " is selected in FCS_CKM.5.<h:p/> If "<h:i>HMAC_DRBG (any)</h:i> " is selected, then FCS_COP.1/KeyedHash must be claimed.<h:p/> If "<h:i>Hash_DRBG (any)</h:i> " is selected, then FCS_COP.1/Hash must be claimed. If "<h:i>CTR_DRBG (any)</h:i> " is selected, then FCS_COP.1/SKC must be claimed.</h:p> </note>
            <aactivity level="element">
              <TSS>The evaluator shall verify that the TSS identifies the DRBGs used by the TOE.</TSS>
              <Guidance>If the DRBG functionality is configurable, the evaluator shall verify that the operational guidance includes instructions on how to configure this behavior.</Guidance>
              <Tests> <h:p>The evaluator shall perform the following tests:</h:p> <h:p>The evaluator shall perform 15 trials for the RNG implementation. If the RNG is configurable, the evaluator shall perform 15 trials for each configuration. The evaluator shall also confirm that the operational guidance contains appropriate instructions for configuring the RNG functionality.</h:p> <h:p>If the RNG has prediction resistance enabled, each trial consists of (1) instantiate DRBG, (2) generate the first block of random bits (3) generate a second block of random bits (4) uninstantiate. The evaluator verifies that the second block of random bits is the expected value. The evaluator shall generate eight input values for each trial. The first is a count (0 – 14). The next three are entropy input, nonce, and personalization string for the instantiate operation. The next two are additional input and entropy input for the first call to generate. The final two are additional input and entropy input for the second call to generate. These values are randomly generated. "generate one block of random bits" means to generate random bits with number of returned bits equal to the Output Block Length (as defined in NIST SP 800-90A).</h:p> <h:p>If the RNG does not have prediction resistance, each trial consists of (1) instantiate DRBG, (2) generate the first block of random bits (3) reseed, (4) generate a second block of random bits (5) uninstantiate. The evaluator verifies that the second block of random bits is the expected value. The evaluator shall generate eight input values for each trial. The first is a count (0 – 14). The next three are entropy input, nonce, and personalization string for the instantiate operation. The fifth value is additional input to the first call to generate. The sixth and seventh are additional input and entropy input to the call to reseed. The final value is additional input to the second generate call.</h:p> <h:p>The following list contains more information on some of the input values to be generated/selected by the evaluator.<h:ul><h:li><h:b>Entropy input:</h:b> The length of the entropy input value must equal the seed length.</h:li> <h:li><h:b>Nonce:</h:b> If a nonce is supported (CTR_DRBG with no Derivation Function does not use a nonce), the nonce bit length is one-half the seed length.</h:li> <h:li><h:b>Personalization string:</h:b> The length of the personalization string must be less than or equal to seed length. If the implementation only supports one personalization string length, then the same length can be used for both values. If more than one string length is support, the evaluator shall use personalization strings of two different lengths. If the implementation does not use a personalization string, no value needs to be supplied.</h:li> <h:li><h:b>Additional input:</h:b> The additional input bit lengths have the same defaults and restrictions as the personalization string lengths.</h:li> </h:ul> </h:p></Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-rbg-1e2">
            <title>The TSF shall use a <selectables><selectable id="internal-seed">TSF noise source <assignable>name of noise source</assignable> </selectable><selectable id="external-seed" >TSF interface for seeding</selectable> </selectables> for initialization and reseeding.</title>
            <note role="application"><h:p>For the selection in this requirement, the ST author selects "TSF noise source" if a single noise source is used as input to the DRBG. The ST author selects "multiple TSF noise sources" if a seed is formed from a combination of two or more noise sources within the TOE boundary. If the TSF implements two or more separate DRBGs that are seeded in separate manners, this SFR should be iterated for each DRBG. It multiple distinct noise sources exist such that each DRBG only uses one of them, then each iteration would select "TSF noise source"; "multiple TSF noise sources" is only selected if a single DRBG uses multiple noise sources for its seed. The ST author selects "TSF interface for seeding" if noise source data is generated outside the TOE boundary.</h:p> <h:p>If "TSF noise source" is selected, FCS_RBG.3 must be claimed.</h:p> <h:p>If "multiple TSF noise sources" is selected, FCS_RBG.4 and FCS_RBG.5 must be claimed.</h:p> <h:p>If "TSF interface for seeding" is selected, FCS_RBG.2 must be claimed.</h:p> <h:p>The security strength of the entropy used for seeding depends on the functions for which the TSF uses entropy. The security strength for the various functions is defined in Tables 2 and 3 of NIST SP 800-57A.</h:p> </note>
            <aactivity level="element">
              <no-tests>Documentation will be produced - and the evaluator shall perform the activities - in accordance with<xref to="entropyappendix"/> and the <h:a href="https://old.niap-ccevs.org/Documents_and_Guidance/ccevs/Entropy%20Documentation%20and%20Assessment%20Clarification.pdf">Clarification to the Entropy Documentation and Assessment Annex</h:a>.</no-tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-rbg-1e3">
            <title>The TSF shall update the DRBG state by <selectables><selectable id="fcs_rbg.1.3_1" >reseeding</selectable><selectable id="fcs_rbg.1.3_2" >uninstantiating and re-instantiating</selectable> </selectables> using a <selectables><selectable id="fcs_rbg.1.3_3">TSF entropy source <assignable>name of entropy source</assignable> </selectable><selectable id="fcs_rbg.1.3_5">TSF interface for obtaining entropy <assignable>name of the interface</assignable> </selectable> </selectables> in the following situations: <selectables linebreak="yes"><selectable id="fcs_rbg.1.3_7" >never</selectable><selectable id="fcs_rbg.1.3_8" >on demand</selectable><selectable id="fcs_rbg.1.3_9">on the condition: <assignable>condition</assignable> </selectable><selectable id="fcs_rbg.1.3_11">after <assignable>time</assignable> </selectable> </selectables> in accordance with <assignable>list of standards</assignable>.</title>
            <note role="application">No rationale is acceptable for not satisfying one of these dependencies.<h:p/> If a reseeding is selected in the first selection and something other than “never” is selected in the third selection of FCS_RBG.1.3, but reseeding is not feasible, the TSF will uninstantiate RBGs, rather than produce output that is of insufficient quality. The listed standards should specify the reseed interval and procedure for uninstantiating and reseeding. The remaining selection allows the PP Author to require application-specific conditions for reseeding.<h:p/> "Uninstantiate” means that the internal state of the DRBG is no longer available for use. In the second selection of FCS_RBG.1.3, “on demand” means that a TOE presents an interface to reseed as a TSFI (e.g., an API call). The interface causes the DRBG to reseed at the request of an authorized user, either with an internal source, an external source, or from input provided through the TSFI (e.g., the API call).</note>
            <aactivity level="element">
              <TSS>The evaluator shall verify that the TSS identifies how the DRBG state is updated, and the situations under which this may occur.</TSS>
              <Guidance>If the ST claims that the DRBG state can be updated on demand, the evaluator shall verify that the operational guidance has instructions for how to perform this operation.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure of the randomization process</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FCS_RBG.2 Random Bit Generation (External Seeding)-->
        <f-component cc-id="fcs_rbg.2" id="fcs-rbg-2" name="Random Bit Generation (External Seeding)" status="sel-based">
          <depends on-sel="external-seed"/>
          <f-element id="fcs-rbg-2e1">
            <title>The TSF shall be able to accept a minimum input of <assignable>minimum input length greater than zero</assignable> from a TSF interface for the purpose of obtaining entropy.</title>
            <note role="application">This requirement is claimed when a DRBG is seeded with entropy from one or more noise source that is outside the TOE boundary. In the case of a general purpose computing platform this would likely only occur when the entropy source is a Dedicated Security Component that is integrated with the TOE. Typically the entropy produced by an environmental noise source is conditioned such that the input length has full entropy and is therefore usable as the seed. However, if this is not the case, it should be noted what the minimum entropy rate of the noise source is so that the TSF can collect a sufficiently large sample of noise data to be conditioned into a seed value.In order to maintain compliance with NIST SP 800-90A Revision 1, the TSF accepts enough bits of input from an external noise source to satisfy the entropy requirements of the DRBG. The TSF should also protect the integrity and confidentiality of the entropy it receives from the external noise source.<h:p/> The TSF interface for the purpose of seeding here is the interface used to gather entropy for initializing the seed.</note>
            <aactivity level="component">
              <no-tests>The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, the TSF external interface used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data such that it can be determined that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.</no-tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_RBG.3 Random Bit Generation (Internal Seeding - Single Source)-->
        <f-component cc-id="fcs_rbg.3" id="fcs-rbg-3" name="Random Bit Generation (Internal Seeding - Single Source)" status="sel-based">
          <depends on-sel="internal-seed"/>
          <f-element id="fcs-rbg-3e1">
            <title>The TSF shall be able to seed the DRBG using a <selectables><selectable id="fcs_rbg.3.1_1" >TSF software-based entropy source</selectable><selectable id="fcs_rbg.3.1_2">TSF hardware-based entropy source <assignable>name of entropy source</assignable> </selectable> </selectables> with <assignable>number of bits</assignable> bits of min-entropy.</title>
            <note role="application">This requirement is claimed when a DRBG is seeded with entropy from a single noise source that is within the TOE boundary. Min-entropy should be expressed as a ratio of entropy bits to sampled bits so that the total amount of data needed to ensure full entropy is known, as well as the conditioning function by which that data is reduced in size to the seed.If an ST Author wishes to use multiple internal noise sources, they iterate this requirement for each noise source used by the TSF.<h:p/> Hardware-based noise sources are entropy sources whose primary function is noise generation, such as ring oscillators, diodes, and thermal noise. While a TOE may use software to collect the noise from these hardware sources, these are not software-based. Software-based noise sources are those sources that have some other primary function, and the noise is a byproduct of their normal operation. Examples of software-based noise sources are user or system-based events, reading the least significant bits from an event timer, etc.<h:p/> Hardware-based noise sources may be stochastically modelled, in which case the amount of entropy is well understood. Software-based noise sources are usually less well understood and therefore will typically take a more conservative approach, gathering larger numbers of bits than required, then performing a compression function to derive the final output. Software-based noise sources often rely on an entropy estimator.</note>
            <aactivity level="component">
              <no-tests>The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, the TSF noise source used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data such that it can be determined that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.</no-tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_RBG.4 Random Bit Generation (Internal Seeding - Multiple Sources)-->
        <f-component cc-id="fcs_rbg.4" id="fcs-rbg-4" name="Random Bit Generation (Internal Seeding - Multiple Sources)" status="sel-based">
          <depends on-sel="internal-seeds"/>
          <f-element id="fcs-rbg-4e1">
            <title>The TSF shall be able to seed the DRBG using <selectables><selectable id="fcs_rbg.4.1_1"> <assignable>number</assignable> TSF software-based entropy source(s)</selectable><selectable id="fcs_rbg.4.1_3"> <assignable>number</assignable> TSF hardware-based entropy source(s)</selectable> </selectables>.</title>
            <note role="application">This requirement is claimed when a DRBG is seeded with entropy from multiple noise sources that are within the TOE boundary. FCS_RBG.5 defines the mechanism by which these sources are combined to ensure sufficient minimum entropy.</note>
            <aactivity level="component">
              <no-tests>The evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it identifies, for each DRBG function implemented by the TOE, each TSF noise source used to seed the TOE's DRBG. The evaluator shall verify that this includes the amount of sampled data and the min-entropy rate of the sampled data from each data source.</no-tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_RBG.5 Random Bit Generation (Combining Entropy Sources)-->
        <f-component cc-id="fcs_rbg.5" id="fcs-rbg-5" name="Random Bit Generation (Combining Entropy Sources)" status="sel-based">
          <depends on-sel="internal-seeds"/>
          <f-element id="fcs-rbg-5e1">
            <title>The TSF shall <selectables><selectable id="fcs_rbg.5.1_1" >hash</selectable><selectable id="fcs_rbg.5.1_2" >concatenate and hash</selectable><selectable id="fcs_rbg.5.1_3" >XOR</selectable><selectable id="fcs_rbg.5.1_4" >input into a linear feedback shift register</selectable><selectable id="fcs_rbg.5.1_6" ><assignable>combining operation</assignable></selectable> </selectables>  <selectables><selectable id="fcs_rbg.5.1_7" >output from TSF entropy source(s)</selectable><selectable id="fcs_rbg.5.1_8" >input from TSF interface(s) for obtaining entropy</selectable> </selectables> resulting in a minimum of <assignable>number of bits</assignable> bits of min-entropy to create the entropy input into the derivation function as defined in <selectables><selectable id="fcs_rbg.5.1_10" >ISO/IEC 18031:2011</selectable><selectable id="fcs_rbg.5.1_11" >NIST SP 800-90A Revision 1</selectable> </selectables> </title>
            <note role="application">One can apply NIST SP 800-90B (or AIS-31) statistical tests against internal noise sources (a.k.a. raw entropy) to confirm the min-entropy of the noise sources either in aggregate or individually. One should not apply NIST SP 800-90B (or AIS-31) statistical tests against external noise sources since the TOE is unable to enforce entropy requirements or conditioning requirements against external sources of entropy. However, the TSS may include estimates for min-entropy from external sources that contribute to the overall entropy requirements for either the DRBG or for FCS_OTV_EXT.1.<h:p/> FCS_RBG.5 specifies the combining operation such that the combined min-entropy of all the internal sources and the estimated entropy of the external sources is greater than or equal to the desired entropy of the output of the combining operation. The output could be used as a nonce or a seed for a DRBG. The combining operation should avoid crushing the entropy of the sources such that the desired entropy of the output cannot be met.<h:p/> The TSF interface(s) for seeding here is the interface used to gather entropy for initializing the seed.</note>
            <aactivity level="component">
              <no-tests>Using the entropy sources specified in FCS_RBG.4, the evaluator shall examine the entropy documentation required by FCS_RBG.1.2 to verify that it describes the method by which the various entropy sources are combined into a single seed. This should include an estimation of the rate at which each noise source outputs data and whether this is dependent on any system-specific factors so that each source's relative contribution to the overall entropy is understood. The evaluator shall verify that the resulting combination of sampled data and the min-entropy rate of the sampled data is described in sufficient detail to determine that sufficient entropy can be made available for the highest strength keys that the TSF can generate (e.g., 256 bits). If the seed data cannot be assumed to have full entropy (e.g., the min-entropy of the sampled bits is less than 1), the evaluator shall ensure that the entropy documentation describes the method by which the TOE estimates the amount of entropy that has been accumulated to ensure that sufficient data is collected and any conditioning that the TSF applies to the output data to create a seed of sufficient size with full entropy.</no-tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_RBG.6 Random Bit Generation Service-->
        <f-component cc-id="fcs_rbg.6" id="fcs-rbg-6" name="Random Bit Generation Service" status="optional">
          <f-element id="fcs-rbg-6e1">
            <title>The TSF shall provide a <selectables><selectable id="fcs_rbg.6.1_1" >hardware</selectable><selectable id="fcs_rbg.6.1_2" >software</selectable><selectable id="fcs_rbg.6.1_4" ><assignable>other interface type</assignable></selectable> </selectables> interface to make the DRBG output, as specified in FCS_RBG.1 Random Bit Generation (RBG), available as a service to entities outside of the TOE.</title>
            <note role="application">This SFR must be included in the ST if the TOE provides an entropy source accessible to tenant software.<h:p/> This requirement ensures that the TOE makes available sufficient entropy to any tenant that requires it. Every entropy source need not provide high-quality entropy, but tenant software must have a means of acquiring sufficient entropy.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS documents the entropy sources implemented by the TOE. It is not necessary to document all the platform features that can be used by tenant software to contribute to entropy, rather only those features expressly provided as entropy sources.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes how to configure entropy sources (if applicable) and how tenant software can access the sources.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>The evaluator shall invoke the entropy source(s) from tenant software. The evaluator shall verify that the tenant acquires values from the interface.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_STG_EXT.1 Protected Storage-->
        <f-component cc-id="fcs_stg_ext.1" id="sfr-fcs-stg-ext-1" name="Protected Storage" status="optional">
          <comp-lev>requires the TSF to enforce protected storage for keys and secrets so that they cannot be accessed or destroyed without authorization.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Ability to manage import and export keys/secrets to and from protected storage.</h:li> </h:ul> </management>
          <dependencies><h:br/>FCS_CKM.6 Timing and Event of Cryptographic Key Destruction</dependencies>
          <f-element id="fcs-stg-ext-1e1">
            <title>The TSF shall provide <selectables><selectable id="fcs_stg_ext.1.1_1" >mutable hardware-based</selectable><selectable id="fcs_stg_ext.1.1_2" >immutable hardware-based</selectable><selectable id="sel-stg1-sw-based" >software-based</selectable> </selectables> protected storage for asymmetric private keys and <selectables><selectable id="fcs_stg_ext.1.1_3" >symmetric keys</selectable><selectable id="fcs_stg_ext.1.1_4" >persistent secrets</selectable><selectable id="fcs_stg_ext.1.1_5" >no other keys</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall provide<assignable>protected storage type</assignable>protected storage for asymmetric private keys and<assignable>secrets to be stored</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR should be included in the ST if the TOE provides protected storage as a service for tenant software, or if it stores keys or other persistent secrets for its own use.<h:p/> This SFR must be claimed if the TOE includes a Dedicated Security Component that provides storage services, such as a TPM.<h:p/> If the protected storage is implemented in software that is protected as required by FCS_STG_EXT.2, the ST Author is expected to select "<h:i>software-based</h:i> ." If "<h:i>software-based</h:i> " is selected, the ST Author is expected to select "<h:i>software-based key storage</h:i> " in FCS_STG_EXT.2 and also claim FCS_STG_EXT.3.<h:p/> If this SFR is included in the ST, then FCS_CKM.6 must also be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall review the TSS to determine that the TOE implements the required protected storage. The evaluator shall ensure that the TSS contains a description of the protected storage mechanism that justifies the selection of mutable hardware-based or software-based.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the process for generating keys, importing keys, or both, based on what is claimed by the ST. The evaluator shall also examine the AGD to ensure that it describes the process for destroying keys that have been imported or generated.</Guidance>
              <Tests>
                The evaluator shall test the functionality of each security function as described below. If the TOE supports both import and generation of keys, the evaluator shall repeat the testing as needed to demonstrate that the keys resulting from both operations are treated in the same manner. The devices used with the tooling may need to be non-production devices in order to enable the execution of testing and gathering of evidence. <h:p/>
                <testlist>
                  <test>The evaluator shall import or generate keys/secrets of each supported type according to the operational guidance. The evaluator shall write, or the developer shall provide access to, an application that generates a key/secret of each supported type and calls the import functions. The evaluator shall verify that no errors occur during import.</test>
                  <test>The evaluator shall write, or the developer shall provide access to, tenant software that uses a generated or imported key/secret:<h:ul><h:li>For RSA, the secret shall be used to sign data.</h:li> <h:li>For ECDSA, the secret shall be used to sign data.</h:li> </h:ul> The evaluator shall verify that the tenant software is able to access and use the key/secret as described.</test>
                  <test>The evaluator shall destroy keys/secrets of each supported type according to the operational guidance. The evaluator shall write, or the developer shall provide access to, tenant software that destroys an imported or generated key/secret. The evaluator shall verify that the tenant software is able to cause the deletion of only keys that were created or imported on its behalf.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fcs-stg-ext-1e2">
            <title>The TSF shall support the capability of <selectables><selectable id="sel-fcs-stg-ext-1e2-import" >importing keys/secrets into the TOE</selectable><selectable id="fcs_stg_ext.1.2_1">causing the TOE to generate <selectables><selectable id="sel-fcs-stg-ext-1e2-ak" >asymmetric</selectable><selectable id="sel-fcs-stg-ext-1e2-sk" >symmetric</selectable></selectables> keys/secrets</selectable> </selectables> upon request of <selectables><selectable id="fcs_stg_ext.1.2_2" >a client application</selectable><selectable id="fcs_stg_ext.1.2_3" >an administrator</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall support the capability of<assignable>capability for acquiring keys</assignable>upon request of<assignable>entity requesting storage</assignable>.</title></ext-comp-def-title>
            <note role="application">If "causing the TOE to generate keys/secrets" is selected in FCS_STG_EXT.1.2, then the ST must include at least one of FCS_CKM.1/AKG or FCS_CKM.1/SKG depending on the value of the internal selection.</note>
          </f-element>
          <f-element id="fcs-stg-ext-1e3">
            <title>The TSF shall be capable of destroying keys/secrets in the protected storage upon request of <selectables><selectable id="fcs_stg_ext.1.3_1" >a client application</selectable><selectable id="fcs_stg_ext.1.3_2" >an administrator</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall be capable of destroying keys/secrets in the protected storage upon request of<assignable>authorized subject</assignable>.</title></ext-comp-def-title>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FCS_STG_EXT.2 Key Storage Encryption-->
        <f-component cc-id="fcs_stg_ext.2" id="sfr-fcs-stg-ext-2" name="Key Storage Encryption" status="sel-based">
          <depends on-sel="sel-stg1-sw-based"/>
          <comp-lev>requires the TSF to ensure the confidentiality of stored data using a specified method.</comp-lev>
          <dependencies><h:br/>FCS_COP.1 Cryptographic Operation<h:br/>FCS_STG_EXT.1 Protected Storage</dependencies>
          <f-element id="fcs-stg-ext-2e1">
            <title>The TSF shall encrypt [  <h:i>AKs, SKs, KEKs, and <selectables><selectable id="fcs_stg_ext.2.1_1" >long-term trusted channel key material</selectable><selectable id="sel-stg2-sw-based" >all software-based key storage</selectable><selectable id="fcs_stg_ext.2.1_2" exclusive="yes">no other keys</selectable> </selectables> </h:i>  ] using Key Wrapping as defined in FCS_COP.1/KeyWrap.</title>
            <ext-comp-def-title><title>The TSF shall encrypt<assignable>types of key material</assignable>using<assignable>cryptographic algorithm</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST if "software-based" is selected in FCS_STG_EXT.1.</note>
            <aactivity level="component">
              <TSS>The evaluator shall review the TSS to determine that the TSS describes the protection of symmetric keys, KEKs, long-term trusted channel key material, and software-based key storage as claimed in FCS_STG_EXT.2.1.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
        </f-component>
        <!--FCS_STG_EXT.3 Key Integrity Protection-->
        <f-component cc-id="fcs_stg_ext.3" id="sfr-fcs-stg-ext-3" name="Key Integrity Protection" status="sel-based">
          <depends on-sel="sel-stg1-sw-based"/>
          <comp-lev>requires the TSF to ensure the integrity of stored data using a specified method.</comp-lev>
          <dependencies><h:br/>FCS_COP.1 Cryptographic Operation</dependencies>
          <f-element id="fcs-stg-ext-3e1">
            <title>The TSF shall protect the integrity of any encrypted [  <h:i>AKs, SKs, KEKs, and <selectables><selectable id="fcs_stg_ext.3.1_1" >long-term trusted channel key material</selectable><selectable id="fcs_stg_ext.3.1_2" >all software-based key storage</selectable><selectable id="fcs_stg_ext.3.1_3" exclusive="yes">no other keys</selectable> </selectables> </h:i>  ] by using <selectables linebreak="yes"><selectable id="sel-stg3-kw" >Key wrapping accordance with FCS_COP.1/KeyWrap</selectable><selectable id="sel-stg3-hmac" >A keyed hash of the stored key in accordance with FCS_COP.1/KeyedHash</selectable><selectable id="sel-stg3-digsig" >A digital signature of the stored key in accordance with FCS_COP.1/SigGen using an asymmetric key that is protected in accordance with FCS_STG_EXT.2</selectable><selectable id="fcs_stg_ext.3.1_4" >An immediate application of the key for decrypting the protected data followed by a successful verification of the decrypted data with previously known information</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall protect the integrity of any encrypted<assignable>types of key material</assignable>by using<assignable>integrity protection mechanism</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST if "software-based" is selected in FCS_STG_EXT.1.</note>
            <aactivity level="component">
              The documentation of the product’s encryption key management should be detailed enough that, after reading, the evaluator will thoroughly understand the product’s key management and how it meets the requirements to ensure the keys are adequately protected. This documentation should include an essay and diagrams. This documentation may be marked as developer proprietary.
              <TSS>The evaluator shall examine the TSS and ensure that it contains a description of how the TOE protects the integrity of its keys.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <f-element id="fcs-stg-ext-3e2">
            <title>The TSF shall verify the integrity of the <selectables><selectable id="fcs_stg_ext.3.2_1" >digital signature</selectable><selectable id="fcs_stg_ext.3.2_2" >MAC</selectable> </selectables> of the stored key prior to use of the key.</title>
            <note role="application">This requirement is not applicable to derived keys that are not stored. It is not expected that a single key will be protected from corruption by multiple of these methods; however, a product may use one integrity-protection method for one type of key and a different method for other types of keys.</note>
          </f-element>
        </f-component>
      </section>
      <!--5.1.3 Class: User Data Protection (FDP)-->
      <section id="fdp" title="Class: User Data Protection (FDP)">
        <ext-comp-def title="Key Import" fam-id="FDP_ITC_EXT">
          <fam-behavior>This family defines requirements for importing cryptographic keys and credentials into the TOE.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Trusted Execution Environment" fam-id="FDP_TEE_EXT">
          <fam-behavior>This family defines requirements for Trusted Execution Environments implemented by the TOE for the use of tenant software.</fam-behavior>
        </ext-comp-def>
        <!--FDP_ITC_EXT.1 Key/Credential Import-->
        <f-component cc-id="fdp_itc_ext.1" id="sfr-fdp-itc-ext-1" name="Key/Credential Import" status="sel-based">
          <depends on-sel="sel-fcs-stg-ext-1e2-import"/>
          <comp-lev>requires the TSF to implement one or more means for importing keys and credentials into the TOE, which are not addressed by the FDP_ITC component.</comp-lev>
          <dependencies><h:br/>FCS_COP.1 Cryptographic Operation<h:br/>FCS_STG_EXT.1 Key Storage Encryption<h:br/>FTP_ITC_EXT.1 Trusted Channel Communications<h:br/>FTP_ITE_EXT.1 Encrypted Data Communications<h:br/>FTP_ITP_EXT.1 Physically Protected Channel</dependencies>
          <f-element id="fdp-itc-exxt-1e1">
            <title>The TSF shall support importing keys/key material using <selectables><selectable id="sel-fdp-itc-ext-1e1-phys" >physically protected channels as specified in FTP_ITP_EXT.1</selectable><selectable id="sel-fdp-itc-ext-1e1-buf" >encrypted data buffers as specified in FTP_ITE_EXT.1</selectable><selectable id="sel-fdp-itc-ext-1e1-chan" >cryptographically protected data channels as specified in FTP_ITC_EXT.1</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall support importing keys/key material using<assignable>import mechanism</assignable>.</title></ext-comp-def-title>
            <aactivity level="component">
              <TSS>The evaluator shall confirm the TSS contains descriptions of the supported methods the TSF uses to import keys and key material into the TOE. For each import method selected, the TSS shall describe integrity verification schemes employed.</TSS>
              <Guidance/>
              <Tests>For each supported import method selected in FDP_ITC_EXT.1.1 and for each supported integrity verification method selected in FDP_ITC_EXT.1.2. used by the selected import method, provide one key/credential with valid integrity credentials, one with invalid integrity credentials (e.g. hash). The operations with invalid integrity credentials must result in error. The operations with valid integrity credentials must accept the keys/credentials.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fdp-itc-ext-1e2">
            <title>The TSF shall verify the integrity of imported keys/key material using <selectables><selectable id="sel-fdp-itc-ext-1e2-hash" >cryptographic hash as specified in FCS_COP.1/Hash</selectable><selectable id="sel-fdp-itc-ext-1e2-mac" >keyed hash as specified in FCS_COP.1/KeyedHash</selectable><selectable id="sel-fdp-itc-ext-1e2-sk">integrity-providing encryption algorithm as specified in FCS_COP.1/SKC <selectables><selectable id="fdp_itc_ext.1.2_1" >AES-CCM</selectable><selectable id="fdp_itc_ext.1.2_2" >AES-GCM</selectable><selectable id="fdp_itc_ext.1.2_3" >AES-KW</selectable><selectable id="fdp_itc_ext.1.2_4" >AES-KWP</selectable></selectables> </selectable><selectable id="sel-fdp-itc-ext-1e2-sig" >digital signature as specified in FCS_COP.1/SigVer</selectable><selectable id="fdp_itc_ext.1.2_5" >integrity verification supported by FTP_ITC_EXT.1</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall verify the integrity of imported keys/key material using<assignable>integrity verification method</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST when "<h:i>importing keys/secrets into the TOE</h:i> " is selected in FCS_STG_EXT.1.<h:p/> The way the TSF checks the integrity of the keys depends on the method of importation. For example, the encrypted data channel may provide data integrity as part of its service.</note>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FDP_TEE_EXT.1 Trusted Execution Environment for Tenant Software-->
        <f-component cc-id="fdp_tee_ext.1" id="sfr-fdp-tee-ext-1" name="Trusted Execution Environment for Tenant Software" status="optional">
          <comp-lev>requires the TSF to implement a trusted execution environment for the use of tenant software.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fdp-tee-ext-1e1">
            <title>The TSF shall implement a trusted execution environment that conforms to the following standard: [ <h:i>Advanced Trusted Environment: OMTP TR1 v1.1</h:i>  ] and make this TEE available to tenant software.</title>
            <ext-comp-def-title><title>The TSF shall implement a trusted execution environment that conforms to the following standard:<assignable>Trusted Execution Environment standard</assignable>and make this TEE available to tenant software.</title></ext-comp-def-title>
            <note role="application">This SFR should be claimed in the ST if the TOE includes a trusted execution environment for the use of tenant software.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it describes the protections provided by the TOE's TEE implementation.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the steps required for tenant software to invoke the TEE.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      <!--5.1.4 Class: Identification and Authentication (FIA)-->
      <section id="fia" title="Class: Identification and Authentication (FIA)">
        <ext-comp-def title="Authentication Failure Handling" fam-id="FIA_AFL_EXT">
          <fam-behavior>This family defines requirements for the TOE’s behavior when repeated failed attempts to gain authorization to access TSF data occur.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Password Management" fam-id="FIA_PMG_EXT">
          <fam-behavior>This family defines requirements for the composition of administrator passwords.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Authentication Throttling" fam-id="FIA_TRT_EXT">
          <fam-behavior>This family defines requirements for the limiting administrator authentication attempts.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Administrator Identification and Authentication" fam-id="FIA_UIA_EXT">
          <fam-behavior>This family defines requirements for ensuring that access to the TSF is not granted to unauthenticated subjects.</fam-behavior>
        </ext-comp-def>
        <!--FIA_AFL_EXT.1 Authentication Failure Handling-->
        <f-component cc-id="fia_afl_ext.1" id="sfr-fia-afl-ext-1" name="Authentication Failure Handling" status="sel-based">
          <depends on-sel="sel-fmt-smr-1-admin"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <comp-lev>requires the TSF to monitor authorization attempts, including counting and limiting the number of attempts at failed or passed authorizations. This extended component permits considerably more flexibility for dealing with multiple authentication mechanisms than FIA_AFL.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Set authorization failure parameters</h:li> </h:ul> </management>
          <audit>If FAU_GEN.1 is included in the ST, then the following audit events should be considered:<h:ul><h:li>Administrator authentication failures.</h:li> </h:ul> </audit>
          <dependencies><h:br/>FCS_CKM.6 Timing and Event of Cryptographic Key Destruction<h:br/>FIA_SMF.1 Specification of Management Functions</dependencies>
          <f-element id="fia-afl-ext-1e1">
            <title/>
            <ext-comp-def-title><title>The TSF shall consider password and<assignable>other authentication mechanisms</assignable>as critical authentication mechanisms.</title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST if the "<h:i>Administrator</h:i> " role is selected in FMT_SMR.1, or if the "<h:i>Server-Class Platform, Basic</h:i> " or "<h:i>Server-Class Platform, Enhanced</h:i> " use cases are selected.<h:p/> If this SFR is included in the ST, then FCS_CKM.6 must also be claimed.<h:p/> This SFR specifies the actions to be taken in the event of multiple authentication failures.<h:p/> This requirement applies to both critical and non-critical authentication mechanisms. The difference between the two is that excessive authentication failures of critical authentication mechanisms<h:p/> If the TOE implements multiple Authentication Factor interfaces (for example, a DAR decryption interface, a lockscreen interface, an auxiliary boot mode interface), this element applies to all available interfaces. For example, a password is a critical authentication mechanism regardless of if it is being entered at the DAR decryption interface or at a lockscreen interface.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS describes that a value corresponding to the number of unsuccessful authentication attempts since the last successful authentication is kept for each Authentication Factor interface. The evaluator shall ensure that this description also includes if and how this value is maintained when the TOE loses power, either through a graceful powered off or an ungraceful loss of power. The evaluator shall ensure that if the value is not maintained, the interface is after another interface in the boot sequence for which the value is maintained.<h:p/> If the TOE supports multiple authentication mechanisms, the evaluator shall ensure that this description also includes how the unsuccessful authentication attempts for each mechanism selected in FIA_UAU.5.1 is handled. The evaluator shall verify that the TSS describes if each authentication mechanism utilizes its own counter or if multiple authentication mechanisms utilize a shared counter. If multiple authentication mechanisms utilize a shared counter, the evaluator shall verify that the TSS describes this interaction.<h:p/> The evaluator shall confirm that the TSS describes how the process used to determine if the authentication attempt was successful. The evaluator shall ensure that the counter would be updated even if power to the device is cut immediately following notifying the TOE user if the authentication attempt was successful or not.</TSS>
              <Guidance>The evaluator shall verify that the AGD describes how the Administrator configures the maximum number of unique unsuccessful authentication attempts, and the lockout time period, if applicable.<h:p/> The evaluator shall verify that the AGD describes how an Administrator may recover from authentication failure when another Administrator is locked out.</Guidance>
              <Tests>
                The evaluator shall configure the device with all authentication mechanisms selected in FIA_UAU.5.1, and configure a maximum number of unsuccessful authentication attempts for each mechanism. <h:p/>
                <testlist>
                  <test>The evaluator shall for each authentication mechanism make unsuccessful authentication attempts until the maximum is exceeded and verify that the number of failures corresponds to the configured maximum and that no further authentication attempts can be made using that mechanism.</test>
                  <test>[conditional] If the mechanism is critical or if all authentication mechanisms are exhausted, then if "<h:i>perform a wipe of all protected data</h:i> " is selected in FIA_AFL_EXT.1.5 the evaluator shall verify that the wipe is implemented.</test>
                  <test>[conditional] If the mechanism is critical or if all authentication mechanisms are exhausted, then if "<h:i>exclude the current User/Administrator from further authentication attempts</h:i> " is selected in FIA_AFL_EXT.1.5 the evaluator shall verify that the User/Administrator can make no further authentication attempts.</test>
                  <test>[conditional] If the mechanism is critical or if all authentication mechanisms are exhausted, then if "<h:i>exclude the current User/Administrator from further authentication attempts for a period of [assignment: greater than zero seconds] time</h:i> " is selected in FIA_AFL_EXT.1.5 the evaluator shall verify that the User/Administrator can make no further authentication attempts until the specified time period has expired.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fia-afl-ext-1e2">
            <title>The TSF shall detect when a configurable positive integer within <assignable>range of acceptable values for each authentication mechanism</assignable> of <selectables onlyone="yes"><selectable id="fia_afl_ext.1.2_2" >unique</selectable><selectable id="fia_afl_ext.1.2_3" >non-unique</selectable> </selectables> unsuccessful authentication attempts occur related to last successful authentication for each authentication mechanism.</title>
            <note role="application">The positive integer is configured according to<xref to="t-manfunc"/> in FMT_SMF.1.1.<h:p/> An unique authentication attempt is defined as any attempt to verify an authentication attempt in which the input is different from a previous attempt. "Unique" must be selected if the authentication system increments the counter only for unique unsuccessful authentication attempts. For example, if the same incorrect password is attempted twice the authentication system increments the counter once. "Non-unique" must be selected if the authentication system increments the counter for each unsuccessful authentication attempt, regardless of whether the input is unique. For example, if the same incorrect password is attempted twice the authentication system increments the counter twice.<h:p/> If the TOE supports multiple authentication mechanisms per FIA_UAU.5.1, this element applies to all authentication mechanisms. It is acceptable for each authentication mechanism to utilize an independent counter or for multiple authentication mechanisms to utilize a shared counter. The interaction between the authentication factors with regard to the authentication counter must be in accordance with FIA_UAU.5.2.<h:p/> If the TOE implements multiple Authentication Factor interfaces (for example, a DAR decryption interface, a lockscreen interface, an auxiliary boot mode interface), this element applies to all available interfaces. However, it is acceptable for each Authentication Factor interface to be configurable with a different number of unsuccessful authentication attempts.<h:p/> </note>
          </f-element>
          <f-element id="fia-afl-ext-1e3">
            <title/>
            <note role="application">The TOE may implement an Authentication Factor interface that precedes another Authentication Factor interface in the boot sequence (for example, a volume DAR decryption interface which precedes the lockscreen interface) before the user can access the GPCP. In this situation, because the user must successfully authenticate to the first interface to access the second, the number of unsuccessful authentication attempts need not be maintained for the second interface.</note>
          </f-element>
          <f-element id="fia-afl-ext-1e4">
            <title>When the defined number of unsuccessful authentication attempts has exceeded the maximum allowed for a given authentication mechanism, all future authentication attempts shall be limited to other available authentication mechanisms, unless the given mechanism is designated as a critical authentication mechanism.</title>
            <note role="application">See FIA_AFL_EXT.1.5 for exceeding the maximum failure threshold for critical authentication mechanisms.<h:p/> In accordance with FIA_AFL_EXT.1.3, this requirement also applies after the TOE is powered off and powered back on.</note>
          </f-element>
          <f-element id="fia-afl-ext-1e5">
            <title>When the defined number of unsuccessful authentication attempts for the last available authentication mechanism or a critical authentication mechanism has been surpassed, the TSF shall <selectables linebreak="yes"><selectable id="fia_afl_ext.1.5_1" >perform a wipe of all protected data</selectable><selectable id="fia_afl_ext.1.5_2" >exclude the current User/Administrator from further authentication attempts</selectable><selectable id="fia_afl_ext.1.5_3">exclude the current User/Administrator from further authentication attempts for a period of <assignable>greater than 60seconds</assignable> time</selectable> </selectables>.</title>
            <note role="application">Wipe is performed in accordance with FCS_CKM.6. Protected data is all non-TSF data, including all user or enterprise data. Some or all of this data may be considered sensitive data as well.<h:p/> If the TOE implements multiple Authentication Factor interfaces (for example, a DAR decryption interface, a lockscreen interface, an auxiliary boot mode interface), this element applies to all available interfaces.</note>
          </f-element>
          <f-element id="fia-afl-ext-1e6">
            <title>The TSF shall increment the number of unsuccessful authentication attempts prior to notifying the user that the authentication was unsuccessful.</title>
            <note role="application">This requirement is to ensure that if power is cut to the device directly after an authentication attempt, the counter will be incremented to reflect that attempt.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Failed attempt at Administrator authentication.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FIA_PMG_EXT.1 Password Management-->
        <f-component cc-id="fia_pmg_ext.1" id="sfr-fia-pmg-ext-1" name="Password Management" status="sel-based">
          <depends on-sel="sel-fmt-smr-1-admin"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <comp-lev>requires the TSF to support passwords with varying composition and length requirements.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Ability to configure password composition and length requirements for authorization of Administrators.</h:li> <h:li>Ability to manage authentication methods and change default authorization factors</h:li> </h:ul> </management>
          <dependencies>No other components.</dependencies>
          <f-element id="fia-pmg-ext-1e1">
            <title>The TSF shall support the following for the Password Authentication Factor:  <h:ol><h:li>Passwords shall be able to be composed of any combination of <selectables><selectable id="fia_pmg_ext.1.1_1" >upper and lower case letters</selectable><selectable id="fia_pmg_ext.1.1_3" ><assignable>a character set of at least 52 characters</assignable></selectable> </selectables> , numbers, and special characters: <selectables><selectable id="fia_pmg_ext.1.1_4" >"!"</selectable><selectable id="fia_pmg_ext.1.1_5" >"@"</selectable><selectable id="fia_pmg_ext.1.1_6" >"#"</selectable><selectable id="fia_pmg_ext.1.1_7" >"$"</selectable><selectable id="fia_pmg_ext.1.1_8" >"%"</selectable><selectable id="fia_pmg_ext.1.1_9" >"^"</selectable><selectable id="fia_pmg_ext.1.1_10" >"&amp;"</selectable><selectable id="fia_pmg_ext.1.1_11" >"*"</selectable><selectable id="fia_pmg_ext.1.1_12" >"("</selectable><selectable id="fia_pmg_ext.1.1_13" >")"</selectable><selectable id="fia_pmg_ext.1.1_15" ><assignable>other characters</assignable></selectable> </selectables> </h:li> <h:li>Password length of at least <assignable>an integer greater than or equal to 14</assignable> characters shall be supported.</h:li></h:ol></title>
            <ext-comp-def-title><title>The TSF shall support the following for the Password Authentication Factor:<h:ol type="1"><h:li>Passwords shall be able to be composed of any combination of<assignable>characters sets</assignable>, numbers, and special characters:<assignable>special characters</assignable>.</h:li><h:li>Password length of at least<assignable>an integer greater than or equal to 14</assignable>characters shall be supported.</h:li></h:ol></title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST if the "<h:i>Administrator</h:i> " role is selected in FMT_SMR.1, or if the "<h:i>Server-Class Platform, Basic</h:i> " or "<h:i>Server-Class Platform, Enhanced</h:i> " use cases are selected.<h:p/> While some corporate policies require passwords of 14 characters or better, the use of a Root Encryption Key for DAR protection and key storage protection and the anti-hammer requirement (FIA_TRT_EXT.1) addresses the threat of attackers with physical access using much smaller and less complex passwords.<h:p/> The ST Author selects the character set: either the upper and lower case Basic Latin letters or another assigned character set containing at least 52 characters. The assigned character set must be well defined: either according to an international encoding standard (such as Unicode) or defined in the assignment by the ST Author. The ST Author also selects the special characters that are supported by TOE; they may optionally list additional special characters supported using the assignment.</note>
            <aactivity level="component">
              <TSS/>
              <Guidance>The evaluator shall examine the AGD to determine that it provides guidance to security administrators on the composition of strong passwords, and that it provides instructions on setting the minimum password length. The evaluator shall also perform the following tests. Note that one or more of these tests can be performed with a single test case.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>The evaluator shall compose passwords that either meet the requirements, or fail to meet the requirements, in some way. For each password, the evaluator shall verify that the TOE supports the password. While the evaluator is not required (nor is it feasible) to test all possible compositions of passwords, the evaluator shall ensure that all characters, rule characteristics, and a minimum length listed in the requirement are supported, and justify the subset of those characters chosen for testing.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FIA_TRT_EXT.1 Authentication Throttling-->
        <f-component cc-id="fia_trt_ext.1" id="sfr-fia-trt-ext-1" name="Authentication Throttling" status="optional">
          <comp-lev>requires that the TSF enforce a limit on authentication attempts.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Ability to configure an authentication throttling policy for the TOE.</h:li> </h:ul> </management>
          <audit>The following should be considered for auditable events if FAU_GEN.1 is included in the ST:<h:ul><h:li>Authentication throttling is triggered.</h:li> </h:ul> </audit>
          <dependencies><h:br/>FIA_UAU.5 Multiple Authentication Mechanisms</dependencies>
          <f-element id="fia-trt-ext-1e1">
            <title>The TSF shall limit user authentication attempts by <selectables><selectable id="fia_trt_ext.1.1_1" >preventing authentication via an external port</selectable><selectable id="fia_trt_ext.1.1_2" >enforcing a delay between incorrect authentication attempts</selectable> </selectables> for all authentication mechanisms selected in FIA_UAU.5.1.</title>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes the method by which authentication attempts are not able to be automated. The evaluator shall ensure that the TSS describes either how the TSF disables authentication via external interfaces (other than the ordinary user interface) or how authentication attempts are delayed in order to slow automated entry and shall ensure that no more than 10 attempts can be attempted per 500 milliseconds for all authentication mechanisms selected in FIA_UAU.5.1.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <f-element id="fia-trt-ext-1e2">
            <title>The minimum delay between incorrect authentication attempts shall be such that no more than 10 attempts can be attempted per 500 milliseconds.</title>
            <note role="application">This SFR should be included in the ST if the TOE implements a mechanism for limiting the number or frequency of Administrator authentication attempts.<h:p/> The authentication throttling applies to all authentication mechanisms selected in FIA_UAU.5.1. The user authentication attempts in this requirement are attempts to guess the Authentication Factor. The developer can implement the timing of the delays in the requirements using unequal or equal timing of delays. The minimum delay specified in this requirement provides defense against brute forcing.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Authentication throttling triggered.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FIA_UAU.5 Multiple Authentication Mechanisms-->
        <f-component cc-id="fia_uau.5" id="sfr-fia-uau-5" name="Multiple Authentication Mechanisms" status="sel-based">
          <depends on-sel="sel-fmt-smr-1-admin"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <f-element id="fia-uau-5e1">
            <title>The TSF shall provide [  <h:i>password and <selectables><selectable id="sel-fia-uau-5-x509" >X.509 certificate-based authentication</selectable><selectable id="sel-fia-uau-5-ssh" >SSH-based authentication</selectable><selectable id="fia_uau.5.1_1" >biometric authentication</selectable><selectable id="fia_uau.5.1_2" exclusive="yes">no other authentication mechanism</selectable> </selectables> </h:i>  ] to support user authentication.</title>
            <note role="application">This SFR is included in the ST if the "<h:i>Administrator</h:i> " role is selected in FMT_SMR.1, or if the "<h:i>Server-Class Platform, Basic</h:i> " or "<h:i>Server-Class Platform, Enhanced</h:i> " use cases are selected.<h:p/> A "user" in the context of this SFR is an Administrator.<h:p/> The TSF must support a Password Authentication Factor and may optionally implement a biometric authentication factor.<h:p/> The Password Authentication Factor is configured according to FIA_PMG_EXT.1.<h:p/> If "<h:i>X.509 certificate-based authentication</h:i> " is selected, then the ST must include FIA_X509_EXT.1 and FIA_X509_EXT.2 from<xref to="pkg-x509"/> .<h:p/> The ST Author should select "<h:i>SSH-based authentication</h:i> " if the TOE supports SSH-based authentication, whether public key-, password-, or certificate-based. In this case, the ST claims the<xref to="pkg-ssh"/> .</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS describes each mechanism provided to support user authentication and the rules describing how the authentication mechanism(s) provide authentication.<h:p/> Specifically, for all authentication mechanisms specified in FIA_UAU.5.1, the evaluator shall ensure that the TSS describes the rules as to how each authentication mechanism is used. Example rules are how the authentication mechanism authenticates the user (i.e. how does the TSF verify that the correct password or biometric sample was entered), the result of a successful authentication (i.e. is the user input used to derive or unlock a key) and which authentication mechanism can be used at which authentication factor interfaces (i.e. if there are times, for example, after a reboot, that only specific authentication mechanisms can be used). If multiple Biometric Authentication Factors (BAF) are supported per FIA_UAU.5.1, the interaction between the BAFs must be described. For example, whether the multiple BAFs can be enabled at the same time.</TSS>
              <Guidance>The evaluator shall verify that configuration information for each authentication mechanism is addressed in the AGD guidance.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>For each authentication mechanism selected in FIA_UAU.5.1, the evaluator shall enable that mechanism and verify that it can be used to authenticate the user at the specified authentication factor interfaces.</test>
                  <test>For each authentication mechanism rule, the evaluator shall ensure that the authentication mechanism behaves accordingly.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fia-uau-5e2">
            <title>The TSF shall authenticate any user's claimed identity according to the <assignable>rules describing how the multiple authentication mechanisms provide authentication</assignable>.</title>
            <note role="application">Rules regarding how the authentication factors interact in terms of unsuccessful authentication are covered in FIA_AFL_EXT.1.</note>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FIA_UAU.7 Protected Authentication Feedback-->
        <f-component cc-id="fia_uau.7" id="sfr-fia-uau-7" name="Protected Authentication Feedback" status="sel-based">
          <depends on-sel="sel-fmt-smr-1-admin"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <f-element id="fia-uau-7e1">
            <title>The TSF shall provide only [ <h:i>obscured feedback</h:i>  ] to the user while the authentication is in progress.</title>
            <note role="application">This SFR is included in the ST if the "<h:i>Administrator</h:i> " role is selected in FMT_SMR.1, or if the "<h:i>Server-Class Platform, Basic</h:i> " or "<h:i>Server-Class Platform, Enhanced</h:i> " use cases are selected.<h:p/> This requirement applies to all authentication mechanisms specified in FIA_UAU.5.1 that provide feedback to a user or Administrator during authentication.<h:p/> For authentication mechanisms that require the user or Administrator to enter a password or PIN, the TSF may briefly (1 second or less) display each character or provide an option to allow the user to unmask the user input; however, the user input must be obscured by default.<h:p/> If a BAF is selected in FIA_UAU.5.1, the TSF must not display sensitive information regarding the biometric that could aid an adversary in identifying or spoofing the respective biometric characteristics of a given human user. While it is true that biometric samples, by themselves, are not secret, the analysis performed by the respective biometric algorithms, as well as output data from these biometric algorithms, is considered sensitive and must be kept secret. Where applicable, the TSF must not reveal or make public the reasons for authentication failure.<h:p/> In the cases of SSH- or X.509-based authentication, the TSF must likewise not not display sensitive information regarding the authentication factors that could aid an adversary in spoofing or circumventing the authentication protocols.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS describes the means of obscuring the authentication information for all authentication methods specified in FIA_UAU.5.1.</TSS>
              <Guidance>The evaluator shall verify that any configuration of this requirement is addressed in the AGD guidance and that user authentication input is obscured by default.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator shall enter passwords on the device, including at least the Password Authentication Factor at lockscreen, and verify that the password is not displayed on the device.</test>
                  <test>[conditional] For each Biometric Authentication Factor (BAF) selected in FIA_UAU.5.1, the evaluator shall authenticate by producing a biometric sample at lockscreen. As the biometric algorithms are performed, the evaluator shall verify that sensitive images, audio, or other information identifying the user are kept secret and are not revealed to the user. Additionally, the evaluator shall produce a biometric sample that fails to authenticate and verify that the reason(s) for authentication failure (user mismatch, low sample quality, etc.) are not revealed to the user. It is acceptable for the BAF to state that it was unable to physically read the biometric sample, for example, if the sensor is unclean or the biometric sample was removed too quickly. However, specifics regarding why the presented biometric sample failed authentication shall not be revealed to the user. [conditional] For each SSH- or X.509-based authentication mechanism, the evaluator shall examine whether the TSF displays sensitive information during the authentication process for both successful and failed authentication attempts.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FIA_UIA_EXT.1 Administrator Identification and Authentication-->
        <f-component cc-id="fia_uia_ext.1" id="sfr-fia-uia-ext-1" name="Administrator Identification and Authentication" status="sel-based">
          <depends on-sel="sel-fmt-smr-1-admin"/>
          <depends on-use="uc-server-secureenv"/>
          <depends on-use="uc-server-enhanced"/>
          <comp-lev>requires the TSF to ensure that all subjects attempting to perform TSF-mediated actions areauthenticated prior to authorizing these actions to be performed.</comp-lev>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ol type="a"><h:li>All use of the authentication mechanism.</h:li> </h:ol> </audit>
          <dependencies><h:br/>FIA_UAU.5 Multiple Authentication Mechanisms</dependencies>
          <f-element id="fia-uia-ext-1e1">
            <title>The TSF shall require Administrators to be successfullyauthenticated using one of the methods in FIA_UAU.5 before allowing any TSF-mediated management function to be performed by that Administrator.</title>
            <note role="application">This SFR is included in the ST if the "<h:i>Administrator</h:i> " role is selected in FMT_SMR.1, or if the "<h:i>Server-Class Platform, Basic</h:i> " or "<h:i>Server-Class Platform, Enhanced</h:i> " use cases are selected.<h:p/> Ordinary unprivileged users of the platform need not authenticate to the platform, though they may well have to authenticate themselves to tenant software such as an Operating System.<h:p/> The TSF-mediated management functions are listed in the management functions table (<xref to="t-manfunc"/> ) in FMT_SMF.1.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to determine that it describes the logon process for each logon method (local, remote (HTTPS, SSH, etc.)) supported for the platform. This description shall contain information pertaining to the credentials allowed/used, any protocol transactions that take place, and what constitutes a “successful logon.”</TSS>
              <Guidance>The evaluator shall examine the AGD to determine that any necessary preparatory steps (e.g., establishing credential material such as pre-shared keys, tunnels, certificates) to logging in are described. For each supported login method, the evaluator shall ensure the AGD provides clear instructions for successfully logging on. If configuration is necessary to ensure the services provided before login are limited, the evaluator shall determine that the AGD provides sufficient instruction on limiting the allowed services.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>All use of the identification and authentication mechanism.</audit-event-descr>
            <audit-event-info>Provided user identity, origin of the attempt (e.g. console, remote IP address).</audit-event-info>
          </audit-event>
        </f-component>
      </section>
      <!--5.1.5 Class: Security Management (FMT)-->
      <section id="fmt" title="Class: Security Management (FMT)">
        <ext-comp-def title="Secure by Default" fam-id="FMT_CFG_EXT">
          <fam-behavior>This family defines requirements for secure by default configuration of the TOE.</fam-behavior>
        </ext-comp-def>
        <!--FMT_CFG_EXT.1 Secure by Default Configuration-->
        <f-component cc-id="fmt_cfg_ext.1" id="sfr-fmt-cfg-ext-1" name="Secure by Default Configuration">
          <comp-lev>requires that default Administrator credentials be changed immediately after first use.</comp-lev>
          <dependencies><h:br/>FIA_UAU.1 Timing of Authentication<h:br/>FMT_SMR.1 Security Roles</dependencies>
          <f-element id="fmt-cfg-ext-1e1">
            <title>The TSF shall enforce that Administrator credentials be changed immediately after first use when configured with default Administrator credentials or with no Administrator credentials.</title>
            <note role="application">Default credentials are credentials (e.g., passwords, keys) that are pre-installed (without user interaction) onto the platform, generally by the manufacturer, whether they are default values or randomly generated. This requirement applies only to credentials used by an Administrator for logging in to the TOE, and not to other platform credentials that might come pre-installed.<h:p/> </note>
            <aactivity level="component">
              <TSS>The evaluator shall check the TSS to determine whether the platform comes pre-installed with default Administrator credentials, or does not require credentials for initial Administrator access.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the process for replacing or specifying Administrator credentials on first use.</Guidance>
              <Tests>
                If the platform uses default Administrator credentials or no Administrator credentials on first use the evaluator shall run the following tests:
                <testlist>
                  <test>The evaluator shall reset the platform to factory state and restart the platform to verify that only the functionality required to set new Administrator credentials is available immediately after Administrator login.</test>
                  <test>The evaluator shall log in to the platform as Administrator using the default credentials, establish new credentials, and verify that the original default credentials no longer provide Administrative access to the platform.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FMT_LIM.1 Limited Capabilities-->
        <f-component cc-id="fmt_lim.1" id="sfr-fmt-lim-1" name="Limited Capabilities">
          <f-element id="fmt-lim-1e1">
            <title>The TSF shall limit its capabilities so that in conjunction with “Limited availability (FMT_LIM.2)” the following policy is enforced [ <h:i>Deploying test and debug features after TOE delivery does not allow user data of the TOE to be disclosed or manipulated, TSF data to be disclosed or manipulated, firmware to be reconstructed such that information about construction of TSF may enable other attacks.</h:i>  ]</title>
            <note role="application">The GPCP may implement debug and test functions to support debug and testing after production. The TOE shall prevent abuse of such functionality after the production test phase. The protection can be achieved either by limiting the capability of the implemented functions or by limiting their availability. Limited capability prevents misuse or compromise of TSF data or user data, or the characterization of security functions and security services, even if the function can be activated, while limited availability prevents access to the functionality after testing. In most cases, both types of limitations are implemented to ensure the required protection.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to determine that it identifies all the accessible test and debug ports and interfaces of the TOE and affirms that they do not allow user data of the TOE to be disclosed or manipulated, TSF data to be disclosed or manipulated, firmware to be reconstructed such that information about construction of TSF may enable other attacks. The evaluator shall search publicly documented materials to verify the completeness of the information.</TSS>
              <Guidance>There are no additional Guidance evaluation activities for this component.</Guidance>
              <Tests>
                The evaluator shall attempt to utilize test and debug access and verify that it does not allow user data of the TOE to be disclosed or manipulated, TSF data to be disclosed or manipulated, or firmware to be reconstructed such that information about the construction of TSF may enable other attacks. <h:p/>
                <testlist>
                  For JTAG interfaces, the evaluator shall perform the following tests:
                  <test>The evaluator shall attempt to access the debug port without authenticating as an Administrator. The attempt should fail.</test>
                  <test>The evaluator shall authenticate as an Administrator and then attempt to access the debug port. The attempt should succeed.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FMT_LIM.1 Limited Availability-->
        <f-component cc-id="fmt_lim.1" id="sfr-fmt-lim-2" name="Limited Availability">
          <f-element id="fmt-lim-2e1">
            <title>The TSF shall be designed in a manner that limits its availability so that in conjunction with “Limited capabilities (FMT_LIM.1)” the following policy is enforced [ <h:i>Deploying test and debug features after TOE Delivery does not allow user data of the TOE to be disclosed or manipulated, TSF data to be disclosed or manipulated, firmware to be reconstructed and no substantial information about construction of TSF to be gathered which may enable other attacks.</h:i>  ]</title>
            <aactivity level="component">
              <no-tests>Evaluation activities for FMT_LIM.2 are encompassed within those for FMT_LIM.2.</no-tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FMT_MOF.1 Management of Security Functions Behavior-->
        <f-component cc-id="fmt_mof.1" id="sfr-fmt-mof-1" name="Management of Security Functions Behavior">
          <f-element id="fmt-mof-1e1">
            <title>The TSF shall restrict the ability to [ <h:i>determine the behaviour of</h:i>  ] the functions [ <h:i>listed in<xref to="t-manfunc"/></h:i>  ] to [ <h:i>the roles indicated in<xref to="t-manfunc"/></h:i>  ].</title>
            <note role="application">There are two roles defined in this PP: Administrator and User (see FIA_SMR.1). Administrators can perform most management functions on the platform, and only Administrators are required to authenticate themselves to the platform.<h:p/> Users have a limited ability to select responses to certain events as specified in the Management Functions table in FMT_SMF.1.<h:p/> </note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes those management functions that may be performed by the Administrator, and those that can be performed by ordinary users. The TSS also describes any functionality that is affected by administrator-configured policy and how. This activity will be performed in conjunction with FMT_SMF.1.</TSS>
              <Guidance/>
              <Tests>Testing of this SFR is covered in the tests for FMT_SMF.1.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FMT_SMF.1 Specification of Management Functions-->
        <f-component cc-id="fmt_smf.1" id="sfr-fmt-smf-1" name="Specification of Management Functions">
          <f-element id="fmt-smf-est-1e1">
            <title>The TSF shall be capable of performing the following management functions: [ <h:p/> <h:b><ctr id="t-manfunc" ctr-type="Table">: Management Functions</ctr></h:b> <h:p/>  Status Markers:  M - Mandatory  O - Optional/Selectable/Conditional  X - Not permitted <h:p/>
			<h:br/><h:br/>
			<h:b><ctr id="undefined" ctr-type="Table">: Management Functions</ctr></h:b>
			<h:br/><h:br/>
			Status Markers:<h:br/> O - Indicates that this function is optional for this role<h:br/>M - Indicates that this function is mandatory for this role.<h:br/>X - Indicates that this function is not permitted for this role<h:br/><h:br/>
		<management-function-set default="O"><manager cid="A">Admin</manager><manager cid="U">User</manager>
				<management-function id="mf-admin-platform">
					<text>Ability to administer the platform <selectables><selectable id="fmt_smf.1.1_1" >locally</selectable><selectable id="sel-smf-remote-admin" >remotely</selectable><selectable id="fmt_smf.1.1_2" exclusive="yes">not at all</selectable> </selectables> </text>
					<M ref="A"/><X ref="U"/>
					<app-note>Administration is considered “local” if the Administrator is physically present at the GPCP.<h:p/> Administration is considered “remote” if communications between the Administrator and GPCP is over a network.<h:p/> "<h:i>Not at all</h:i> " is the proper selection for Function<xref to="mf-admin-platform"/> only in the case where the GPCP is incapable of being Administered at all.<h:p/> If "<h:i>remotely</h:i> " is selected, then FTP_TRP.1 must be claimed in the ST and Function<xref to="mf-init-channel"/> must be selected.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-audit-admin">
					<text>Ability to configure and manage the audit functionality and audit data.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FAU_GEN.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-audit-server">
					<text>Ability to configure name/address of audit/logging server to which to send audit/logging records.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This function must be claimed if FAU_STG.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-audit-review">
					<text>Ability to review audit records.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FAU_SAR.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-init-channel">
					<text>Ability to initiate a trusted channel for remote administration.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FTP_TRP.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-auth-fail-params">
					<text>Ability to set parameters for allowable number of authentication failures.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FIA_AFL_EXT.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-pwd">
					<text>Ability to configure password length and complexity.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FIA_PMG_EXT.1 is claimed in the ST.<h:p/> If password length and complexity are not configurable, then the Administrator Option should be denied.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-throttling">
					<text>Ability to configure authentication throttling policy.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FIA_TRT_EXT.1 is claimed in the ST.<h:p/> If authentication throttling policy is not configurable, then the Administrator Option should be denied.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-auth-methods">
					<text>Ability to manage authentication methods and change default authorization factors.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FIA_UAU.5 is claimed in the ST.<h:p/> If authentication methods are not configurable, then the Administrator Option should be denied.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-revocation-checking">
					<text>Ability to configure of certificate revocation checking methods.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This function must be claimed if FIA_X509_EXT.1 is claimed in the ST (i.e., the TOE claims conformance to<xref to="pkg-x509"/> .<h:p/> If TOE does not support configuration of certificate revocation checking methods, then the Administrator option should be denied.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-revocation-actions">
					<text>Ability to configure TSF behavior when certificate revocation status cannot be determined.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This function must be claimed if FIA_X509_EXT.2 is claimed in the ST (i.e., the TOE claims conformance to<xref to="pkg-x509"/> . and the claims made in the SFR indicate that the administrator is allowed to configure how the TSF treats a certificate with undetermined revocation status.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-integrity-failure-actions">
					<text>Ability to configure default action to take on integrity failure.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FPT_ROT_EXT.2 or FPT_ROT_EXT.3 are claimed in the ST and "<h:i>in accordance with Administrator-configurable policy</h:i> " is selected in FPT_ROT_EXT.2.2 or FPT_ROT_EXT.3.2.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-config-default-update-failure-actions">
					<text>Ability to configure default action to take on update failure.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FPT_TUD_EXT.2 or FPT_TUD_EXT.3 is claimed in the ST and "<h:i>in accordance with Administrator-configurable policy</h:i> " is selected in FPT_TUD_EXT.2.5 or FPT_TUD_EXT.3.4.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-initiate-update">
					<text>Ability to initiate the update process.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if something other than "<h:i>no mechanism for platform firmware update</h:i> " is selected in FPT_TUD_EXT.1.1.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-determine-update-failure-action">
					<text>Ability to determine the action to take on update failure.</text>
					<O ref="A"/><O ref="U"/>
					<app-note>This Function must be claimed if FPT_TUD_EXT.2 or FPT_TUD_EXT.3 are claimed in the ST.<h:p/> The Administrator Option must be selected if "<h:i>by express determination of an [Administrator]</h:i> " is selected in FPT_TUD_EXT.2.5 or FPT_TUD_EXT.3.4.<h:p/> The User Option must be selected if "<h:i>by express determination of an [User]</h:i> " is selected in FPT_TUD_EXT.2.5 or FPT_TUD_EXT.3.4.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-determine-integrity-failure-action">
					<text>Ability to determine the action to take on integrity check failure.</text>
					<O ref="A"/><O ref="U"/>
					<app-note>This Function must be claimed if FPT_ROT_EXT.2 or FPT_ROT_EXT.3 is claimed in the ST.<h:p/> The Administrator Option must be selected if "<h:i>by express determination of an [Administrator]</h:i> " is selected in FPT_ROT_EXT.2.2 or FPT_ROT_EXT.3.2.<h:p/> The User Option must be selected if "<h:i>by express determination of an [User]</h:i> " is selected in FPT_ROT_EXT.2.2 or FPT_ROT_EXT.3.2.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			
				<management-function id="mf-key-import-export">
					<text>Ability to manage import and export of keys/secrets to and from protected storage.</text>
					<O ref="A"/><X ref="U"/>
					<app-note>This Function must be claimed if FCS_STG_EXT.1 is claimed in the ST.</app-note>
				<aactivity>
					
					<TSS></TSS>
					<Guidance></Guidance>
					<Tests></Tests>
				</aactivity>
			
				</management-function>
			</management-function-set></title>
            <note role="application">These functions become Mandatory or Selectable as indicated in the Notes.<h:p/> If "<h:i>not at all</h:i> " is selected in Function<xref to="mf-admin-platform"/> , then no other management Management Functions may be selected.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it describes each management function and its associated actions.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes how the Administrator performs each management function that the ST claims the TOE supports.<h:p/> The evaluator shall verify for each claimed management function that the guidance is sufficiently detailed to allow the function to be performed.</Guidance>
              <Tests>The evaluator shall test each management function included in the ST to demonstrate that the function can be performed only by the roles indicated in <xref to="t-manfunc"/> and the result of the function is demonstrated.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FMT_SMR.1 Security Roles-->
        <f-component cc-id="fmt_smr.1" id="sfr-fmt-smr-1" name="Security Roles">
          <f-element id="fmt-smr-1e1">
            <title>The TSF shall maintain the roles [ <h:i>User</h:i>  and <selectables><selectable id="sel-fmt-smr-1-admin" >Administrator</selectable><selectable id="fmt_smr.1.1_1" exclusive="yes">no other roles</selectable> </selectables> ].</title>
            <aactivity level="component">
              <no-tests>Documentation and testing for roles is covered in the Evaluation Activities for FMT_SMF.1</no-tests>
            </aactivity>
          </f-element>
          <f-element id="fmt-smr-1e2">
            <title>The TSF shall be able to associate users with roles.</title>
            <note role="application">If "<h:i>Administrator</h:i> " is selected, then the user authentication SFRs in FIA must be claimed.<h:p/> A User is a human who interacts with the GPCP through a user interface. Users do not authenticate themselves to the GPCP, though they may be authenticated by tenant software. The User role is considered to exist even if no humans normally interact with a GPCP.<h:p/> An Administrator is a privileged user that must be authenticated by the GPCP in order to administer the GPCP. This role is distinct from OS or VS administrators, who are may are authenticated to tenant software and are considered to be Users in the context of the GPCP.</note>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      <!--5.1.6 Class: Protection of the TSF (FPT)-->
      <section id="fpt" title="Class: Protection of the TSF (FPT)">
        <ext-comp-def title="Debug Port Access" fam-id="FPT_JTA_EXT">
          <fam-behavior>This family defines requirements for access to debug ports during normal operation.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Platform Integrity" fam-id="FPT_ROT_EXT">
          <fam-behavior>This family defines requirements for platform firmware and hardware integrity.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Protection of Platform Firmware" fam-id="FPT_PPF_EXT">
          <fam-behavior>This family defines requirements for protecting platform firmware from unauthorized update.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Platform Firmware Recovery" fam-id="FPT_RVR_EXT">
          <fam-behavior>This family defines requirements for recovering from a firmware integrity failure.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Platform Firmware Update" fam-id="FPT_TUD_EXT">
          <fam-behavior>This family defines requirements for updating platform firmware.</fam-behavior>
        </ext-comp-def>
        <!--FPT_FLS.1 Failure with Preservation of Secure State-->
        <f-component cc-id="fpt_fls.1" id="fpt-fls-1" name="Failure with Preservation of Secure State" status="sel-based">
          <depends on-incl="sfr-fcs-ckm-1-skg"/>
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-incl="sfr-fcs-otv-ext-1"/>
          <depends on-incl="sfr-fcs-ckm-1-akg"/>
          <depends on-incl="sfr-fcs-cop-1-siggen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-ctr-dirgen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-fb-dirgen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-dpi-dirgen"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fel-pres-sec-state">
            <title>The TSF shall preserve a secure state when the following types of failures occur: [ <h:i>DRBG self-test failure</h:i>  ].</title>
            <note role="application">The intent of this requirement is to ensure that cryptographic services requiring random bit generation cannot be performed if a failure of a self-test defined in FPT_TST.1 occurs.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSF describes how the TOE enters an error state in the event of a DRBG self-test failure.</TSS>
              <Guidance>The evaluator shall verify that the guidance documentation describes the error state that results from a DRBG self-test failure and the actions that a user or administrator should take in response to attempt to resolve the error state.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Failure of the TSF.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_JTA_EXT.1 JTAG/Debug Port Access-->
        <f-component cc-id="fpt_jta_ext.1" id="sfr-fpt-jta-ext-1" name="JTAG/Debug Port Access">
          <comp-lev>requires that debug ports be accessible only to authorized Administrators.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-jta-ext-1e1">
            <title>The TSF shall allow access to JTAG or other debug ports only to an authorized Administrator through platform firmware or through assertion of physical presence.</title>
            <note role="application">This requirement means that JTAG ports may not be accessible to tenant software.<h:p/> For use cases that include the threat T.PHYSICAL, FPT_JTA_EXT.2 should also be included in the ST.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to determine how access to the JTAG or debug ports is denied to tenant software.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes how Administrators assert physical presence to the TSF.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator shall attempt to access the debug port without authenticating as an Administrator. The attempt should fail.</test>
                  <test>The evaluator shall authenticate as an Administrator and then attempt to access the debug port. The attempt should succeed.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_JTA_EXT.2 JTAG/Debug Port Disablement-->
        <f-component cc-id="fpt_jta_ext.2" id="sfr-fpt-jta-ext-2" name="JTAG/Debug Port Disablement" status="sel-based">
          <depends on-use="uc-server-enhanced"/>
          <depends on-use="uc-client-portable-enhanced"/>
          <depends on-use="uc-csfc-eud"/>
          <depends on-use="uc-tactical-eud"/>
          <comp-lev>requires that debug ports be disabled.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-jta-ext-2e1">
            <title>The TSF shall <selectables onlyone="yes"><selectable id="fpt_jta_ext.2.1_1" >disable access through hardware</selectable><selectable id="fpt_jta_ext.2.1_2" >control access by a signing key</selectable> </selectables> to JTAG or other debug interfaces.</title>
            <note role="application">This requirement should be included in the ST for use cases that include the threat T.PHYSICAL.</note>
            <aactivity level="component">
              <TSS>If "<h:i>disable access through hardware</h:i> " is selected:<h:br/>The evaluator shall examine the TSS to determine the location of the JTAG ports on the TSF, to include the order of the ports (i.e. Data In, Data Out, Clock, etc.).<h:p/> If "<h:i>control access by a signing key</h:i> " is selected:<h:br/>The evaluator shall examine the TSS to determine how access to the JTAG is controlled by a signing key. The evaluator shall examine the TSS to determine when the JTAG can be accessed, i.e. what has the access to the signing key.</TSS>
              <Guidance/>
              <Tests>The following test requires the developer to provide access to a test platform that provides the evaluator with chip level access. <h:p/>[conditional] If " <h:i>disable access through hardware</h:i>" is selected: <h:br/><h:br/>The evaluator shall connect a packet analyzer to the JTAG ports. The evaluator shall query the JTAG port for its device ID and confirm that the device ID cannot be retrieved.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_PHP.1 Passive detection of physical attack-->
        <f-component cc-id="fpt_php.1" id="sfr-fpt-php-1" name="Passive detection of physical attack" status="sel-based">
          <depends on-use="uc-client-portable-enhanced"/>
          <f-element id="fpt-php-1e1">
            <title>The TSF shall provide unambiguous detection of physical tampering that can compromise the TSF.</title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure it describes the methods used by the TOE to detect physical tampering and how tampering is indicated when detected.</TSS>
              <Guidance>The evaluator shall ensure that the AGD describes how the TOE indicates to users and Administrators that it has detected tampering.</Guidance>
              <Tests>The evaluator shall verify that attempts to open the TOE enclosure result in indications consistent with the operational guidance. Such indications could include damaged tamper seals, logged events, or other physical or electronic manifestations.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-php-1e2">
            <title>The TSF shall provide the capability to determine whether physical tampering with the TSF's devices or TSF's elements has occurred.</title>
            <note role="application">This SFR should be included in the ST if the TOE implements the following use cases:<h:ol><h:li>Portable Clients (laptops, tablets), Enhanced</h:li> </h:ol> CSfC EUDs also require detection of physical attack, but in this case FPT_PHP.2 is required instead.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Detection of intrusion.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_PHP.2 Notification of Physical Attack-->
        <f-component cc-id="fpt_php.2" id="sfr-fpt-php-2" name="Notification of Physical Attack" status="sel-based">
          <depends on-use="uc-server-enhanced"/>
          <f-element id="fpt-php-2e1">
            <title>The TSF shall provide unambiguous detection of physical tampering that can compromise the TSF.</title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure it describes the methods used by the TOE to detect physical tampering and how the TOE will respond when physical tampering has been detected for each device/element specified in FPT_PHP.2.3.</TSS>
              <Guidance>The evaluator shall ensure that the AGD describes how the TOE notifies users or Administrators that it has detected tampering.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator shall verify that attempts to open the TOE enclosure result in indications consistent with the operational guidance. Such indications could include damaged tamper seals, logged events, or other physical or electronic manifestations.</test>
                  <test>For each device/element listed in FPT_PHP.2.3, the evaluator shall verify that attempts to physically tamper with the device/element results in notification to the designated users or roles consistent with the operational guidance.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-php-2e2">
            <title>The TSF shall provide the capability to determine whether physical tampering with the TSF's devices or TSF's elements has occurred.</title>
          </f-element>
          <f-element id="fpt-php-2e3">
            <title>For <assignable>list of TSF devices/elements for which active detection is required</assignable> , the TSF shall monitor the devices and elements and notify <assignable>a designated user or role</assignable> when physical tampering with the TSF's devices or TSF's elements has occurred.</title>
            <note role="application">This SFR should be included in the ST if the TOE implements the following use cases:<h:ol><h:li>Server-Class Platform, Enhanced</h:li> <h:li>CSfC EUD</h:li> </h:ol> FPT_PHP.2 is hierarchical to FPT_PHP.1 which means that all requirements of FPT_PHP.1 are also included as part of FPT_PHP.2. A TOE that conforms to FPT_PHP.2 therefore does not claim FPT_PHP.1.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Detection of intrusion.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_PHP.3 Resistance to Physical Attack-->
        <f-component cc-id="fpt_php.3" id="sfr-fpt-php-3" name="Resistance to Physical Attack" status="sel-based">
          <depends on-use="uc-server-enhanced"/>
          <depends on-use="uc-tactical-eud"/>
          <f-element id="fpt-php-3e1">
            <title>The TSF shall resist <assignable>physical tampering scenarios</assignable> to the <assignable>list of TSF devices/elements</assignable> by responding automatically such that the SFRs are always enforced.</title>
            <note role="application">This SFR should be included in the ST if the TOE implements the following use cases:<h:ol><h:li>Server-Class Platform, Enhanced</h:li> <h:li>Tactical EUD</h:li> </h:ol> </note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure it describes the methods used by the TOE to detect physical tampering and how the TOE will respond when physical tampering has been detected such that SFRs are always enforced.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the expected response of the TOE when physical tampering is detected.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>For each physical tampering scenario and device/element listed in FPT_PHP.3.1, the evaluator shall verify that tampering attempts result in a response from the TSF consistent with the operational guidance.</Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Detection of attempted intrusion.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_PPF_EXT.1 Protection of Platform Firmware and Critical Data-->
        <f-component cc-id="fpt_ppf_ext.1" id="sfr-fpt-ppf-ext-1" name="Protection of Platform Firmware and Critical Data">
          <comp-lev>requires that the TSF prevent platform firmware from being modified outside of the update mechanisms defined in FPT_TUD_EXT.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-ppf-ext-1e1">
            <title>The TSF shall allow modification of platform firmware only through the update mechanisms described in FPT_TUD_EXT.1.</title>
            <note role="application">Platform firmware must be modifiable only through one of the secure update mechanisms specified in FPT_TUD_EXT.1. If the update mechanism itself is implemented in platform firmware, then naturally, it must itself also be modifiable only through the secure update mechanism. Configuration data used by platform firmware that is stored in nonvolatile memory is not included in these protections. Executable portions of the TSF and data critical for ensuring the integrity of the TSF are included in these protections. Specifically, this includes the key store and the signature verification algorithm used by the update mechanisms.</note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it explains how the various areas of platform firmware and critical data are protected from modification outside of the platform firmware update mechanism described in FPT_TUD_EXT.1. If the TOE implements an authenticated update mechanism as specified in FPT_TUD_EXT.2, then the evaluator shall ensure that the TSS describes specifically how the signature verification code and key store is protected from update outside of the secure platform firmware update mechanism.</TSS>
              <Guidance>The evaluator shall check the AGD to ensure that there are instructions for how to securely modify the platform firmware and critical data using a mechanism specified in FPT_TUD_EXT.1.</Guidance>
              <Tests>The evaluator shall perform the following test: <h:p/>The evaluator shall attempt to overwrite or modify the platform firmware without invoking one of the update mechanisms specified in FPT_TUD_EXT.1 (e.g., using a modified Linux boot loader such as GRUB that attempts to write to the memory where platform firmware is stored). The test succeeds if the attempts to overwrite platform firmware fail. The evaluator shall attempt at least three such tests--one that attempts to overwrite the first platform firmware that executes after boot, one that targets the secure update mechanism (if implemented), and one that targets firmware that has been integrity-checked since the last boot.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_ROT_EXT.1 Platform Integrity Root-->
        <f-component cc-id="fpt_rot_ext.1" id="sfr-fpt-rot-ext-1" name="Platform Integrity Root">
          <comp-lev>requires that the platform integrity be anchored in a root of trust.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-rot-ext-1e1">
            <title>The integrity of platform firmware shall be rooted in <selectables linebreak="yes"><selectable id="sel-rot-immutable-code" >code or data written to immutable memory or storage</selectable><selectable id="sel-rot-immutable-creds" >credentials held in immutable storage on-platform or protected storage off-platform</selectable><selectable id="sel-rot-mc" >a separate management controller that is itself rooted in a mechanism that meets this requirement</selectable><selectable id="sel-rot-dsc" >integrity measurements held securely in an on-platform dedicated security component</selectable><selectable id="sel-rot-offplat" >integrity measurements held securely by an off-platform entity</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The integrity of platform firmware shall be rooted in<assignable>platform firmware root of trust</assignable>.</title></ext-comp-def-title>
            <note role="application">Roots of Trust are components that constitute a set of unconditionally trusted functions. The above are acceptable roots of trust for platform firmware integrity.<h:p/> The ST Author must select the root of trust used to ensure the integrity of the first platform firmware that executes. The integrity of subsequently executed platform firmware must be traceable back to this root or to some other root as specified in FPT_ROT_EXT.2. This SFR should be iterated for additional TOE roots (for example, a management controller or firmware executed from an add-in card).<h:p/> Selection of "<h:i>a separate management controller...</h:i> " implies the existence of an Administrator role.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes the Root of Trust on which initial integrity of platform firmware is anchored, consistent with the selection above. The description shall include means by which the Root of Trust is protected from modification.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_ROT_EXT.2 Platform Integrity Extension-->
        <f-component cc-id="fpt_rot_ext.2" id="sfr-fpt-rot-ext-2" name="Platform Integrity Extension">
          <comp-lev>specifies how platform integrity is extended from the integrity root to other platform firmware.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Configuration of action to take on integrity failure.</h:li> </h:ul> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ul><h:li>Failure of integrity verification.</h:li> </h:ul> </audit>
          <dependencies><h:br/>FPT_ROT_EXT.1 Platform Integrity Root</dependencies>
          <f-element id="fpt-rot-ext-2e1">
            <title>The integrity of all mutable platform firmware outside of the platform integrity root specified in FPT_ROT_EXT.1 shall be verified prior to execution or use through: <selectables linebreak="yes"><selectable id="sel-rot2-hash" >computation and verification of a hash by trusted code/data</selectable><selectable id="sel-rot2-digsig" >verification of a digital signature by trusted code/data</selectable><selectable id="fpt_rot_ext.2.1_1" >measurement and verification by trusted code/data</selectable><selectable id="fpt_rot_ext.2.1_2" >measurement and verification by an on-platform dedicated security component</selectable><selectable id="fpt_rot_ext.2.1_3" >measurement and verification by an off-platform entity</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The integrity of all mutable platform firmware outside of the platform integrity root specified in FPT_ROT_EXT.1 shall be verified prior to execution or use through:<assignable>method for extending the platform integrity root</assignable>.</title></ext-comp-def-title>
            <note role="application">This requirement specifies the means for extending the initial integrity of platform firmware established by FPT_ROT_EXT.1.1 to subsequently executed platform firmware and data that is located in mutable storage. (Integrity of code and data written to immutable storage is assured).<h:p/> Otherwise, integrity must be extended through cryptographic means: either through hashes or digital signatures computed and verified by firmware that is trusted because it has previously had its integrity verified or is itself a Root of Trust. Verification can be performed by TOE components such as management controllers or non-TOE trusted entities.<h:p/> If "<h:i>computation and verification of a hash by trusted code/data</h:i> " is selected, then FCS_COP.1/Hash must be claimed.<h:p/> If "<h:i>verification of a digital signature by trusted code/data</h:i> " is selected, then FCS_COP.1/SigVer must be claimed.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes the means by which initial integrity of platform firmware is extended to other platform components, and that the means are consistent with the selection(s) made in FPT_ROT_EXT.2. The TSS shall also describe how the TOE responds to failure of verification consistent with the selections in FPT_ROT_EXT.2.2.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the actions taken and notification methods used in case of failure to establish the integrity of the platform firmware root. If the actions are configurable, the AGD shall explain how they are configured.</Guidance>
              <Tests>The evaluator shall modify the platform firmware in a way that should cause a failure of the integrity check. The test passes if the mechanism specified in FPT_ROT_EXT.2.2 is triggered on the first subsequent boot of the platform. <h:p/>Depending on the protections implemented, the evaluator may need a specially crafted update module from the vendor to perform this test. But note that this is not necessarily the same as a test of the update mechanism. The update mechanism can be tested either at boot time or at the time of the update. This verification check must be done during boot. <h:p/>If modification of platform firmware <h:i>in situ</h:i>or using the update mechanism is deemed to be not feasible within the time and cost constraints of the evaluation, then the evaluator shall make such an argument in the AAR, and with concurrence of the CC scheme, this test can be replaced by evidence of vendor testing.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-rot-ext-2e2">
            <title>The TOE shall take the following actions if an integrity check specified in FPT_ROT_EXT.2.1 fails:  <h:ol><h:li>Halt,</h:li> <h:li>Notify an <selectables><selectable id="sel-rot2-admin-notify" >Administrator</selectable><selectable id="fpt_rot_ext.2.2_1" >User</selectable> </selectables> by <selectables><selectable id="sel-rot2-audit" >generating an audit event</selectable><selectable id="fpt_rot_ext.2.2_3" ><assignable>other notification method(s)</assignable></selectable> </selectables> , and</h:li> <h:li> <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_rot_ext.2.2_4" >Stop all execution and shut down</selectable><selectable id="sel-rot2-recovery" >Initiate a recovery process as specified in FPT_RVR_EXT.1</selectable> </selectables> </h:li></h:ol> <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_rot_ext.2.2_5" >automatically</selectable><selectable id="sel-rot2-admin-config" >in accordance with Administrator-configurable policy</selectable><selectable id="fpt_rot_ext.2.2_6">by express determination of an <selectables><selectable id="sel-rot2-admin-det" >Administrator</selectable><selectable id="sel-rot2-user-det" >User</selectable></selectables> </selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TOE shall take the following actions if an integrity check specified in FPT_ROT_EXT.2.1 fails:<h:ol type="1"><h:li>Halt,</h:li><h:li>Notify an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables>by<assignable>notification method</assignable>, and</h:li><h:li><selectables linebreak="yes" onlyone="yes"><selectable>Stop all execution and shut down</selectable><selectable>Initiate a recovery process</selectable></selectables></h:li></h:ol><selectables linebreak="yes" onlyone="yes"><selectable>automatically</selectable><selectable>in accordance with Administrator-configurable policy</selectable><selectable>by express determination of an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables></selectable></selectables>.</title></ext-comp-def-title>
            <note role="application">Notification of an administrator can take many forms. For server-class platforms, such notification could take the form of administrator alerts or audit events. For platforms without management controllers, notification could be achieved, for example, by blinking lights, beep codes, screen indications, or local logging.<h:p/> If "Administrator" is selected anywhere in FPT_ROT_EXT.2.2, or if "in accordance with Administrator-configurable policy" is selected, then all Administrator authentication requirements must be included in the ST (FIA_UIA_EXT.1, FIA_UAU.5, FIA_PMG_EXT.1, FIA_AFL_EXT.1, FIA_UAU.7). If "<h:i>generating an audit event</h:i> " is selected, then FAU_GEN.1, FAU_SAR.1, FAU_STG.1, FAU_STG.2, and FAU_STG.5 must be included in the ST.<h:p/> If "<h:i>computation and verification of a hash by trusted code/data</h:i> " is selected, then FCS_COP.1/Hash must be included in the ST.<h:p/> If "<h:i>verification of a digital signature by trusted code/data</h:i> " is selected, then FCS_COP.1/SigVer must be included in the ST.<h:p/> If "<h:i>Initiate a recovery process as specified in FPT_RVR_EXT.1</h:i> " is selected, then FPT_RVR_EXT.1 must be included in the ST.<h:p/> If "<h:i>in accordance with administrator-configurable policy</h:i> " is selected, then FMT_MOF.1 and FMT_SMF.1 must be included in the ST.<h:p/> </note>
          </f-element>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Failure of integrity verification</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_ROT_EXT.3 Hardware component integrity-->
        <f-component cc-id="fpt_rot_ext.3" id="sfr-fpt-rot-ext-3" name="Hardware component integrity" status="objective">
          <comp-lev>requires that the TOE support hardware supply chain integrity.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Configuration of action to take on integrity failure.</h:li> </h:ul> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ul><h:li>Detection of attempted intrusion.</h:li> </h:ul> </audit>
          <dependencies><h:br/>FPT_ROT_EXT.1 Platform Integrity Root</dependencies>
          <f-element id="fpt-rot-ext-3e1">
            <title>Outside of the integrity root specified in FPT_ROT_EXT.1, the integrity of <assignable>critical platform hardware components</assignable> shall be verified prior to execution or use through: <assignable>method for ensuring integrity of platform hardware components</assignable>.</title>
            <note role="application">The purpose of this objective requirement is to encourage platform and component vendors to adopt mechanisms similar to those defined in upcoming NIST SP 1800-34 for ensuring the integrity of the hardware supply chain. The scope of SP 1800-34 is to cover "manufacturing and OEM processes that protect against counterfeits, tampering, and insertion of unexpected software and hardware, and the corresponding customer processes that verify that client and server computing devices and components have not been tampered with or otherwise modified. Manufacturing processes that cannot be verified by the customer are explicitly out of scope."<h:p/> As a basic step, SP 1800-34 specifies that critical platform components should include immutable hardware IDs that can be listed in a hardware component manifest that is provided to the purchaser and signed by the manufacturer. It should then be possible for the TOE to verify the signature on the manifest and check that each hardware ID in the manifest matches the IDs in the actual hardware. The component manifest and hardware IDs provide proof of provenance for the TOE and its hardware components.<h:p/> For purposes of this requirement, hardware identities can be verified once on first boot, on every boot, when new hardware is detected, or during normal operation of the platform - as long as the hardware integrity is verified before the component or device is used.<h:p/> The ST Author lists the hardware components for which the integrity is checked, and the methods used for conducting the checks. "Critical components" generally would include chassis, motherboards, CPUs, network cards, memory chips, hard drives, controllers, graphics processors, and service controllers.</note>
            <aactivity level="component">
              <TSS>The evaluator shall verify that the TSS describes the means by which integrity of platform hardware and firmware is maintained from TOE manufacture to delivery of the TOE to its operational site. The TSS shall also describe how the TOE responds to failure of an integrity check consistent with the selections in FPT_ROT_EXT.3.2.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the actions taken and notification methods used in case of detection of a platform integrity violation. If the actions are configurable, the AGD shall explain how they are configured.</Guidance>
              <Tests/>
            </aactivity>
          </f-element>
          <f-element id="fpt-rot-ext-3e2">
            <title>The TOE shall take the following actions if an integrity check specified in FPT_ROT_EXT.3.1 fails:  <h:ol><h:li>Halt,</h:li> <h:li>Notify an <selectables><selectable id="sel-rot3-admin-notify" >Administrator</selectable><selectable id="fpt_rot_ext.3.2_1" >User</selectable> </selectables> by <selectables><selectable id="sel-rot3-audit" >generating an audit event</selectable><selectable id="fpt_rot_ext.3.2_3" ><assignable>other notification method(s)</assignable></selectable> </selectables> , and</h:li> <h:li> <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_rot_ext.3.2_4" >Stop all execution and shut down</selectable><selectable id="fpt_rot_ext.3.2_5" >Continue execution without the integrity-compromised component</selectable><selectable id="fpt_rot_ext.3.2_6" >Continue execution</selectable> </selectables> </h:li></h:ol> <selectables onlyone="yes" linebreak="yes"><selectable id="sel-rot3-admin-config" >in accordance with administrator-configurable policy</selectable><selectable id="fpt_rot_ext.3.2_7">by express determination of an <selectables><selectable id="sel-rot3-admin-det" >Administrator</selectable><selectable id="sel-rot3-user-det" >User</selectable></selectables> </selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TOE shall take the following actions if an integrity check specified in FPT_ROT_EXT.3.1 fails:<h:ol type="1"><h:li>Halt,</h:li><h:li>Notify an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables>by<assignable>notification method</assignable>, and</h:li><h:li><selectables linebreak="yes" onlyone="yes"><selectable>Stop all execution and shut down</selectable><selectable>Continue execution without the integrity-compromised component</selectable><selectable>Continue execution</selectable></selectables></h:li></h:ol><selectables linebreak="yes" onlyone="yes"><selectable>in accordance with administrator-configurable policy</selectable><selectable>by express determination of an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables></selectable></selectables>.</title></ext-comp-def-title>
            <note role="application">Notification of an administrator can take many forms. For server-class platforms, such notification could take the form of administrator alerts or audit events. For platforms without management controllers, notification could be achieved, for example, by blinking lights, beep codes, screen indications, or local logging.<h:p/> If "<h:i>administrator</h:i> " is selected anywhere in FPT_ROT_EXT.3.2, or if "<h:i>in accordance with administrator-configurable policy</h:i> " is selected, then all administrator authentication requirements must be included in the ST (FIA_UIA_EXT.1, FIA_UAU.5, FIA_PMG_EXT.1, FIA_AFL_EXT.1, FIA_UAU.7).<h:p/> If "<h:i>generating an audit event</h:i> " is selected, then FAU_GEN.1, FAU_SAR.1, FAU_STG.1, FAU_STG.2, and FAU_STG.5, must be included in the ST.<h:p/> If "<h:i>in accordance with administrator-configurable policy</h:i> " is selected, then FMT_MOF.1 and FMT_SMF.1 must be claimed in the ST.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Detection of attempted intrusion.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_RVR_EXT.1 Platform Firmware Recovery-->
        <f-component cc-id="fpt_rvr_ext.1" id="sfr-fpt-rvr-ext-1" name="Platform Firmware Recovery" status="sel-based">
          <depends on-sel="sel-rot2-recovery"/>
          <depends on-sel="sel-tud2-recovery"/>
          <depends on-sel="sel-tud3-recovery"/>
          <comp-lev>defines mechanisms for recovering from a platform firmware integrity failure.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Configuration of action to take on integrity failure.</h:li> </h:ul> </management>
          <dependencies><h:br/>FPT_TUD_EXT.4 Secure Local Update Mechanism</dependencies>
          <f-element id="fpt-rvr-ext-1e1">
            <title>The TSF shall implement a mechanism for recovering from boot firmware failure consisting of <selectables linebreak="yes"><selectable id="sel-rvr-local-update" >the secure local update mechanism described in FPT_TUD_EXT.4</selectable><selectable id="fpt_rvr_ext.1.1_1" >installation of a known-good or recovery firmware image</selectable><selectable id="fpt_rvr_ext.1.1_2" >reversion to the prior firmware image</selectable><selectable id="fpt_rvr_ext.1.1_3" >installation of a recovery image that puts the TOE into a maintenance mode</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall implement a mechanism for recovering from boot firmware failure consisting of<assignable>recovery mechanism</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR must be included in the ST if:<h:ul><h:li>"<h:i>Initiate a recovery process as specified in FPT_RVR_EXT.1</h:i> " is selected in FPT_ROT_EXT.2.2,</h:li> <h:li>"<h:i>Initiate a recovery process as specified in FPT_RVR_EXT.1</h:i> " is selected in FPT_TUD_EXT.2.5,</h:li> <h:li>"<h:i>Initiate a recovery process as specified in FPT_RVR_EXT.1</h:i> " is selected in FPT_TUD_EXT.3.4,</h:li> <h:li>The TOE implements a recovery mechanism for firmware corruption not necessarily related to integrity or update failure.</h:li> </h:ul> If the ST Author selects "<h:i>the secure local update mechanism described in FPT_TUD_EXT.4</h:i> ," then FPT_TUD_EXT.4 must be claimed in the ST.<h:p/> As indicated above, in addition to integrity or update failure, the TOE may use a recovery mechanism to deal with non-security-related failures, such as a power outage during update or a power surge during normal operation.<h:p/> The recovery process may be initiated automatically on failure, as the result of physically present user action, or as the result of pre-configured policy. The action taken may depend on the nature of the failure as specified in FPT_ROT_EXT.2.2 and FPT_TUD_EXT.2.5.<h:p/> </note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS section to confirm that it describes how the platform firmware recovery mechanism works and the conditions under which it is invoked.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that is describes how to configure the conditions under which the recovery mechanism is initiated (if configurable).</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>To test this requirement, the evaluator shall trigger the recovery process either by forcing an update error or a boot integrity failure and observing that the recovery process has been initiated.</test>
                  <test>The evaluator will engage with the recovery process as necessary, and after recovery will determine the version of the current firmware image. The test is passed if the resultant image is as expected in accordance with policy and the selections in FPT_RVR_EXT.1.1. If the recovery process uses the secure local update process as specified in FPT_TUD_EXT.4, then this test is satisfied by testing of that requirement.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_STM.1 Reliable Time Stamps-->
        <f-component cc-id="fpt_stm.1" id="sfr-fpt-stm-1" name="Reliable Time Stamps">
          <f-element id="fpt-stm-1e1">
            <title>The TSF shall be able to provide reliable time stamps.</title>
            <note role="application">It is acceptable for the TSF to provide timestamp data either through an internal clock or a counter. It is also permissible for the TSF to obtain time data from a clock contained within the same physical enclosure as the TOE.<h:p/> </note>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it lists each security function that makes use of time. The TSS provides a description of how the time is maintained and considered reliable in the context of each of the time related functions.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure it instructs the Administrator on any mechanisms for configuring the time source.</Guidance>
              <Tests>The evaluator shall perform the following tests: <h:p/>[conditional] If the TSF provides a mechanism to manually set the time, the evaluator shall use the guidance documentation to set the time. The evaluator shall then use an available interface to observe that the time is reported correctly.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_TST.1 TSF Self-Testing-->
        <f-component cc-id="fpt_tst.1" id="fpt-tst-1" name="TSF Self-Testing" status="sel-based">
          <depends on-incl="sfr-fcs-ckm-1-skg"/>
          <depends on-incl="sfr-fcs-ipsec-ext-1"/>
          <depends on-incl="sfr-fcs-otv-ext-1"/>
          <depends on-incl="sfr-fcs-ckm-1-akg"/>
          <depends on-incl="sfr-fcs-cop-1-siggen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-ctr-dirgen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-fb-dirgen"/>
          <depends on-sel="sel-fcs-ckm-5-kdf-dpi-dirgen"/>
          <depends>
            <optional/>
          </depends>
          <f-element id="fel-tsf-self-test">
            <title>The TSF shall run a suite of the following self-tests <selectables><selectable id="fpt_tst.1.1_1" >during initial start-up</selectable><selectable id="fpt_tst.1.1_2" >periodically during normal operation</selectable><selectable id="fpt_tst.1.1_3" >at the request of the authorized user</selectable><selectable id="fpt_tst.1.1_4">at the conditions <assignable>conditions under which self-test should occur</assignable> </selectable> </selectables> to demonstrate the correct operation of [ <h:i>TSF DRBG specified in FCS_RBG.1</h:i>  ].</title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to ensure that it details the self-tests that are run by the TSF along with how they are run. This description should include an outline of what the tests are actually doing. The evaluator shall ensure that the TSS makes an argument that the tests are sufficient to demonstrate that the DRBG is operating correctly.<h:p/> Note that this information may also be placed in the entropy documentation specified by<xref to="entropyappendix"/> .</TSS>
              <Guidance>If a self-test can be executed at the request of an authorized user, the evaluator shall verify that the operational guidance provides instructions on how to execute that self-test.</Guidance>
              <Tests>For each self-test, the evaluator shall verify that evidence is produced that the self-test is executed when specified by FPT_TST.1.1. <h:p/>If a self-test can be executed at the request of an authorized user, the evaluator shall verify that following the steps documented in the operational guidance to perform the self-test will result in execution of the self-test.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-tsf-ver-int-data">
            <title>The TSF shall provide authorized users with the capability to verify the integrity of [ <h:i>[DRBG seed/output data]</h:i>  ].</title>
          </f-element>
          <f-element id="fel-tsf-ver-int">
            <title>The TSF shall provide authorized users with the capability to verify the integrity of [ <h:i>[TSF DRBG specified in FCS_RBG.1]</h:i>  ].</title>
            <note role="application">This SFR is a required dependency of FCS_RBG.1. It is intended to require that any DRBG implemented by the TOE undergo health testing to ensure that the random bit generation functionality has not been degraded. If the TSF supports multiple DRBGs, this SFR should be iterated to describe the self-test behavior for each.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Execution of self-tests.</audit-event-descr>
            <audit-event-info>None.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_TUD_EXT.1 TOE Firmware Update-->
        <f-component cc-id="fpt_tud_ext.1" id="sfr-fpt-tud-ext-1" name="TOE Firmware Update">
          <comp-lev>requires that the TSF support update of platform firmware.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Initiation of the update process.</h:li> </h:ul> </management>
          <dependencies><h:br/>FPT_TUD_EXT.2 Platform Firmware Authenticated Update Mechanism<h:br/>FPT_TUD_EXT.3 Platform Firmware Delayed-Authentication Update Mechanism<h:br/>FPT_TUD_EXT.4 Secure Local Platform Firmware Update Mechanism</dependencies>
          <f-element id="fpt-tud-ext-1e1">
            <title>The TSF shall implement <selectables linebreak="yes"><selectable id="sel-tud1-no-update" exclusive="yes">no mechanism for platform firmware update</selectable><selectable id="sel-tud1-auth-update" >an authenticated platform firmware update mechanism as described in FPT_TUD_EXT.2</selectable><selectable id="sel-tud1-unauth-update" >a delayed-authentication platform firmware update mechanism as described in FPT_TUD_EXT.3</selectable><selectable id="sel-tud1-local-update" >a secure local platform firmware update mechanism described in FPT_TUD_EXT.4</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall implement<assignable>update mechanism</assignable>.</title></ext-comp-def-title>
            <note role="application">The purpose of the platform firmware update mechanism is to ensure the authenticity and integrity of platform firmware updates.<h:p/> If platform firmware is immutable (not updateable by any non-destructive means), then the ST Author selects "<h:i>no mechanism for platform firmware update</h:i> ."<h:p/> If the platform implements an update mechanism that does not require physical presence at the platform, and that authenticates firmware updates prior to installing them, then the ST Author selects "<h:i>an authenticated platform firmware update mechanism...</h:i> " and includes FPT_TUD_EXT.2 and FCS_COP.1/SigVer in the ST.<h:p/> If the platform implements an update mechanism that does not require physical presence at the platform, and that does not authenticate firmware updates prior to installing them, then the ST Author selects "<h:i>a delayed-authentication platform firmware update mechanism...</h:i> " and includes FPT_TUD_EXT.3 and FCS_COP.1/SigVer in the ST.<h:p/> If platform firmware is modifiable only through a local update requiring physical presence at the platform, then the ST Author must select "<h:i>a secure local platform firmware update mechanism...</h:i> " and include FPT_TUD_EXT.4 in the ST.</note>
            <aactivity level="component">
              <TSS>If the ST Author selects "<h:i>no provision for platform firmware update</h:i> ," then the evaluator shall examine the TSS to ensure that it explains all ways of modifying platform firmware in the absence of any provided mechanism. For example, breaking open the case and prying a chip off the motherboard and then reprogramming the chip. The purpose of this activity is to ensure that the TOE does not implement a local update mechanism that does not meet the requirements of FPT_TUD_EXT.4.<h:p/> This requirement is met if the platform implements no means for updating platform firmware and the TSS describes a method for updating or replacing platform firmware that involves potentially destroying or damaging the TOE or some of its components.<h:p/> If the ST Author selects "<h:i>an authenticated platform firmware update mechanism...</h:i> ," then this requirement is satisfied if FPT_TUD_EXT.2 is satisfied.<h:p/> If the ST Author selects "<h:i>a delayed-authentication platform firmware update mechanism...</h:i> ," then this requirement is satisfied if FPT_TUD_EXT.3 is satisfied.<h:p/> If the ST Author selects "<h:i>a secure local platform firmware update mechanism...</h:i> ," then this requirement is satisfied if FPT_TUD_EXT.4 is satisfied.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FPT_TUD_EXT.2 Platform Firmware Authenticated Update Mechanism-->
        <f-component cc-id="fpt_tud_ext.2" id="sfr-fpt-tud-ext-2" name="Platform Firmware Authenticated Update Mechanism" status="sel-based">
          <depends on-sel="sel-tud1-auth-update"/>
          <comp-lev>specifies the requirements for authenticated update of platform firmware.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Configuration of action to take on an update failure.</h:li> </h:ul> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ul><h:li>Failure of update authentication/integrity check/rollback</h:li> <h:li>Failure of update operation</h:li> <h:li>Success of update operation</h:li> </h:ul> </audit>
          <dependencies><h:br/>FCS_COP.1 Cryptographic Operations</dependencies>
          <f-element id="fpt-tud-ext-2e1">
            <title>The TSF shall authenticate the source of all platform firmware updates using a digital signature algorithm specified in FCS_COP.1/SigVer and using a key store that contains <selectables><selectable id="fpt_tud_ext.2.1_1" >the public key</selectable><selectable id="sel-tud2-hash" >hash value of the public key</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall authenticate the source of all platform firmware updates using a digital signature algorithm specified in FCS_COP.1 and using a key store that contains<selectables><selectable>the public key</selectable><selectable>hash value of the public key</selectable></selectables>.</title></ext-comp-def-title>
            <note role="application">This SFR must be included in the ST if "<h:i>an authenticated platform firmware update mechanism as described in FPT_TUD_EXT.2</h:i> " is selected in FPT_TUD_EXT.1.1.<h:p/> The ST must include FCS_COP.1/Hash if "<h:i>hash value of the public key</h:i> " is selected.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS includes a comprehensive description of how the authentication of platform firmware updates is implemented by the TSF. The TSS should cover the initialization process and the activities that are performed to ensure that the digital signature of the update image is verified before modification of the firmware.<h:p/> The evaluator shall examine the TSF to ensure that it describes the platform firmware version identifier and explains its meaning and encoding.<h:p/> The evaluator shall also ensure that the TSS describes the actions taken by the TSF is an update image fails authentication.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the process for updating the platform firmware.<h:p/> The evaluator shall examine the AGD to ensure that it documents the observable indications of update success or failure, and that it describes how to access the platform firmware version indicators.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator determines the current version of the platform firmware, and obtains or produces a valid, authentic, and permissible update image of platform firmware. The evaluator initiates an update using this image through the process described in the operational guidance. After the process is complete, the evaluator checks the current firmware version to ensure that the new firmware version matches that of the update.</test>
                  <test>The evaluator performs the same test, this time using a valid update image that is signed with an incorrect key. The update must fail.</test>
                  <test>The evaluator performs the same test, this time using an update image that is corrupted but is signed with the correct key. The update must fail.</test>
                  <test>The evaluator performs the same test, this time using a valid update image that is not signed. The update must fail.</test>
                  <test>[conditional] If the TSF implements rollback protections, the evaluator performs the same test, this time using a valid, signed update image that has an earlier version number than the currently installed firmware. The update must fail.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-tud-ext-2e2">
            <title>The TSF shall allow installation of updates only if the digital signature has been successfully verified as specified in FCS_COP.1/SigVer and <selectables><selectable id="fpt_tud_ext.2.2_1" >the version number of the platform firmware update is more recent than the version number of the current installed platform firmware</selectable><selectable id="fpt_tud_ext.2.2_2" exclusive="yes">no other conditions</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall allow installation of updates only if the digital signature has been successfully verified as specified in FCS_COP.1 and<assignable>additional constraints on updates</assignable>.</title></ext-comp-def-title>
            <note role="application">The ST Author should select "<h:i>the version number...</h:i> " if the TSF supports rollback prevention. That is, the TSF does not allow "update" to an older version of the platform firmware. In general, rollback should be permitted only through a secure local update mechanism at the express direction of an physically present Administrator or User.</note>
          </f-element>
          <f-element id="fpt-tud-ext-2e3">
            <title>The TSF shall include a platform firmware version identifier that is accessible by the update mechanism and includes information that enables the update mechanism to determine the relative order of updates.</title>
          </f-element>
          <f-element id="fpt-tud-ext-2e4">
            <title>The TSF shall provide an observable indication of the success or failure of the update operation.</title>
            <note role="application">For success, this indication should include the version number of the newly installed firmware. Notification of failure could include generation of an audit event by a management subsystem, a beep code, an updated version number on a splash screen, or simple failure to continue functioning.</note>
          </f-element>
          <f-element id="fpt-tud-ext-2e5">
            <title>The TOE shall take the following actions if a platform firmware integrity, authenticity, or rollback-prevention check fails, or a platform firmware update fails for any other reason:  <h:ul><h:li>Do not install the update,</h:li> <h:li>Notify an <selectables><selectable id="sel-tud2-admin-notify" >Administrator</selectable><selectable id="fpt_tud_ext.2.5_1" >User</selectable> </selectables> by <selectables><selectable id="sel-tud2-audit" >generating an audit event</selectable><selectable id="fpt_tud_ext.2.5_3" ><assignable>notification method</assignable></selectable> </selectables> ,</h:li></h:ul>  and <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_tud_ext.2.5_4" >Continue execution</selectable><selectable id="fpt_tud_ext.2.5_5" >Halt</selectable><selectable id="fpt_tud_ext.2.5_6" >Stop all execution and shut down</selectable><selectable id="sel-tud2-recovery" >Initiate recovery as specified in FPT_RVR_EXT.1</selectable> </selectables>  <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_tud_ext.2.5_7" >automatically</selectable><selectable id="sel-tud2-admin-config" >in accordance with administrator-configurable policy</selectable><selectable id="fpt_tud_ext.2.5_8">by express determination of an <selectables><selectable id="sel-tud2-admin-det" >Administrator</selectable><selectable id="sel-tud2-user-det" >User</selectable></selectables> </selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TOE shall take the following actions if a platform firmware integrity, authenticity, or rollback-prevention check fails, or a platform firmware update fails for any other reason:<h:ul><h:li>Do not install the update,</h:li><h:li>Notify an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables>by<assignable>notification method</assignable>,</h:li></h:ul>and<selectables linebreak="yes" onlyone="yes"><selectable>Continue execution</selectable><selectable>Halt</selectable><selectable>Stop all execution and shut down</selectable><selectable>Initiate recovery as specified in FPT_RVR_EXT.1</selectable></selectables><selectables linebreak="yes" onlyone="yes"><selectable>automatically</selectable><selectable>in accordance with Administrator-configurable policy</selectable><selectable>by express determination of an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables></selectable></selectables>.</title></ext-comp-def-title>
            <note role="application">If "<h:i>generating an audit event</h:i> " is selected, then FAU_GEN.1 and the other audit requirements must be claimed.<h:p/> If "<h:i>Initiate recovery as specified in FPT_RVR_EXT.1</h:i> " is selected, then FPT_RVR_EXT.1 must be included in the ST.<h:p/> The platform firmware authenticated update mechanism employs digital signatures to ensure the authenticity of the firmware update image. The TSF includes a signature verification algorithm and a key store containing the public key needed to verify the signature on the firmware update image.<h:p/> A hash of the public key may be stored if a copy of the public key is provided with firmware update images. In this case, the update mechanism hashes the public key provided with the update image, and ensure that it matches a hash which appears in the key store before using the provided public key to verify the signature of the update image. If the hash of the public key is selected, the ST Author may iterate the FCS_COP.1/Hash requirement to specify the hashing functions used.<h:p/> An indication of success or failure can be generation of an audit event by a management subsystem, a beep code, an updated version number on a splash screen, or simple failure to continue functioning.<h:p/> If the update mechanism generates audit events, the ST Author must make the appropriate selections from the audit events table (<xref g="t-audit-sel-based"/> ).</note>
          </f-element>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Failure of update authentication/integrity check/rollback</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the current firmware and of the attempted update.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Failure of update operation</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the current firmware and of the attempted update.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Success of update operation</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the new and old firmware images.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_TUD_EXT.3 Platform Firmware Delayed-Authentication Update Mechanism-->
        <f-component cc-id="fpt_tud_ext.3" id="sfr-fpt-tud-ext-3" name="Platform Firmware Delayed-Authentication Update Mechanism" status="sel-based">
          <depends on-sel="sel-tud1-unauth-update"/>
          <comp-lev>specifies the requirements for delayed-authentication update of platform firmware.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ul><h:li>Configuration of action to take on an update failure.</h:li> </h:ul> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ul><h:li>Failure of update authentication/integrity check/rollback</h:li> <h:li>Failure of update operation</h:li> <h:li>Success of update operation</h:li> </h:ul> </audit>
          <dependencies>FPT_ROT_EXT.2 Platform Integrity Extension</dependencies>
          <f-element id="fpt-tud-ext-3e1">
            <title>The TSF shall allow execution or use of platform firmware updates only if new platform firmware is integrity- and authenticity-checked using the mechanism described in FPT_ROT_EXT.2 prior to its execution or use, and <selectables><selectable id="fpt_tud_ext.3.1_1" >the version number of the platform firmware update is more recent than the version number of the previously installed platform firmware</selectable><selectable id="fpt_tud_ext.3.1_2" exclusive="yes">no other conditions</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall allow execution or use of platform firmware updates only if new platform firmware is integrity- and authenticity-checked using the mechanism described in FPT_ROT_EXT.2 prior to its execution or use, and<assignable>additional constraints on update</assignable>.</title></ext-comp-def-title>
            <note role="application">This requirement must be included in the ST if "<h:i>implement a delayed-authentication platform firmware update mechanism as described in FPT_TUD_EXT.3</h:i> " is selected in FPT_TUD_EXT.1.1.<h:p/> This update mechanism does not require an integrity or authenticity check prior to installation, but the newly installed platform firmware must have its integrity and authenticity verified prior to being executed or used. This update mechanism takes advantage of the existing FPT_ROT_EXT.2 requirement to avoid having to verify the integrity and authenticity of an update package at install time.<h:p/> The ST Author should select "<h:i>the version number of the platform firmware update is more recent than the version number of the previously installed platform firmware</h:i> " if the TSF supports rollback prevention.</note>
            <aactivity level="component">
              <TSS>The evaluator shall ensure that the TSS includes a comprehensive description of how the authentication of platform firmware updates is implemented by the TSF. The TSS should cover the initialization process and the activities that are performed to ensure that the digital signature of the update image is verified before it is executed or used.<h:p/> The evaluator shall examine the TSF to ensure that it describes the platform firmware version identifier and explains its meaning and encoding.<h:p/> The evaluator shall also ensure that the TSS describes the actions taken by the TSF if an update image fails authentication, integrity, or rollback-prevention checks.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes the process for updating the platform firmware.<h:p/> The evaluator shall examine the AGD to ensure that it documents the observable indications of update success or failure, and that it describes how to access the platform firmware version indicators.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator determines the current version of the platform firmware, and obtains or produces a valid, authentic, and permissible update image of platform firmware. The evaluator initiates an update using this image through the process described in the operational guidance. After the process is complete, the evaluator checks the current firmware version to ensure that the new firmware version matches that of the update.</test>
                  <test>The evaluator performs the same test, this time using a inauthentic update image. The update code must fail to execute.</test>
                  <test>The evaluator performs the same test, this time using an update image that is corrupted but is otherwise authentic. The update code must fail to execute.</test>
                  <test>[conditional] If the TSF implements rollback protections, the evaluator performs the same test, this time using a valid, signed update image that is has an earlier version number than the currently installed firmware. The update code must fail to execute.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-tud-ext-3e2">
            <title>The TSF shall include an observable platform firmware version identifier that is accessible by the update mechanism and includes information that enables the update mechanism to determine the relative order of updates.</title>
          </f-element>
          <f-element id="fpt-tud-ext-3e3">
            <title>The TSF shall provide an observable indication of the success or failure of the update operation.</title>
            <note role="application">For success, this should at least include an indication of the version number of the newly installed firmware. Notification of failure could include generation of an audit event by a management subsystem, a beep code, an updated version number on a splash screen, or simple failure to continue functioning.</note>
          </f-element>
          <f-element id="fpt-tud-ext-3e4">
            <title>The TOE shall take the following actions if a platform firmware update integrity, authentication, or rollback-prevention check fails, or a platform firmware update fails for any other reason:  <h:ul><h:li>Notify an <selectables><selectable id="sel-tud3-admin-notify" >Administrator</selectable><selectable id="fpt_tud_ext.3.4_1" >User</selectable> </selectables> by <selectables><selectable id="sel-tud3-audit" >generating an audit event</selectable><selectable id="fpt_tud_ext.3.4_3" ><assignable>notification method</assignable></selectable> </selectables> </h:li></h:ul>  and <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_tud_ext.3.4_4" >Halt</selectable><selectable id="fpt_tud_ext.3.4_5" >Stop all execution and shut down</selectable><selectable id="sel-tud3-recovery" >Initiate a recovery process as specified in FPT_RVR_EXT.1</selectable> </selectables>  <selectables onlyone="yes" linebreak="yes"><selectable id="fpt_tud_ext.3.4_6" >automatically</selectable><selectable id="sel-tud3-admin-config" >in accordance with administrator-configurable policy</selectable><selectable id="fpt_tud_ext.3.4_7">by express determination of an <selectables><selectable id="sel-tud3-admin-det" >Administrator</selectable><selectable id="sel-tud3-user-det" >User</selectable></selectables> </selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TOE shall take the following actions if a platform firmware update integrity, authentication, or rollback-prevention check fails, or a platform firmware update fails for any other reason:<h:ul><h:li>Notify an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables>by<assignable>notification method</assignable></h:li></h:ul>and<selectables linebreak="yes" onlyone="yes"><selectable>Halt</selectable><selectable>Stop all execution and shut down</selectable><selectable>Initiate a recovery process as specified in FPT_RVR_EXT.1</selectable></selectables><selectables linebreak="yes" onlyone="yes"><selectable>automatically</selectable><selectable>in accordance with administrator-configurable policy</selectable><selectable>by express determination of an<selectables><selectable>Administrator</selectable><selectable>User</selectable></selectables></selectable></selectables>.</title></ext-comp-def-title>
            <note role="application">If "<h:i>generating an audit event</h:i> " is selected, then FAU_GEN.1 and the other audit SFRs must be claimed.<h:p/> If "<h:i>Initiate recovery as specified in FPT_RVR_EXT.1</h:i> " is selected, then FPT_RVR_EXT.1 must be included in the ST.<h:p/> The platform firmware unauthenticated update mechanism installs platform firmware updates without first checking their integrity or authenticity. Instead, this mechanism either invokes a special authentication/integrity check on the firmware<h:i>in situ</h:i> after install or relies on the firmware checks required by FPT_ROT_EXT.2 to ensure the integrity and authenticity of the update image. In either case, the integrity and authenticity of the update must be verified before the updated firmware is executed or used.<h:p/> Likewise, if the TSF implements rollback prevention, this check must be made before the newly installed firmware is executed.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Failure of update authentication/integrity/rollback check</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the current firmware and of the attempted update.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Failure of update operation</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the current firmware and of the attempted update.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>
              <selectables onlyone="yes">
                <selectable>Success of update operation</selectable>
                <selectable>none</selectable>
              </selectables>
            </audit-event-descr>
            <audit-event-info>Version numbers of the new and old firmware images.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FPT_TUD_EXT.4 Secure Local Platform Firmware Update Mechanism-->
        <f-component cc-id="fpt_tud_ext.4" id="sfr-fpt-tud-ext-4" name="Secure Local Platform Firmware Update Mechanism" status="sel-based">
          <depends on-sel="sel-tud1-local-update"/>
          <depends on-sel="sel-rvr-local-update"/>
          <comp-lev>specifies the requirements for secure local update of platform firmware.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="fpt-tud-ext-4e1">
            <title>The TSF shall provide a secure local update mechanism that requires an assertion of physical access to the TOE before installation of an update.</title>
            <aactivity level="component">
              <TSS>The evaluator shall check the TSS section to confirm that it clearly and thoroughly describes how the secure local update functionality is implemented.</TSS>
              <Guidance>The evaluator shall examine the AGD to ensure that it describes instructions for using the local update mechanism, and how to validate that the update was successful.</Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator tests the secure local update by following the instructions provided in the operational guidance to update the platform firmware image. The update must succeed.<h:p/> </test>
                  <test>The evaluator next tries to update the platform firmware image without first asserting physical presence. The update must fail or be not possible.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-tud-ext-4e2">
            <title>A user shall assert physical presence to the TSF through: <selectables linebreak="yes"><selectable id="fpt_tud_ext.4.2_1" >login to the TOE from a physically connected console or terminal</selectable><selectable id="fpt_tud_ext.4.2_2" >physical connection of a jumper or cable</selectable><selectable id="fpt_tud_ext.4.2_3" >connection to a debug port</selectable><selectable id="fpt_tud_ext.4.2_5" ><assignable>description of other mechanism for asserting physical presence</assignable></selectable> </selectables>.</title>
            <ext-comp-def-title><title>A user shall assert physical presence to the TSF through:<assignable>method for asserting physical presence</assignable>.</title></ext-comp-def-title>
            <note role="application">The requirement included in the ST if "<h:i>the secure local update mechanism described in FPT_TUD_EXT.4</h:i> " is selected in FPT_RVR_EXT.1.1 or "<h:i>implement a secure local platform firmware update mechanism described in FPT_TUD_EXT.4</h:i> " is selected in FPT_TUD_EXT.1.1.<h:p/> This requirement pertains to platform firmware update mechanisms that do not use the authentication-based update mechanism described in FPT_TUD_EXT.2 or the delayed-authentication described in FPT_TUD_EXT.3. The secure local update mechanism ensures the authenticity and integrity of the firmware update image by requiring a user to be physically present at the TOE. An assertion of physical presence can take the form, for example, of requiring entry of a password at a boot screen, unlocking of a physical lock (e.g., a motherboard jumper), or inserting a USB cable before permitting platform firmware to be updated.<h:p/> There is no requirement that the local update mechanism support rollback prevention.<h:p/> The local update mechanism must be a designed mechanism. If update can be accomplished only through the physical removal and replacement of a part, then that is not a secure local update mechanism, and "make no provision for platform firmware update" should be selected in FPT_TUD_EXT.1.1.<h:p/> </note>
          </f-element>
          <f-element id="fpt-tud-ext-4e3">
            <title>The TSF shall include a platform firmware version identifier that is accessible by the update mechanism or to the user who asserts physical presence.</title>
          </f-element>
          <f-element id="fpt-tud-ext-4e4">
            <title>The TSF shall provide an observable indication of the success or failure of the update operation.</title>
            <note role="application">For success, this indication should include the version number of the newly installed firmware. Notification of failure could be through a beep code, an indication on a splash screen, or simple failure to continue functioning.</note>
          </f-element>
          <audit-event/>
        </f-component>
      </section>
      <!--5.1.7 Class: Trusted Path/Channels (FTP)-->
      <section id="ftp" title="Class: Trusted Path/Channels (FTP)">
        <ext-comp-def title="Trusted Channel Communications" fam-id="FTP_ITC_EXT">
          <fam-behavior>This family defines requirements for protection of data in transit between the TOE and its operational environment.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Encrypted Data Communications" fam-id="FTP_ITE_EXT">
          <fam-behavior>This family defines requirements for encryption of TSF data that is transmitted to an external entity over an insecure channel.</fam-behavior>
        </ext-comp-def>
        <ext-comp-def title="Physically Protected Channel" fam-id="FTP_ITP_EXT">
          <fam-behavior>This family defines requirements for use of physically protected communications mechanisms.</fam-behavior>
        </ext-comp-def>
        <!--FTP_ITC_EXT.1 Trusted Channel Communication-->
        <f-component cc-id="ftp_itc_ext.1" id="sfr-ftp-itc-ext-1" name="Trusted Channel Communication" status="sel-based">
          <depends on-sel="sel-fau-itc"/>
          <depends on-sel="sel-smf-remote-admin"/>
          <depends on-sel="sel-fdp-itc-ext-1e1-chan"/>
          <comp-lev>requires the TSF to implement one or more cryptographic protocols to secure connectivity between the TSF and various external entities.</comp-lev>
          <management>The following actions could be considered for the management functions in FMT:<h:ol type="a"><h:li>Ability to configure the cryptographic functionality.</h:li> </h:ol> </management>
          <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:<h:ol type="a"><h:li>Initiation of the trusted channel.</h:li> <h:li>Termination of the trusted channel.</h:li> <h:li>Failures of the trusted path functions.</h:li> </h:ol> </audit>
          <dependencies>No dependencies.</dependencies>
          <f-element id="ftp-itc-ext-1e1">
            <title>The TSF shall use <selectables linebreak="yes"><selectable id="sel-itc-tls" >TLS as conforming to the <xref to="pkg-tls"/></selectable><selectable id="sel-itc-https" >TLS/HTTPS as conforming to FCS_HTTPS_EXT.1</selectable><selectable id="sel-itc-ipsec" >IPsec as conforming to FCS_IPSEC_EXT.1</selectable><selectable id="sel-itc-ssh" >SSH as conforming to the <xref to="pkg-ssh"/></selectable> </selectables> protocols with <selectables onlyone="yes" linebreak="yes"><selectable id="sel-itc-certauth" >X.509 certificate-based authentication of the remote peer</selectable><selectable id="ftp_itc_ext.1.1_1" >non-certificate-based authentication of the remote peer</selectable><selectable id="ftp_itc_ext.1.1_2" >no authentication of the remote peer</selectable> </selectables> to provide a communication channel between itself and <selectables linebreak="yes"><selectable id="ftp_itc_ext.1.1_3" >audit servers (as required by FAU_STG.1.1 if selected)</selectable><selectable id="ftp_itc_ext.1.1_4" >remote administrators (as required by FTP_TRP.1.1 if selected in FMT_MOF.1)</selectable><selectable id="ftp_itc_ext.1.1_6" ><assignable>other capabilities</assignable></selectable><selectable id="ftp_itc_ext.1.1_7" exclusive="yes">no other capabilities</selectable> </selectables> that is logically distinct from other communication channels, provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.</title>
            <ext-comp-def-title><title>The TSF shall use<assignable>trusted channel protocols</assignable>protocols with<assignable>authentication mechanism</assignable>to provide a communication channel between itself and<assignable>external IT entities</assignable>that is logically distinct from other communication channels, provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.</title></ext-comp-def-title>
            <note role="application">This SFR is included in the ST if a trusted channel is used to offload audit data or if the platform is administered remotely. That is, if "<h:i>a trusted channel as specified in FTP_ITC_EXT.1</h:i> " is selected in FAU_STG.1.1, if "<h:i>physically protected channels as specified in FTP_ITP_EXT.1</h:i> " is selected in FDP_ITC_EXT.1.1, or if "<h:i>remotely</h:i> " is selected in Management Function 1 in FMT_SMF.1.1.<h:p/> If the ST Author selects either "<h:i>TLS</h:i> " or "<h:i>HTTPS</h:i> ," the TOE must be validated against the Functional Package for TLS. This PP does not mandate that a product implement TLS with mutual authentication, but if the product includes the capability to perform TLS with mutual authentication, then mutual authentication must be included within the TOE boundary.<h:p/> If the ST Author selects "<h:i>SSH</h:i> ," the TOE must conform to<xref to="pkg-ssh"/> .<h:p/> If the ST Author selects "<h:i>certificate-based authentication of the remote peer</h:i> ," then the TOE must conform to<xref to="pkg-x509"/> .<h:p/> Claims from this package are only required to the extent that they are needed to support the functionality required by the trusted protocols that are claimed.<h:p/> If the TSF implements a protocol that requires the validation of a certificate presented by an external entity, FIA_X509_EXT.1 and FIA_X509_EXT.2 will be claimed. FIA_TSM_EXT.1 may also be claimed if the TSF implements its own trust store. If the TSF implements a protocol that requires the presentation of any certificates to an external entity, FIA_XCU_EXT.2 will be claimed. FIA_X509_EXT.3 will also be claimed, along with any applicable dependencies, depending on how the certificates presented by the TOE are obtained.<h:p/> "<h:i>No authentication of the remote peer</h:i> " should be selected only if the TOE is acting as a server in a non-mutual authentication configuration.<h:p/> .</note>
            <aactivity level="component">
              <TSS>The evaluator will review the TSS to determine that it lists all trusted channels the TOE uses for remote communications, including both the external IT entities and remote users that use the channel as well as the protocol that is used for each.</TSS>
              <Guidance>The evaluator shall confirm that the AGD contains instructions for establishing connections to external IT entities and remote users.</Guidance>
              <Tests>The evaluator will configure the TOE to communicate with each external IT entity and type of remote user identified in the TSS. The evaluator will monitor network traffic while the VS performs communication with each of these destinations. The evaluator will ensure that for each session a trusted channel was established in conformance with the protocols identified in the selection.</Tests>
            </aactivity>
          </f-element>
          <audit-event>
            <audit-event-descr>Initiation of the trusted channel.</audit-event-descr>
            <audit-event-info>User ID and remote source (IP Address) if feasible.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Termination of the trusted channel.</audit-event-descr>
            <audit-event-info>User ID and remote source (IP Address) if feasible.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Failures of the trusted path functions.</audit-event-descr>
            <audit-event-info>User ID and remote source (IP Address) if feasible.</audit-event-info>
          </audit-event>
        </f-component>
        <!--FTP_ITE_EXT.1 Encrypted Data Communications-->
        <f-component cc-id="ftp_ite_ext.1" id="sfr-ftp-ite-ext-1" name="Encrypted Data Communications" status="sel-based">
          <depends on-sel="sel-fdp-itc-ext-1e1-buf"/>
          <comp-lev>requires the TSF to encrypt data in the specified manner using key data that is provided to an external entity in the specified manner.</comp-lev>
          <dependencies><h:br/>FCS_COP.1 Cryptographic Operation</dependencies>
          <f-element id="ftp-ite-ext-1e1">
            <title>The TSF shall encrypt data for transfer between the TOE and <assignable>list of entities external to the TOE</assignable> using a cryptographic algorithm and key size as specified in FCS_COP.1/SKC, and using <selectables linebreak="yes"><selectable id="ftp_ite_ext.1.1_2" >Pre-shared keys</selectable><selectable id="sel-ftp-ite-ext-1-est" >Keys established according to FCS_CKM.2</selectable><selectable id="sel-ftp-ite-ext-1-itp" >Keys exchanged using a physically protected communication mechanism conformant with FTP_ITP_EXT.1</selectable> </selectables>.</title>
            <ext-comp-def-title><title>The TSF shall encrypt data for transfer between the TOE and<assignable>list of entities external to the TOE</assignable>using a cryptographic algorithm and key size as specified in FCS_COP.1, and using<assignable>key establishment mechanism</assignable>.</title></ext-comp-def-title>
            <note role="application">This SFR must be claimed if "<h:i>encrypted data buffers as specified in FTP_ITE_EXT.1</h:i> " is selected in FDP_ITC_EXT.1.<h:p/> This requirement applies to encrypted data communications between the TOE and external entities that do not use a physically protected mechanism conforming to FTP_ITP_EXT.1, or a cryptographically protected data channel as conforming to FTP_ITC_EXT.1. For example, if data is transferred through encrypted buffers (or blobs), then this requirement applies. This requirement would apply, for example, for communications implemented through a shared data buffer.</note>
            <aactivity level="component">
              <TSS>The evaluator shall review the TSS to determine that it lists all encryption mechanisms the TOE uses for protected external communications, along with the types of communications protected using each mechanism.</TSS>
              <Guidance/>
              <Tests>The evaluator shall configure the TOE to communicate with each external entity identified in the TSS. The evaluator shall initiate a transaction that will result in data being transferred to the TOE through the mechanism and other data returned to the initiating entity through the mechanism. The evaluator must verify that the data returned to the entity was encrypted using the documented mechanism when received.</Tests>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FTP_ITP_EXT.1 Physically Protected Channel-->
        <f-component cc-id="ftp_itp_ext.1" id="sfr-ftp-itp-ext-1" name="Physically Protected Channel" status="sel-based">
          <depends on-sel="sel-fdp-itc-ext-1e1-phys"/>
          <depends on-sel="sel-ftp-ite-ext-1-itp"/>
          <comp-lev>requires the TSF to use a physically protected channel for transmission of data to an external entity.</comp-lev>
          <dependencies>No dependencies.</dependencies>
          <f-element id="ftp-itp-ext-1e1">
            <title>The TSF shall provide a physically protected communication channel between itself and <assignable>list of other IT entities within the same platform</assignable>.</title>
            <note role="application">This SFR must be claimed if "<h:i>physically protected channels as specified in FTP_ITP_EXT.1</h:i> " is selected in either FDP_ITC_EXT.1, or if "<h:i>Keys exchanged using a physically protected communication mechanism conformant with FTP_ITP_EXT.1</h:i> " is selected in FTP_ITE_EXT.1.1.</note>
            <aactivity level="component">
              <TSS>The evaluator shall review the TSS to determine that it lists all mechanisms the TOE uses for physically protected external communications, along with the types of communications protected using each mechanism.</TSS>
              <Guidance/>
              <Tests/>
            </aactivity>
          </f-element>
          <audit-event/>
        </f-component>
        <!--FTP_TRP.1 Trusted Path-->
        <f-component cc-id="ftp_trp.1" id="sfr-ftp-trp-1" name="Trusted Path" status="sel-based">
          <depends on-sel="sel-smf-remote-admin"/>
          <f-element id="ftp-trp-1e1">
            <title>The TSF shall <h:b>use a trusted channel as specified in FTP_ITC_EXT.1 to</h:b>  provide a <h:b>trusted</h:b>  communication path between itself and [ <h:i>remote</h:i>  ] <h:b>Administrators</h:b>  that is logically distinct from other communication paths and provides assured identification of its end points and protection of the communicated data from [ <h:i>modification, disclosure</h:i>  ].</title>
            <aactivity level="component">
              <TSS>The evaluator shall examine the TSS to determine that the methods of remote TOE administration are indicated, along with how those communications are protected. The evaluator shall also confirm that all protocols listed in the TSS in support of TOE administration are consistent with those specified in the requirement, and are included in the requirements in the ST.</TSS>
              <Guidance>The evaluator shall confirm that the AGD contains instructions for establishing the remote administrative sessions for each supported method.</Guidance>
              <Tests>
                The evaluator shall also perform the following tests:
                <testlist>
                  <test>The evaluator shall ensure that communications using each specified (in the AGD) remote administration method is tested during the course of the evaluation, setting up the connections as described in the AGD and ensuring that communication is successful.</test>
                  <test>For each method of remote administration supported, the evaluator shall follow the AGD to ensure that there is no available interface that can be used by a remote user to establish remote administrative sessions without invoking the trusted path.</test>
                  <test>The evaluator shall ensure, for each method of remote administration, the channel data is not sent in plaintext.</test>
                  <test>The evaluator shall ensure, for each method of remote administration, modification of the channel data is detected by the TOE.</test>
                </testlist>
                Additional evaluation activities are associated with the specific protocols.
              </Tests>
            </aactivity>
          </f-element>
          <f-element id="ftp-trp-1e2">
            <title>The TSF shall permit [ <h:i>remote<h:b>Administrators</h:b></h:i>  ] to initiate communication via the trusted path.</title>
          </f-element>
          <f-element id="ftp-trp-1e3">
            <title>The TSF shall require the use of the trusted path for [ <h:i>[all remote administration actions]</h:i>  ].</title>
            <note role="application">This SFR is included in the ST if "<h:i>remotely</h:i> " is selected in Management Function 1 of FMT_SMF.1.1.<h:p/> Protocols used to implement the remote administration trusted channel must be selected in FTP_ITC_EXT.1.<h:p/> This requirement ensures that authorized remote Administrators initiate all communication with the TOE via a trusted path, and that all communications with the TOE by remote Administrators is performed over this path. The data passed in this trusted communication channel are encrypted as defined the protocol chosen in the first selection in FTP_ITC_EXT.1.</note>
          </f-element>
          <audit-event>
            <audit-event-descr>Initiation of the trusted channel.</audit-event-descr>
            <audit-event-info>Administrator ID and remote source (IP Address), if feasible.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Termination of the trusted channel.</audit-event-descr>
            <audit-event-info>Administrator ID and remote source (IP Address), if feasible.</audit-event-info>
          </audit-event>
          <audit-event>
            <audit-event-descr>Failures of the trusted path functions.</audit-event-descr>
            <audit-event-info>User ID and remote source (IP Address), if feasible.</audit-event-info>
          </audit-event>
        </f-component>
      </section>
    </sec:SFRs>
    <!--5.2 Security Assurance Requirements-->
    <section title="Security Assurance Requirements" id="SARs">
      The Security Objectives in<xref to="SecurityObjectivesTOE"/> were constructed to address threats identified in<xref to="Threats"/> . The Security Functional Requirements (SFRs) in<xref to="SFRs"/> are a formal instantiation of the Security Objectives. The PP identifies the Security Assurance Requirements (SARs) to frame the extent to which the evaluator assesses the documentation applicable for the evaluation and performs independent testing.<h:p/> This section lists the set of SARs from CC part 3 that are required in evaluations against this PP. Individual Evaluation Activities to be performed are specified both in<xref to="SFRs"/> as well as in this section.<h:p/> The general model for evaluation of GPCPs against STs written to conform to this PP is as follows:<h:p/> After the ST has been approved for evaluation, the ITSEF will obtain the TOE, supporting environmental IT, and the administrative/user guides for the TOE. The ITSEF is expected to perform actions mandated by the Common Evaluation Methodology (CEM) for the ASE and ALC SARs. The ITSEF also performs the Evaluation Activities contained within<xref to="SFRs"/> , which are intended to be an interpretation of the other CEM assurance requirements as they apply to the specific technology instantiated in the TOE. The Evaluation Activities that are captured in<xref to="SFRs"/> also provide clarification as to what the developer needs to provide to demonstrate the TOE is compliant with the PP.
      <section title="Class ASE: Security Target" id="ase">As per ASE activities defined in<xref to="bibCEM"/> .</section>
      <section title="Class ADV: Development" id="adv">
        The information about the TOE is contained in the guidance documentation available to the end user as well as the TSS portion of the ST. The TOE developer must concur with the description of the product that is contained in the TSS as it relates to the functional requirements. The Evaluation Activities contained in<xref to="SFRs"/> should provide the ST Authors with sufficient information to determine the appropriate content for the TSS section.
        <a-component cc-id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)">
          The functional specification describes the TSFIs. It is not necessary to have a formal or complete specification of these interfaces. Additionally, because TOEs conforming to this PP will necessarily have interfaces to the Operational Environment that are not directly invokable by TOE users, there is little point specifying that such interfaces be described in and of themselves since only indirect testing of such interfaces may be possible. For this PP, the activities for this family should focus on understanding the interfaces presented in the TSS, KMD, and any other supplemental evidence that may be required to satisfy the TSS Evaluation Activities, such as a non-public interface specification, in response to the functional requirements and the interfaces presented in the AGD documentation. No additional "functional specification" documentation is necessary to satisfy the Evaluation Activities specified. The interfaces that need to be evaluated are characterized through the information needed to perform the Evaluation Activities listed, rather than as an independent, abstract list.
          <a-element type="D">
            <title>The developer shall provide a functional specification.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The developer shall provide a tracing from the functional specification to the SFRs.</title>
            <note role="application">As indicated in the introduction to this section, the functional specification comprises the information contained in the TSS, KMD, and any additional supplemental documentation. The developer may reference a website accessible to application developers and the evaluator. The Evaluation Activities in the functional requirements point to evidence that should exist in the documentation and TSS section; since these are directly associated with the SFRs, the tracing in element ADV_FSP.1.2D is implicitly already done and no additional documentation is necessary.</note>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The functional specification shall describe the purpose and method of use for each SFR-enforcing and SFR-supporting TSFI.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The functional specification shall identify all parameters associated with each SFR-enforcing and SFR-supporting TSFI.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The functional specification shall provide rationale for the implicit categorization of interfaces as SFR-non-interfering.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The tracing shall demonstrate that the SFRs trace to TSFIs in the functional specification.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall determine that the functional specification is an accurate and complete instantiation of the SFRs.</title>
            <aactivity>There are no specific Evaluation Activities associated with these SARs, except ensuring the information is provided. The functional specification documentation is provided to support the evaluation activities described in<xref to="SFRs"/> , and other activities described for AGD, ATE, and AVA SARs. The requirements on the content of the functional specification information is implicitly assessed by virtue of the other Evaluation Activities being performed; if the evaluator is unable to perform an activity because there is insufficient interface information, then an adequate functional specification has not been provided.</aactivity>
          </a-element>
        </a-component>
      </section>
      <section title="Class AGD: Guidance Documentation" id="agd">
        The guidance documents will be provided with the ST. Guidance must include a description of how the IT personnel verifies that the Operational Environment can fulfill its role for the security functionality. The documentation should be in an informal style and readable by the IT personnel. Guidance must be provided for every operational environment that the product supports as claimed in the ST. This guidance includes instructions to successfully install the TSF in that environment; and Instructions to manage the security of the TSF as a product and as a component of the larger operational environment. Guidance pertaining to particular security functionality is also provided; requirements on such guidance are contained in the Evaluation Activities specified with each requirement.
        <a-component cc-id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">
          <a-element type="D">
            <title>The developer shall provide operational user guidance.</title>
            <note role="application">The operational user guidance does not have to be contained in a single document. Guidance to users, administrators and application developers can be spread among documents or web pages. Rather than repeat information here, the developer should review the Evaluation Activities for this component to ascertain the specifics of the guidance that the evaluator will be checking for. This will provide the necessary information for the preparation of acceptable guidance.</note>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall describe, for each user role, the user-accessible functions and privileges that should be controlled in a secure processing environment, including appropriate warnings.</title>
            <note role="application">User and administrator are to be considered in the definition of user role.</note>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall describe, for each user role, how to use the available interfaces provided by the TOE in a secure manner.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall describe, for each user role, the available functions and interfaces, in particular all security parameters under the control of the user, indicating secure values as appropriate.</title>
            <note role="application">This portion of the operational user guidance should be presented in the form of a checklist that can be quickly executed by IT personnel (or end-users, when necessary) and suitable for use in compliance activities. When possible, this guidance is to be expressed in the eXtensible Configuration Checklist Description Format (XCCDF) to support security automation. Minimally, it should be presented in a structured format which includes a title for each configuration item, instructions for achieving the secure configuration, and any relevant rationale.</note>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall, for each user role, clearly present each type of security-relevant event relative to the user-accessible functions that need to be performed, including changing the security characteristics of entities under the control of the TSF.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall identify all possible modes of operation of the TOE (including operation following failure or operational error), their consequences, and implications for maintaining secure operation.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall, for each user role, describe the security measures to be followed in order to fulfill the security objectives for the operational environment as described in the ST.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The operational user guidance shall be clear and reasonable.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>Some of the contents of the operational guidance are verified by the Evaluation Activities in<xref to="SFRs"/> and evaluation of the TOE according to the<xref to="bibCEM"/> . The following additional information is also required:<h:ul><h:li>If cryptographic functions are provided by the TOE, the operational guidance shall contain instructions for configuring the cryptographic engine associated with the evaluated configuration of the TOE. It shall provide a warning to the administrator that use of other cryptographic engines was not evaluated nor tested during the CC evaluation of the TOE.</h:li> <h:li>If the TOE supports firmware updates, the documentation must describe the process for verifying updates to the TOE by verifying a digital signature – this may be done by the TOE or the underlying platform. The evaluator will verify that this process includes the following steps: Instructions for obtaining the update itself. This should include instructions for making the update accessible to the TOE (e.g., placement in a specific directory). Instructions for initiating the update process, as well as discerning whether the process was successful or unsuccessful. This includes generation of the hash/digital signature.</h:li> </h:ul> The TOE will likely contain security functionality that does not fall in the scope of evaluation under this PP. The operational guidance shall make it clear to an administrator which security functionality is covered by the evaluation activities.</aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
          <a-element type="D">
            <title>The developer shall provide the TOE, including its preparative procedures.</title>
            <note role="application">As with the operational guidance, the developer should look to the Evaluation Activities to determine the required content with respect to preparative procedures.</note>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The preparative procedures shall describe all the steps necessary for secure acceptance of the delivered TOE in accordance with the developer's delivery procedures.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The preparative procedures shall describe all the steps necessary for secure installation of the TOE and for the secure preparation of the operational environment in accordance with the security objectives for the operational environment as described in the ST.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall apply the preparative procedures to confirm that the TOE can be prepared securely for operation.</title>
            <aactivity>As indicated in the introduction above, there are significant expectations with respect to the documentation—especially when configuring the operational environment to support TOE functional requirements.</aactivity>
          </a-element>
        </a-component>
      </section>
      <section title="Class ALC: Life-cycle Support" id="alc">
        At the assurance level provided for TOEs conformant to this PP, life-cycle support is limited to end-user-visible aspects of the life-cycle, rather than an examination of the TOE vendor’s development and configuration management process. This is not meant to diminish the critical role that a developer’s practices play in contributing to the overall trustworthiness of a product; rather, it is a reflection on the information to be made available for evaluation at this assurance level.
        <a-component cc-id="alc_cmc.1" name="Labeling of the TOE (ALC_CMC.1)">
          This component is targeted at identifying the TOE such that it can be distinguished from other products or versions from the same vendor and can be easily specified when being procured by an end user.
          <a-element type="D">
            <title>The developer shall provide the TOE and a reference for the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The TOE shall be labeled with a unique reference.</title>
            <note role="application">Unique reference information includes:<h:ul><h:li>TOE Model Name</h:li> <h:li>TOE Version</h:li> <h:li>TOE Description</h:li> <h:li>Software Identification (SWID) tags, if available</h:li> </h:ul> </note>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator will check the ST to ensure that it contains sufficient information to specifically identify the the TOE and the version that meets the requirements of the ST. Further, the evaluator will check the AGD guidance and TOE samples received for testing to ensure that the version number is consistent with that in the ST. If the vendor maintains a web site advertising the TOE, the evaluator will examine the information on the web site to ensure that the information in the ST is sufficient to distinguish the product.</aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">
          Given the scope of the TOE and its associated evaluation evidence requirements, this component’s Evaluation Activities are covered by the Evaluation Activities listed for ALC_CMC.1.
          <a-element type="D">
            <title>The developer shall provide a configuration list for the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The configuration list shall include the following: the TOE itself; and the evaluation evidence required by the SARs.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The configuration list shall uniquely identify the configuration items.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The "evaluation evidence required by the SARs" in this PP is limited to the information in the ST coupled with the guidance provided to administrators and users under the AGD requirements. By ensuring that the OS is specifically identified and that this identification is consistent in the ST and in the AGD guidance (as done in the Evaluation Activity for ALC_CMC.1), the evaluator implicitly confirms the information required by this component. Life-cycle support is targeted aspects of the developer’s life-cycle and instructions to providers of applications for the developer’s devices, rather than an in-depth examination of the TSF manufacturer’s development and configuration management process. This is not meant to diminish the critical role that a developer’s practices play in contributing to the overall trustworthiness of a product; rather, it’s a reflection on the information to be made available for evaluation.<h:p/> The evaluator will ensure that the developer has identified (in guidance documentation for application developers concerning the targeted platform) one or more development environments appropriate for use in developing applications for the developer’s platform. For each of these development environments, the developer shall provide information on how to configure the environment to ensure that buffer overflow protection mechanisms in the environment(s) are invoked (e.g., compiler and linker flags). The evaluator will ensure that this documentation also includes an indication of whether such protections are on by default, or have to be specifically enabled. The evaluator will ensure that the TSF is uniquely identified (with respect to other products from the TSF vendor), and that documentation provided by the developer in association with the requirements in the ST is associated with the TSF using this unique identification.</aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="alc_flr.1" name="Basic Flaw Remediation (ALC_FLR.1)" status="optional">
          <a-element type="D">
            <title>The developer shall document and provide flaw remediation procedures addressed to TOE developers.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the procedures used to track all reported security flaws in each release of the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that a description of the nature and effect of each security flaw be provided, as well as the status of finding a correction to that flaw.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that corrective actions be identified for each of the security flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the methods used to provide flaw information, corrections and guidance on corrective actions to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator shall inspect the TSS and verify it identifies how to access the flaw remediation procedures.</aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="alc_flr.2" name="Flaw Reporting Procedures (ALC_FLR.2)" status="optional">
          <a-element type="D">
            <title>The developer shall document and provide flaw remediation procedures addressed to TOE developers.</title>
            <aactivity/>
          </a-element>
          <a-element type="D">
            <title>The developer shall establish a procedure for accepting and acting upon all reports of security flaws and requests for corrections to those flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="D">
            <title>The developer shall provide flaw remediation guidance addressed to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the procedures used to track all reported security flaws in each release of the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that a description of the nature and effect of each security flaw be provided, as well as the status of finding a correction to that flaw.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that corrective actions be identified for each of the security flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the methods used to provide flaw information, corrections and guidance on corrective actions to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall describe a means by which the developer receives from TOE users reports and enquiries of suspected security flaws in the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The procedures for processing reported security flaws shall ensure that any reported flaws are remediated and the remediation procedures issued to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The procedures for processing reported security flaws shall provide safeguards that any corrections to these security flaws do not introduce any new flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation guidance shall describe a means by which TOE users report to the developer any suspected security flaws in the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator shall inspect the TSS and verify it identifies how to access the flaw remediation procedures.<h:p>The evaluator shall inspect the guidance document and verify it describes how to access the flaw remediation guidance.</h:p> </aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="alc_flr.3" name="Systematic Flaw Remediation (ALC_FLR.3)" status="optional">
          <a-element type="D">
            <title>The developer shall document and provide flaw remediation procedures addressed to TOE developers.</title>
            <aactivity/>
          </a-element>
          <a-element type="D">
            <title>The developer shall establish a procedure for accepting and acting upon all reports of security flaws and requests for corrections to those flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="D">
            <title>The developer shall provide flaw remediation guidance addressed to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the procedures used to track all reported security flaws in each release of the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that a description of the nature and effect of each security flaw be provided, as well as the status of finding a correction to that flaw.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall require that corrective actions be identified for each of the security flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures documentation shall describe the methods used to provide flaw information, corrections and guidance on corrective actions to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall describe a means by which the developer receives from TOE users reports and enquiries of suspected security flaws in the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation procedures shall include a procedure requiring timely response and the automatic distribution of security flaw reports and the associated corrections to registered users who might be affected by the security flaw.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The procedures for processing reported security flaws shall ensure that any reported flaws are remediated and the remediation procedures issued to TOE users.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The procedures for processing reported security flaws shall provide safeguards that any corrections to these security flaws do not introduce any new flaws.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation guidance shall describe a means by which TOE users report to the developer any suspected security flaws in the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation guidance shall describe a means by which TOE users may register with the developer, to be eligible to receive security flaw reports and corrections.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The flaw remediation guidance shall identify the specific points of contact for all reports and enquiries about security issues involving the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator shall inspect the TSS and verify it identifies how to access the flaw remediation procedures.<h:p>The evaluator shall inspect the guidance document and verify it describes how to access the flaw remediation guidance.</h:p> </aactivity>
          </a-element>
        </a-component>
        <a-component cc-id="alc_tsu_ext.1" name="Timely Security Updates">
          This component requires the TOE developer, in conjunction with any other necessary parties, to provide information as to how the TOE is updated to address security issues in a timely manner. The documentation describes the process of providing updates to the public from the time a security flaw is reported/discovered, to the time an update is released. This description includes the parties involved (e.g., developer/OEM, component manufacturers) and the steps that are performed (e.g., developer testing), including worst case time periods, before an update is made available to the public.<h:p/> For TOE implementations with immutable firmware, update might not be possible other than through replacement of the entire device. In this case, delivery of a new device with the necessary security fixes would constitute deployment of the security update.
          <a-element type="D">
            <title>The developer shall provide a description in the TSS of how timely security updates are made to the TOE.</title>
            <aactivity/>
          </a-element>
          <a-element type="D">
            <title>The developer shall provide a description in the TSS of how users are notified when updates change security properties or the configuration of the product.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The description shall include the process for creating and deploying security updates for TOE firmware.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The description shall include the mechanisms publicly available for reporting security issues pertaining to the TOE.</title>
            <note role="application">The reporting mechanism could include web sites, email addresses, as well as a means to protect the sensitive nature of the report (e.g., public keys that could be used to encrypt the details of a proof-of-concept exploit).</note>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity>The evaluator will verify that the TSS contains a description of the timely security update process used by the developer to create and deploy security updates for TOE firmware. The evaluator will also verify that, in addition to the TOE developer’s process, any third-party processes are also addressed in the description. The evaluator will also verify that each mechanism for deployment of security updates is described.<h:p/> The evaluator will verify that, for each deployment mechanism described for the update process, the TSS lists a time between public disclosure of a vulnerability and public availability of the security update to the TOE patching this vulnerability. The evaluator will verify that this time is expressed in a number or range of days.<h:p/> The evaluator will verify that this description includes the publicly available mechanisms (including either an email address or website) for reporting security issues related to the TOE. The evaluator shall verify that the description of this mechanism includes a method for protecting the report either using a public key for encrypting email or a trusted channel for a website.</aactivity>
          </a-element>
        </a-component>
      </section>
      <section title="Class ATE: Tests" id="ate">
        Testing is specified for functional aspects of the system as well as aspects that take advantage of design or implementation weaknesses. The former is done through the ATE_IND family, while the latter is through the AVA_VAN family. At the assurance level specified in this PP, testing is based on advertised functionality and interfaces with dependency on the availability of design information. One of the primary outputs of the evaluation process is the test report as specified in the following requirements.
        <a-component cc-id="ate_ind.1" name="Independent Testing – Conformance (ATE_IND.1)">
          Testing is performed to confirm the functionality described in the TSS as well as the administrative (including configuration and operational) documentation provided. The focus of the testing is to confirm that the requirements specified in<xref to="SFRs"/> being met, although some additional testing is specified for SARs in<xref to="SARs"/> . The Evaluation Activities identify the additional testing activities associated with these components. The evaluator produces a test report documenting the plan for and results of testing, as well as coverage arguments focused on the hardware configurations that are claiming conformance to this PP. Given the scope of the TOE and its associated evaluation evidence requirements, this component’s Evaluation Activities are covered by the Evaluation Activities listed for ALC_CMC.1.
          <a-element type="D">
            <title>The developer shall provide the TOE for testing.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The TOE shall be suitable for testing.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator<h:i>shall confirm</h:i> that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall test a subset of the TSF to confirm that the TSF operates as specified.</title>
            <aactivity>The evaluator will prepare a test plan and report documenting the testing aspects of the system, including any application crashes during testing. The evaluator shall determine the root cause of any application crashes and include that information in the report. The test plan covers all of the testing actions contained in the<xref to="bibCEM"/> and the body of this PP’s Assurance Activities.<h:p/> While it is not necessary to have one test case per test listed in an Assurance Activity, the evaluator must document in the test plan that each applicable testing requirement in the ST is covered. The test plan identifies the platforms to be tested, and for those platforms not included in the test plan but included in the ST, the test plan provides a justification for not testing the platforms. This justification must address the differences between the tested platforms and the untested platforms, and make an argument that the differences do not affect the testing to be performed. It is not sufficient to merely assert that the differences have no affect; rationale must be provided. If all platforms claimed in the ST are tested, then no rationale is necessary. The test plan describes the composition of each platform to be tested, and any setup that is necessary beyond what is contained in the AGD documentation. It should be noted that the evaluator is expected to follow the AGD documentation for installation and setup of each platform either as part of a test or as a standard pre-test condition. This may include special test drivers or tools. For each driver or tool, an argument (not just an assertion) should be provided that the driver or tool will not adversely affect the performance of the functionality by the OS and its platform.<h:p/> This also includes the configuration of the cryptographic engine to be used. The cryptographic algorithms implemented by this engine are those specified by this PP and used by the cryptographic protocols being evaluated (IPsec, TLS). The test plan identifies high-level test objectives as well as the test procedures to be followed to achieve those objectives. These procedures include expected results.<h:p/> The test report (which could just be an annotated version of the test plan) details the activities that took place when the test procedures were executed, and includes the actual results of the tests. This shall be a cumulative account, so if there was a test run that resulted in a failure; a fix installed; and then a successful re-run of the test, the report would show a “fail” and “pass” result (and the supporting details), and not just the “pass” result.</aactivity>
          </a-element>
        </a-component>
      </section>
      <section title="Class AVA: Vulnerability Assessment" id="ava">
        For the first generation of this protection profile, the evaluation lab is expected to survey open sources to discover what vulnerabilities have been discovered in these types of products. In most cases, these vulnerabilities will require sophistication beyond that of a basic attacker. Until penetration tools are created and uniformly distributed to the evaluation labs, the evaluator will not be expected to test for these vulnerabilities in the TOE. The labs will be expected to comment on the likelihood of these vulnerabilities given the documentation provided by the vendor. This information will be used in the development of penetration testing tools and for the development of future protection profiles.
        <a-component cc-id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
          <a-element type="D">
            <title>The developer shall provide the TOE for testing.</title>
            <aactivity/>
          </a-element>
          <a-element type="C">
            <title>The TOE shall be suitable for testing.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall perform a search of public domain sources to identify potential vulnerabilities in the TOE.</title>
            <note role="application">Public domain sources include the Common Vulnerabilities and Exposures (CVE) dictionary for publicly known vulnerabilities.</note>
            <aactivity/>
          </a-element>
          <a-element type="E">
            <title>The evaluator shall conduct penetration testing, based on the identified potential vulnerabilities, to determine that the TOE is resistant to attacks performed by an attacker possessing Basic attack potential.</title>
            <aactivity>The evaluator will generate a report to document their findings with respect to this requirement. This report could physically be part of the overall test report mentioned in ATE_IND, or a separate document. The evaluator performs a search of public information to find vulnerabilities that have been found in similar applications with a particular focus on network protocols the application uses and document formats it parses. The evaluator documents the sources consulted and the vulnerabilities found in the report.<h:p/> For each vulnerability found, the evaluator either provides a rationale with respect to its non-applicability, or the evaluator formulates a test (using the guidelines provided in ATE_IND) to confirm the vulnerability, if suitable. Suitability is determined by assessing the attack vector needed to take advantage of the vulnerability. If exploiting the vulnerability requires expert skills and an electron microscope, for instance, then a test would not be suitable and an appropriate justification would be formulated.</aactivity>
          </a-element>
        </a-component>
      </section>
    </section>
  </sec:Security_Requirements>
  <appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs"><!--   Boilerplate goes here   --><h:b><ctr ctr-type="Table" pre="Table " id="imp-sat-reqs-table">: Implicitly Satisfied Requirements</ctr></h:b><h:table><h:tr class="header"><h:td>Requirement</h:td><h:td>Rationale for Satisfaction</h:td></h:tr><h:tr><h:td>FIA_UAU.1 – Timing of Authentication</h:td><h:td>FMT_CFG_EXT.1 has a dependency on FIA_UAU.1 because it cannot exist unless the TOE supports an authentication mechanism.</h:td></h:tr><!-- <h:tr> <h:td>FCS_CKM.4 – Cryptographic Key Destruction</h:td> <h:td> FCS_CKM.2 has a dependency on FCS_CKM.4. The extended SFR FCS_CKM_EXT.4 addresses this dependency by defining an alternate requirement for key destruction. </h:td> </h:tr> <h:tr> <h:td>FCS_CKM.4 – Cryptographic Key Destruction</h:td> <h:td> Each iteration of FCS_COP.1 has a dependency on FCS_CKM.4. The extended SFR FCS_CKM_EXT.4 addresses this dependency by defining an alternate requirement for key destruction. </h:td> </h:tr> <h:tr> <h:td>FIA_UID.1 – Timing of Identification</h:td> <h:td> FMT_SMR.2 has a dependency on FIA_UID.1. The extended SFR FIA_UID_EXT.1 expresses this dependency by also requiring user identification for use of the TOE. </h:td> </h:tr> <h:tr> <h:td>FPT_STM.1 – Reliable Time Stamps</h:td> <h:td> FAU_GEN.1 has a dependency on FPT_STM.1. While not explicitly stated in the PP, it is assumed that this will be provided by the underlying hardware platform on which the TOE is installed. This is because the TOE is installed as a software or firmware product that runs on general-purpose computing hardware so a hardware clock is assumed to be available. </h:td> </h:tr> <h:tr> <h:td>FPT_STM.1 – Reliable Time Stamps</h:td> <h:td> FIA_X509_EXT.1 has a dependency on FPT_STM.1. While not explicitly stated in the PP, it is assumed that this will be provided by the underlying hardware platform on which the TOE is installed. This is because the TOE is installed as a software or firmware product that runs on general-purpose computing hardware so a hardware clock is assumed to be available. </h:td> </h:tr> --></h:table></appendix>
  <appendix title="Entropy Documentation and Assessment" id="appendix-entropy"><section id="s-design" title="Design Description">Documentation shall include the design of the entropy source as a whole, including the interaction of all entropy source components. It will describe the operation of the entropy source to include how it works, how entropy is produced, and how unprocessed (raw) data can be obtained from within the entropy source for testing purposes. The documentation should walk through the entropy source design indicating where the random comes from, where it is passed next, any post-processing of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally, how it is output from the entropy source. Any conditions placed on the process (e.g., blocking) should also be described in the entropy source design. Diagrams and examples are encouraged.<h:p/>This design must also include a description of the content of the security boundary of the entropy source and a description of how the security boundary ensures that an adversary outside the boundary cannot affect the entropy rate.</section><section id="s-justification" title="Entropy Justification">There should be a technical argument for where the unpredictability in the source comes from and why there is confidence in the entropy source exhibiting probabilistic behavior (an explanation of the probability distribution and justification for that distribution given the particular source is one way to describe this). This argument will include a description of the expected entropy rate and explain how to ensure that sufficient entropy is going into the TOE randomizer seeding process. This discussion will be part of a justification for why the entropy source can be relied upon to produce bits with entropy.</section><section id="s-oc" title="Operating Conditions">Documentation will also include the range of operating conditions under which the entropy source is expected to generate random data. It will clearly describe the measures that have been taken in the system design to ensure the entropy source continues to operate under those conditions. Similarly, documentation shall describe the conditions under which the entropy source is known to malfunction or become inconsistent. Methods used to detect failure or degradation of the source shall be included.</section><section id="s-health" title="Health Testing">More specifically, all entropy source health tests and their rationale will be documented. This will include a description of the health tests, the rate and conditions under which each health test is performed (e.g., at startup, continuously, or on-demand), the expected results for each health test, and rationale indicating why each test is believed to be appropriate for detecting one or more failures in the entropy source.</section></appendix>
  <appendix title="Equivalency Guidelines" id="appendix-equiv"><section id="s-vm-intro" title="Introduction">The purpose of equivalence in PP-based evaluations is to find a balance between evaluation rigor and commercial practicability--to ensure that evaluations meet customer expectations while recognizing that there is little to be gained from requiring that every variation in a product or platform be fully tested. Generally, if a product is found to be compliant with a PP on a particular platform, then all equivalent products on equivalent platforms are also considered to be compliant with the PP. In this case, since the GPCP is itself a platform, only equivalent GPCP products are considered in the analysis.<h:p/>A vendor can make a claim of equivalence if the vendor believes that a particular instance of their product implements PP-specified security functionality in a way equivalent to the implementation of the same functionality on another instance of their product on which the functionality was tested. The product instances can differ in version number or feature level (model). Equivalence can be used to reduce the testing required across claimed evaluated configurations. It can also be used during Assurance Maintenance to reduce testing needed to add more evaluated configurations to a certification.<h:p/>These equivalency guidelines do not replace Assurance Maintenance requirements or NIAP Policy #5 requirements for CAVP certificates. Nor may equivalence be used to leverage evaluations with expired certifications.<h:p/>This appendix provides guidance for determining whether products are equivalent for purposes of evaluation against the GPCPPP. This guidance differs from that provided in other PPs in that a GPCP is itself a platform, and thus the distinction between product and platform is somewhat blurred. This equivalency analysis is adjusted to reflect this.<h:p/>For a GPCP, equivalence has two aspects:<h:br/><h:ol><h:li><h:b><h:i>Product Equivalence:</h:i></h:b>To be considered equivalent, GPCPs must be produced by the same vendor and support the same tenant software.</h:li><h:li><h:b><h:i>Technical Equivalence:</h:i></h:b>GPCPs may be considered equivalent if there are no differences between them with respect to their implementations of PP-specified security functionality.</h:li></h:ol><h:p/>The equivalency determination is made in accordance with these guidelines by the validator and scheme using information provided by the evaluator/vendor.</section><section id="s-approach" title="Approach to Equivalency Analysis">There are two scenarios for performing equivalency analysis. One is when a product has been certified and the vendor wants to show that a later product should be considered certified due to equivalence with the earlier product. The other is when multiple product variants are going though evaluation together and the vendor would like to reduce the amount of testing that must be done. The basic rules for determining equivalence are the same in both cases. But there is one additional consideration that applies to equivalence with previously certified products. That is, the product with which equivalence is being claimed must have a valid certification in accordance with scheme rules and the Assurance Maintenance process must be followed. If a product’s certification has expired, then equivalence cannot be claimed with that product.<h:p/>When performing equivalency analysis for a GPCP, the evaluator/vendor should first use the factors and guidelines for Product Equivalence to determine the set of products to be further considered.<h:p/>Each non-equivalent product for which compliance is claimed must be fully tested.<h:p/><h:b><h:i>“Differences in PP-Specified Security Functionality” Defined</h:i></h:b><h:br/>PP-specified security functionality implemented by the TOE that differs in actual implementation between versions or product models break equivalence for that functionality. Likewise, the TOE invokes PP-specified security functionality differently in different versions or models of the TOE, then equivalence is broken for that functionality.</section><section id="s-modelequiv" title="Specific Guidance for Determining Product Equivalence">Product Equivalence attempts to determine whether different feature levels or versions of the same product are equivalent for purposes of PP testing. For example, if a product has a “basic” edition and an “enterprise” edition, is it necessary to test both models? Or does testing one model provide sufficient confidence that both models are compliant?<h:p/><h:b><ctr ctr-type="Table" pre="Table " id="equiv-prod-model">: Factors for Determining Product Equivalence</ctr></h:b><h:br/><h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Factor</h:td><h:td valign="top">Same/Different</h:td><h:td valign="top">Guidance</h:td></h:tr><h:tr><h:td valign="top">Product Type</h:td><h:td valign="top">Different</h:td><h:td valign="top">Products in different product classes are not equivalent. Servers and EUDs are not equivalent.</h:td></h:tr><h:tr><h:td valign="top">Product Vendors</h:td><h:td valign="top">Different</h:td><h:td valign="top">Products manufactured by different vendors are not equivalent.</h:td></h:tr><h:tr><h:td rowspan="2" valign="top">PP-Specified Functionality</h:td><h:td valign="top">Same</h:td><h:td valign="top">If differences between products affect only non-PP-specified functionality, then the models are equivalent.</h:td></h:tr><h:tr><h:td valign="top">Different</h:td><h:td valign="top">If PP-specified security functionality is affected by the differences between products, then the products are not equivalent and must be tested separately. It is necessary to test only the functionality affected by the differences. If only differences are tested, then the differences must be enumerated, and for each difference the Vendor must provide an explanation of why each difference does or does not affect PP-specified functionality. If the products are fully tested separately, then there is no need to document the differences.</h:td></h:tr></h:table><h:p/></section><section id="ss-hardware-equiv" title="Technical Equivalence">Platform equivalence is based primarily on processor architecture and instruction sets.<h:p/>Technical equivalence is based primarily on processor architecture, instruction sets, and firmware versions. It is determined on a per-SFR basis.<h:p/>Platforms with different processor architectures and instruction sets are not equivalent. Processors with the same architecture that have instruction sets that are subsets or supersets of each other are not disqualified from being equivalent. If PP-specified security functionality takes the same code paths when executing on different processors of the same family, then the processors can be considered equivalent with respect to that functionality.<h:p/>For example, if for some PP-specified security functionality, one code path is followed on platforms that support the AES-NI instruction and another on platforms that do not, then those two platforms are not equivalent with respect to that functionality. But if the same path is followed whether or not the platform supports AES-NI, then the platforms are equivalent with respect to that functionality.<h:p/>Platforms that run the same versions of the same firmware are considered equivalent with respect to any PP-specified security functionality implemented by that firmware. If firmware versions are different, then more in-depth analysis is required to determine whether the security functionality is implemented equivalently.<h:p/>The platforms are equivalent if they are equivalent with respect to all PP-specified security functionality.<h:p/><h:b><ctr ctr-type="Table" pre="Table " id="equiv-hw-platform">: Factors for Determining Technical Equivalence</ctr></h:b><h:br/><h:table border="1"><h:tr class="header" bgcolor="#cccccc"><h:td valign="top">Factor</h:td><h:td valign="top">Same/Different/None</h:td><h:td valign="top">Guidance</h:td></h:tr><h:tr><h:td valign="top">Processor Vendors</h:td><h:td valign="top">Different</h:td><h:td valign="top">Functionality implemented through processors manufactured by different vendors is not equivalent.</h:td></h:tr><h:tr><h:td valign="top">Processor/Chipset Architecture</h:td><h:td valign="top">Different</h:td><h:td valign="top">Functionality implemented through processors with different processor and chipset architectures are not equivalent.</h:td></h:tr><h:tr><h:td valign="top">Firmware Versions</h:td><h:td valign="top">Same</h:td><h:td valign="top">Functionality implemented through equivalent processors by the same version of firmware is considered equivalent.</h:td></h:tr><h:tr><h:td valign="top">PP-Specified Functionality</h:td><h:td valign="top">Same</h:td><h:td valign="top">For PP-specified security functionality implemented through equivalent processors and different firmware versions, the platforms are equivalent with respect to the functionality if execution of the functionality follows the same code paths on both platforms.</h:td></h:tr><h:tr><h:td valign="top">PP-Specified Functionality</h:td><h:td valign="top">Different</h:td><h:td valign="top">For PP-specified security functionality implemented through equivalent processors and different firmware versions, the platforms are not equivalent with respect to the functionality if execution of the functionality follows different code paths on both platforms.</h:td></h:tr></h:table><h:p/></section><section id="s-specificity" title="Level of Specificity for Tested and Claimed Equivalent Configurations">In order to make equivalency determinations, the vendor and evaluator must agree on the equivalency claims. They must then provide the scheme with sufficient information about the TOE instances and platforms that were evaluated, and the TOE instances and platforms that are claimed to be equivalent.<h:p/>The ST must describe all configurations evaluated down to processor manufacturer, model number, and microarchitecture version.</section></appendix>
  <bibliography>
    <cc-entry/>
    <entry id="bibOMB">
      <tag>OMB</tag>
      <description> <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf">Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July 12, 2006.</description>
    </entry>
  </bibliography>
</PP>
