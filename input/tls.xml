<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>
<?xml-model href="https://github.com/commoncriteria/transforms/raw/master/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>

<PP xmlns="http://common-criteria.rhcloud.com/ns/cc" name="TLS"
    xmlns:h="http://www.w3.org/1999/xhtml">
  <!-- <inline-comment color='green'> Hello World TLS </inline-comment> -->
  <!-- <inline-comment color='blue' linebreak='yes'> Hello World TLS </inline-comment> -->
  <PPReference title="PP Reference">
    <ReferenceTable>
      <PPTitle>Extended Package for Transport Layer Security (TLS)</PPTitle>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2017-07-08</PPPubDate>
      <PPCertificationID>unassigned</PPCertificationID>
      <CCVersion>3.1R4</CCVersion>
      <Keywords>TLS</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>

  <RevisionHistory role="draft">
    <entry>
      <version>Round 1</version>
      <date>2016-11-15</date>
      <subject>First draft for TC review</subject>
    </entry>
  </RevisionHistory>

  <RevisionHistory role="final">
    <entry>
      <version>1.0-draft</version>
      <date>2016-12-01</date>
      <subject>Initial Release (Goal)</subject>
    </entry>
  </RevisionHistory>

  <chapter title="Introduction" id="int">
    <section title="Overview" id="ppoverview">
	  Transport Layer Security (TLS), and the closely-related Datagram TLS (DTLS) are
    cryptographic protocols designed to provide communications security over IP networks.
    Several versions of the protocol are in widespread use in client applications such as web
	  browsers, email, instant messaging, and voice-over-IP
	  (VoIP). Major web sites use TLS to protect communications to
	  and from their servers. TLS is also used to protect communications between
	  hosts and network infrastructure devices for administration.
    The underlying platform, such as an operating system, often provides the
    actual TLS implementation.  The primary goal of the TLS protocol is to
    provide confidentiality and integrity of data transmitted
    between two communicating endpoints, as well as authentication of at least
    the server endpoint.
    <h:p/>
	  TLS supports many different methods for exchanging keys, encrypting data,
	  and authenticating message integrity. These are dynamically negotiated
    between the client and server when the TLS connection is established.
    As a result, evaluating the implementation of both endpoints is typically
    necessary to provide assurance for the operating environment.
    <h:p/>
	  This Extended Package (EP) provides a baseline set of Security Functional
	  Requirements (SFRs) for products that implement TLS. The requirements are
    intended to improve the security of products by enabling their evaluation.
    </section>

    <section title="Terms" id="glossary">
      <subsection title="Common Criteria Terms"
        id="ccterms">
        <glossary>
          <entry>
            <term><abbr title="Common Criteria">CC</abbr></term>
            <description>Common Criteria for Information Technology Security
              Evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="Common Evaluation Methodology">CEM</abbr></term>
            <description>Common Evaluation Methodology for Information Technology Security
              Evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="Extended Package">EP</abbr></term>
            <description>An implementation-independent set of security requirements which
              extend the requirements in a <abbr linkend="PP"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Protection Profile">PP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products.</description>
          </entry>
          <entry>
            <term><abbr title="Security Target">ST</abbr></term>
            <description>A set of implementation-dependent security requirements for a specific
              product.</description>
          </entry>
          <entry>
            <term><abbr title="Target of Evaluation">TOE</abbr></term>
            <description>
	      The product under evaluation.
	    </description>
          </entry>
          <entry>
            <term><abbr title="TOE Security Functionality">TSF</abbr></term>
            <description>The security functionality of the product under evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Summary Specification">TSS</abbr></term>
            <description>A description of how a <abbr linkend="TOE"/> satisfies the SFRs in a <abbr
                linkend="ST"/>. </description>
          </entry>
          <entry>
            <term><abbr title="Security Functional Requirement">SFR</abbr></term>
            <description>A requirement for security enforcement by the <abbr linkend="TOE"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Assurance Requirement">SAR</abbr></term>
            <description>A requirement to assure the security of the <abbr linkend="TOE"/>.
            </description>
          </entry>
          <entry> 
            <term><abbr title="Assurance Guidance Documents">AGD</abbr></term>
            <description>Documentation describing the secure preparation and operation of the <abbr linkend="TOE"/>.
            </description>
          </entry>	  
        </glossary>
      </subsection>
      <subsection title="Technology Terms" id="techterms">
        <glossary>
          <entry>
            <term>
              <abbr title="Transport Layer Security">TLS</abbr>
            </term>
            <description>
              Cryptographic network protocol for providing communications
              security over a TCP/IP network
	          </description>
          </entry>
          <entry>
            <term>
              <abbr title="Datagram Transport Layer Security">DTLS</abbr>
            </term>
            <description>
              Cryptographic network protocol, based on TLS, which provides
              communications security for datagram protocols
	          </description>
          </entry>
          <entry>
            <term>
              <abbr title="Certificate Authority">CA</abbr>
            </term>
            <description>
	      Issuer of digital certificates
	          </description>
          </entry>
          <entry>
            <term>
              <abbr title="Trust Anchor Database">TAD</abbr>
            </term>
            <description>
	      List of trusted root Certificate Authority certificates
	          </description>
          </entry>
	  
        </glossary>
      </subsection>
	  </section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">The Target of Evaluation
      (TOE) in this
      <abbr linkend="EP" /> is a product which acts as a TLS client or server, or both.
      <h:p/>
      This <abbr linkend="EP" /> describes the security functionality of TLS in terms of
      <cite linkend="bibCC" />. The contents of this EP must be appropriately
      combined with the base PP to include selection-based
      requirements in accordance with the selections and/or assignments made,
      and any optional and/or objective components.
      <h:p/>
      The following <abbr linkend="PP"/>s may be extended by this EP, when they
      indicate such extension:
      <h:br />
      <h:ul>
      <h:li>
      <cite linkend="bibAppPP" /> must include selection-based requirements in accordance with the
      selections and/or assignments made, and any optional and/or objective components to include:
      FCS_CKM.2.1, FCS_COP.1.1(*), FCS_RBG_EXT.2.*, FIA_X509_EXT.1.*, FIA_X509_EXT.2.*.
      </h:li>
      <h:li>
      <cite linkend="bibGPOS" /> must include selection-based requirements in accordance with the
      selections and/or assignments made, and any optional and/or objective components to include:
      FCS_CKM.2.1, FCS_COP.1.1(*), FCS_RBG_EXT.1.*, FIA_X509_EXT.1.*,
      FIA_X509_EXT.2.*.
      </h:li>
      <h:li>
      <cite linkend="bibMDF" /> must include selection-based requirements in accordance with the
      selections and/or assignments made, and any optional and/or objective components to include:
      FCS_CKM.1.1, FCS_COP.1.1(*), FCS_RBG_EXT.1.*, FIA_X509_EXT.1.*, FIA_X509_EXT.2.*.
      </h:li>
      <h:li>
      <cite linkend="bibMDM" /> must include selection-based requirements in accordance with the
      selections and/or assignments made, and any optional and/or objective components to include:
      FCS_CKM.1.1, FCS_COP.1.1(*), FCS_RBG_EXT.1.*, FIA_X509_EXT.1.*, FIA_X509_EXT.2.*.
      </h:li>
      </h:ul>
      <h:br />
      An ST must identify the applicable version of the base PP and this
      <abbr linkend="EP" /> in its conformance claims.
    </section>
  </chapter>
  <chapter title="Conformance Claims" id="conf">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description>This
          <abbr linkend="EP" /> serves to extend existing Protection Profiles with additional SFRs and associated
          Assurance Activities specific to TLS clients and servers.
          <h:p/>
          This
          <abbr linkend="EP" /> conforms to Common Criteria
          <cite linkend="bibCC" /> for Information Technology Security Evaluation, Version 3.1,
          Revision 4. It is CC Part 2 extended and CC Part 3 conformant. In order to be conformant to
          this
          <abbr linkend="EP" />, the
          <abbr linkend="ST" /> must include all components in this
          <abbr linkend="EP" /> and the associated base PP that are:
          <h:ul>
            <h:li>unconditional (which are always required)</h:li>
            <h:li>selection-based (which are required when certain selections are chosen in the
              unconditional requirements)</h:li>
          </h:ul>and may include optional and/or objective components that are desirable but not
          required for conformance.
          <h:br/>In accordance with CC Part 1, dependencies are not included when they are addressed
          by other SFRs. The assurance activities provide adequate proof that any dependencies are
          also satisfied.</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Description" id="spd">
    This Extended Package does not repeat the threats, assumptions, and organizational security
    policies identified in any base PPs, though they all apply given the conformance and hence
    dependence of this
    <abbr linkend="EP" /> on it. Together the threats, assumptions and organizational security
    policies of the base PP and those defined in this
    <abbr linkend="EP" /> describe those addressed by the product as the Target of
    Evaluation.
  </chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.PROTECTED_COMMS">
          <description>
            To address both passive (eavesdropping) and active (packet
            modification) network attack threats, conformant products provide
            mechanisms to create trusted channels to protect sensitive data.
          </description>
          <component-refer ref="fcs_tls_ext.1"/>
        </SO>
      </SOs>
    </section>

  </chapter>
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
    to be fulfilled by the product. Those requirements comprise functional components from Part 2 of
    <cite linkend="bibCC" />. The following notations are used:
    <h:ul>
      <h:li>
        <h:b>Selection</h:b> (denoted by
        <h:i>italicized text</h:i>): is used to select one or more options provided by the [CC] in stating
        a requirement.</h:li>
      <h:li>
        <h:b>Assignment</h:b> operation (denoted by
        <h:span class="assignable-content">italicized text</h:span>): is used to assign a specific value to an unspecified parameter, such
        as the length of a password. Showing the value in square brackets indicates assignment.</h:li>
      <h:li>
        <h:b>Iteration</h:b> operation: are identified with a number inside parentheses (e.g. "(1)").</h:li>
    </h:ul>
    <section title="Security Functional Requirements" id="SFRs">The Security Functional Requirements
      included in this section are derived from Part 2 of the Common Criteria for Information
      Technology Security Evaluation, Version 3.1, Revision 4, with additional extended functional
      components.
      <subsection title="Cryptographic Support (FCS)" id="fcs">
        <f-component id="fcs_tls_ext.1" name="TLS Protocol" status="threshold">
          <f-element id="fcs_tls_ext.1.1">
			<title>The product shall implement the TLS protocol that complies with TLS 1.2 (RFC 5246) and
					<selectables linebreak="yes">
						<selectable>TLS 1.0 (RFC 2246)</selectable>
						<selectable>TLS 1.1 (RFC 4346)</selectable>
						<selectable>DTLS 1.0 (RFC4347)</selectable>
						<selectable>DTLS 1.2 (RFC 6347)</selectable>
						<selectable>no other RFCs</selectable>
					</selectables>
					as a
					<selectables>
						<selectable>client</selectable>
						<selectable>server</selectable>
					</selectables>.
            </title>
            <note role="application">The ST author selects which of the additional RFCs to which
              conformance is being claimed. A TLS product can implement additional RFCs, but only those
              listed in the selection can be claimed as conformant.
              The RFC selections for this requirement need to be consistent with selections in
              later elements of this Extended Package (e.g., cryptographic algorithms permitted).
              <h:br/>
              RFC 5246 indicates that certain cryptographic algorithms are "REQUIRED". This means that from the
              IETF's perspective the implementation must include support, not that the algorithms must
              be enabled for use. For the purposes of this assurance activity and this Extended Package
              overall, it is not necessary to ensure that algorithms listed as "REQUIRED" by the RFC
              but not listed in later elements of this Extended Package are actually implemented.
              <h:br/>
	      These requirements will be revisited as new TLS and DTLS versions are standardized by the IETF.
            <h:br/>
              <h:br/>
              If <h:i>client</h:i> is selected, then the ST must include the requirements from
			  <linkref linkend="FCS_TLSC_EXT.1" /> or <linkref linkend="FCS_DTLSC_EXT.1"/> as appropriate.
			  <h:br/>
              <h:br/>
              If <h:i>server</h:i> is selected, then the ST must include the requirements from
			  <linkref linkend="FCS_TLSS_EXT.1" /> or <linkref linkend="FCS_DTLSS_EXT.1"/> as appropriate.
            </note>
            <aactivity>The evaluator shall ensure that the selections indicated in the ST are
              consistent with selections in the dependent components.
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_tlsc_ext.1" name="TLS Client Protocol" status="sel-based">
          <selection-depends req="fcs_tls_ext.1.1"/>
          <f-element id="fcs_tlsc_ext.1.1">
            <title> The product shall implement <abbr title="Transport Layer Security">TLS</abbr> 1.2
            (RFC 5246) and <selectables>
	    <selectable>TLS 1.0 (RFC 2246)</selectable>
	    <selectable>TLS 1.1 (RFC 4346)</selectable>
	    <selectable>no other RFCs</selectable>
	  </selectables>
	  as a client supporting the following cipher suites:
          <h:p/>Mandatory cipher suites: TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246
          <h:p/>Optional cipher suites:
          <selectables linebreak="yes">
            <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
            <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
	    <selectable>TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5288</selectable>
            <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
            <selectable>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
            <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
            <selectable>TLS_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
            <selectable>no other cipher suite</selectable>
            </selectables> . </title>
            <note role="application">
	      Any TLS version selected in <linkref linkend="FCS_TLS_EXT.1.1" /> must be selected here.
	      <h:br/>
	      The <abbr title="Security Target" linkend="ST">ST
              </abbr> author should select the optional cipher suites that are supported; if there
              are no cipher suites supported other than the mandatory suites,
              then “No other cipher suite” should be selected.
	      <h:br/>
	      The cipher suites to be tested in the evaluated
	      configuration are limited by this requirement; however,
	      this requirement does not restrict the TOE's ability to
	      propose additional cipher suites beyond the ones listed
	      in this requirement in its Client Hello message.  That
	      is, the TOE may propose any cipher suite; however, the
	      evaluation will only test cipher suites in the above
	      list.
	      <h:br/>
	      It is necessary to limit the cipher suites that can be
	      used in an evaluated configuration administratively on
	      the server in the test environment.
	      <h:br/>
	      GCM cipher suites are preferred over CBC cipher suites,
	      ECDHE preferred over RSA and DHE, and SHA256 or SHA384
	      over SHA.  TLS_RSA_WITH_AES_128_CBC_SHA is required in
	      order to ensure compliance with RFC 5246.
	      <h:br/>
	      These requirements will be revisited as new <abbr
	      title="Transport Layer Security">TLS</abbr> versions are
	      standardized by the IETF.
	      <h:br/> If any ECDHE cipher suites are selected, then
	      <linkref linkend="FCS_TLSC_EXT.1.4"/> is required.
	    </note>
            <aactivity>
              The evaluator shall check the description of the implementation of this
              protocol in the <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to
              ensure that the cipher suites supported are specified. The evaluator shall check the
                <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> to ensure that the
              cipher suites specified include those listed for this component. The evaluator shall
              also check the operational guidance to ensure that it contains instructions on
              configuring the product so that
              TLS conforms to the description in the <abbr title="TOE Summary Specification"
                linkend="TSS">TSS</abbr>. The evaluator shall also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall establish a <abbr title="Transport Layer Security">TLS</abbr> connection
                  using each of the cipher suites specified by the
                  requirement. This connection may be established as part of the establishment of a
                  higher-level protocol, e.g., as part of an EAP session. It is sufficient to
                  observe the successful negotiation of a cipher suite to satisfy the intent of the
                  test; it is not necessary to examine the characteristics of the encrypted traffic
                  in an attempt to discern the cipher suite being used (for example, that the
                  cryptographic algorithm is 128-bit AES and not 256-bit AES).
                </test>
                <test>
                  The evaluator shall attempt to establish the connection using a server with a
                  server certificate that contains the Server Authentication purpose in the
                  extendedKeyUsage field and verify that a connection is established. The evaluator
                  shall then verify that the client rejects an otherwise valid server certificate
                  that lacks the Server Authentication purpose in the extendedKeyUsage field and a
                  connection is not established. Ideally, the two certificates should be identical
                  except for the extendedKeyUsage field.
                </test>
                <test>
                  The evaluator shall send a server certificate in the <abbr title="Transport Layer Security">TLS</abbr> connection
                  that does not match the server-selected cipher suite (for example, send a ECDSA certificate while using the
                  TLS_RSA_WITH_AES_128_CBC_SHA cipher suite or send a RSA certificate while using one
                  of the ECDSA cipher suites.) The evaluator shall verify that the product disconnects after
                  receiving the server’s Certificate handshake message.
                </test>
                <test>
                  The evaluator shall configure the server to select the
                  TLS_NULL_WITH_NULL_NULL cipher suite and verify that the client denies the
                  connection.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic:
                  <testlist>
                    <test>
                      Change the <abbr title="Transport Layer Security">TLS</abbr> version
                      selected by the server in the Server Hello to a non-supported <abbr
                      title="Transport Layer Security">TLS</abbr> version (for example 1.3
                      represented by the two bytes 03 04) and verify that the client rejects the
                      connection.
                    </test>
                    <test>
                      [conditional] If DHE or ECDHE cipher suites are supported, modify at least one byte in the server’s nonce in the Server Hello
                      handshake message, and verify that the client rejects the Server Key Exchange
                      handshake message.
                    </test>
                    <test>
                      Modify the server’s selected cipher suite in the Server Hello handshake
                      message to be a cipher suite not presented in the Client Hello handshake
                      message. The evaluator shall verify that the client rejects the connection
                      after receiving the Server Hello.
                    </test>
                    <test>
                      [conditional] If DHE or ECDHE cipher suites are supported, modify the signature block in the server’s Key Exchange handshake
                      message, and verify that the client rejects the connection after receiving the
                      Server Key Exchange message.
                    </test>
                    <test>
                      Modify a byte in the data of the server's Finished handshake message, and verify that
                      the client sends a Fatal Alert upon receipt and does not send any application
                      data.
                    </test>
                    <test>
                      Send a message consisting of random bytes from the server after the server has issued the
                      Change Cipher Spec message and verify that the client denies the connection.
                    </test>
                  </testlist>
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.2">
            <title> The product shall verify that the presented identifier matches the reference
              identifier according to RFC 6125. </title>
            <note role="application"> The rules for verification of identity are described in
              Section 6 of RFC 6125. The reference identifier is established by the user (e.g.
              entering a URL into a web browser or clicking a link), by configuration (e.g.
              configuring the name of a mail server or authentication server), or by an application
              (e.g. a parameter of an API) depending on the product service. Based on a singular
              reference identifier’s source domain and application service type (e.g. HTTP, SIP,
              LDAP), the client establishes all reference identifiers which are acceptable, such as
              a Common Name for the Subject Name field of the certificate and a (case-insensitive)
              DNS name, URI name, and Service Name for the Subject Alternative Name field. The
              client then compares this list of all acceptable reference identifiers to the
              presented identifiers in the <abbr title="Transport Layer Security">TLS</abbr>
              server’s certificate. <h:br/> The preferred method for verification is the Subject
              Alternative Name using DNS names, URI names, or Service Names. Verification using the
              Common Name is required for the purposes of backwards compatibility. Additionally,
              support for use of IP addresses in the Subject Name or Subject Alternative name is
              discouraged, as against best practices, but may be implemented. Finally, the client
              should avoid constructing reference identifiers using wildcards. However, if the
              presented identifiers include wildcards, the client must follow the best practices
              regarding matching; these best practices are captured in the assurance activity.
            </note>
            <aactivity>
              The evaluator shall ensure that the <abbr title="TOE Summary Specification"
                linkend="TSS">TSS</abbr> describes the client’s method of establishing all reference
              identifiers from the application-configured reference identifier, including which
              types of reference identifiers are supported (e.g. Common Name, DNS Name, URI Name,
              Service Name, or other application-specific Subject Alternative Names) and whether IP
              addresses and wildcards are supported. The evaluator shall ensure that this
              description identifies whether and the manner in which certificate pinning is
              supported or used by the product.
              <h:br/> The evaluator shall verify that the AGD guidance includes instructions for
              setting the reference identifier to be used for the purposes of certificate validation
              in <abbr title="Transport Layer Security">TLS</abbr>. <h:br/> The evaluator shall
              configure the reference identifier according to the AGD guidance and perform the
              following tests during a <abbr title="Transport Layer Security">TLS</abbr> connection:
              <testlist>
                <test> The evaluator shall present a server certificate that does not contain an
                  identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that
                  matches the reference identifier. The evaluator shall verify that the connection
                  fails.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that
                  matches the reference identifier, contains the SAN extension, but does not contain
                  an identifier in the SAN that matches the reference identifier. The evaluator
                  shall verify that the connection fails. The evaluator shall repeat this test for
                  each supported SAN type.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that
                  matches the reference identifier and does not contain the SAN extension. The
                  evaluator shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall present a server certificate that contains a CN that does
                  not match the reference identifier but does contain an identifier in the SAN that
                  matches. The evaluator shall verify that the connection succeeds.
                </test>
                <test>
                  The evaluator shall perform the following wildcard tests with each supported
                  type of reference identifier:
                  <testlist>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard
                      that is not in the left-most label of the presented identifier (e.g.
                      foo.*.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in
                      the left-most label but not preceding the public suffix (e.g. *.example.com).
                      The evaluator shall configure the reference identifier with a single left-most
                      label (e.g. foo.example.com) and verify that the connection succeeds. The
                      evaluator shall configure the reference identifier without a left-most label
                      as in the certificate (e.g. example.com) and verify that the connection fails.
                      The evaluator shall configure the reference identifier with two left-most
                      labels (e.g. bar.foo.example.com) and verify that the connection fails.
                    </test>
                    <test>
                      The evaluator shall present a server certificate containing a wildcard in
                      the left-most label immediately preceding the public suffix (e.g. *.com). The
                      evaluator shall configure the reference identifier with a single left-most
                      label (e.g. foo.com) and verify that the connection fails. The evaluator shall
                      configure the reference identifier with two left-most labels (e.g.
                      bar.foo.com) and verify that the connection fails.
                    </test>
                  </testlist>
                </test>
                <test>
                  [conditional] If URI or Service name reference identifiers are supported, the
                  evaluator shall configure the <abbr title="Domain Name System">DNS</abbr> name and
                  the service identifier. The evaluator shall present a server certificate
                  containing the correct <abbr title="Domain Name System">DNS</abbr> name and
                  service identifier in the URIName or SRVName fields of the SAN and verify that the
                  connection succeeds. The evaluator shall repeat this test with the wrong service
                  identifier (but correct <abbr title="Domain Name System">DNS</abbr> name) and
                  verify that the connection fails.
                </test>
                <test>
                  [conditional] If pinned certificates are supported the evaluator shall
                  present a certificate that does not match the pinned certificate and verify that
                  the connection fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.3">
            <title>The product shall only establish a trusted channel if the peer certificate is valid. </title>
            <note role="application"> Validity is determined by the identifier verification,
              certificate path, the expiration date, and the revocation status in accordance with
              RFC 5280. Certificate validity shall be tested in accordance with testing performed
              for <linkref linkend="FIA_X509_EXT.1"/>. <h:br/> For <abbr
                title="Transport Layer Security">TLS</abbr> connections, this channel shall not be
              established if the peer certificate is invalid.
      </note>
            <aactivity> The evaluator will use <abbr title="Transport Layer Security">TLS</abbr> as
              a function to verify that the validation rules in <linkref linkend="FIA_X509_EXT.1.1"
              /> are adhered to and shall perform the following additional test: <testlist>
                <test> The evaluator will demonstrate that a peer using a certificate without a
                  valid certification path results in an authenticate failure. Using the
                  administrative guidance, the evaluator will then load the trusted CA
                  certificate(s) needed to validate the peer's certificate, and demonstrate that the
                  connection succeeds. The evaluator then shall delete one of the CA certificates,
                  and show that the connection fails. </test>
                <test> The evaluator will demonstrate that a peer using a certificate which has
                  been revoked results in an authentication failure. </test>
                <test> The evaluator will demonstrate that a peer using a certificate which has
                  passed its expiration date results in an authentication failure. </test>
                <test> the evaluator will demonstrate that a peer using a certificate which does
                  not have a valid identifier shall result in an authentication failure. </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlsc_ext.1.4">
            <title> The product shall present the Supported Elliptic Curves Extension in the Client Hello
              with the following NIST curves: <selectables>
                <selectable>secp256r1</selectable>
                <selectable>secp384r1</selectable>
                <selectable>secp521r1</selectable>
              </selectables> and no other curves. </title>
            <note role="application"> This requirement limits the elliptic curves allowed for
              authentication and key agreement to the NIST curves from <linkref
                linkend="FCS_COP.1(3)"/> and <linkref linkend="FCS_CKM.1"/> and <linkref
                  linkend="FCS_CKM.2"/>. This extension is required for clients supporting Elliptic
              Curve cipher suites. </note>
            <aactivity> The evaluator will verify that <abbr title="TOE Summary Specification"
              linkend="TSS">TSS</abbr> describes the supported Elliptic Curves Extension and
              whether the required behavior is performed by default or may be configured. If the
              <abbr title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the
              supported Elliptic Curves Extension must be configured to meet the requirement, the
              evaluator will verify that AGD guidance includes configuration of the supported
              Elliptic Curves Extension. <h:br/> The evaluator will also perform the following test:
              <h:br/>
              The evaluator will configure the server to perform an ECDHE key exchange
              message in the <abbr title="Transport Layer Security">TLS</abbr> connection using
              a non-supported ECDHE curve (for example, P-192) and shall verify that The product disconnects after
              receiving the server's Key Exchange handshake message.
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_tlsc_ext.3" name="TLS Client Protocol Signature Algorithms" status="objective">
          <f-element id="fcs_tlsc_ext.3.1">
            <title> The product shall present the signature_algorithms extension in the Client Hello with
              the supported_signature_algorithms value containing the following hash algorithms: <selectables>
                <selectable>SHA256</selectable>
                <selectable>SHA384</selectable>
                <selectable>SHA512</selectable>
              </selectables> and no other hash algorithms. </title>
            <note role="application"> This requirement limits the hashing algorithms supported for
              the purpose of digital signature verification by the client and limits the server to
              the supported hashes for the purpose of digital signature generation by the server.
              The signature_algorithm extension is only supported by <abbr
                title="Transport Layer Security">TLS</abbr> 1.2. </note>
            <aactivity> The evaluator will verify that <abbr title="TOE Summary Specification"
                linkend="TSS">TSS</abbr> describes the signature_algorithm extension and whether the
              required behavior is performed by default or may be configured. If the <abbr
                title="TOE Summary Specification" linkend="TSS">TSS</abbr> indicates that the
              signature_algorithm extension must be configured to meet the requirement, the
              evaluator will verify that AGD guidance includes configuration of the
              signature_algorithm extension. <h:br/> The evaluator will also perform the following
              test:
              <h:br/>
                The evaluator will configure the server to send a certificate in the <abbr
                title="Transport Layer Security">TLS</abbr> connection that is not supported
                according to the Client’s HashAlgorithm enumeration within the
                signature_algorithms extension (for example, send a certificate with a SHA-1
                signature). The evaluator will verify that The product disconnects after receiving the server’s Certificate
                handshake message.
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_tlsc_ext.2" name="TLS Client Support for Mutual Authentication" status="optional">
          <f-element id="fcs_tlsc_ext.2.1">
            <title> The product shall support mutual authentication using X.509v3 certificates. </title>
            <note role="application"> The use of X.509v3 certificates for <abbr
                title="Transport Layer Security">TLS</abbr> is addressed in <linkref
                linkend="FIA_X509_EXT.2.1"/>. This requirement adds that a client must be capable of
              presenting a certificate to a <abbr title="Transport Layer Security">TLS</abbr> server
              for <abbr title="Transport Layer Security">TLS</abbr> mutual authentication. </note>
            <aactivity> The evaluator will ensure that the <abbr title="TOE Summary Specification"
                linkend="TSS">TSS</abbr> description required per <linkref
                linkend="FIA_X509_EXT.2.1"/> includes the use of client-side certificates for TLS
              mutual authentication. <h:br/> The evaluator will verify that the AGD guidance required
              per <linkref linkend="FIA_X509_EXT.2.1"/> includes instructions for configuring the
              client-side certificates for <abbr title="Transport Layer Security">TLS</abbr> mutual
              authentication. <h:br/> The evaluator will also perform the following test:
              <h:br/>
              Configure the server to require mutual authentication and then modify a
              byte in a CA field in the Server’s Certificate Request handshake message. The
              modified CA field must not be the CA used to sign the client’s certificate.
              The evaluator will verify the connection is unsuccessful.
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="fcs_tlsc_ext.4" name="TLS Renegotiation" status="optional">
          <f-element id="fcs_tlsc_ext.4.1">
            <title> The product shall support secure renegotiation through use
              of the “renegotiation_info” TLS extension in accordance with RFC 5746. </title>
          </f-element>
          <f-element id="fcs_tlsc_ext.4.2">
            <title> The product shall include (choose only one of)
              <selectables>
                <selectable>renegotiation_info extension</selectable>
                <selectable>TLS_EMPTY_RENEGOTIATION_INFO_SCSV ciphersuite</selectable>
              </selectables> in the ClientHello message. </title>

            <note role="application">
            RFC 5746 defines an extension to TLS that binds
            renegotiation handshakes to the cryptography in the original handshake.
            The ciphersuite included in the selection is a means for clients to
            be compatible with servers that don’t support the extension.  It is
            recommended that client implementations support both the ciphersuite
            and the extension.
            </note>
            <aactivity>
              The evaluator shall perform the following tests:
              <testlist>
                <test>The evaluator shall use a network packet analyzer/sniffer to capture the traffic between the two TLS endpoints.  The evaluator shall verify that either the “renegotiation_info” field or the SCSV ciphersuite is included in the ClientHello packet during the initial handshake.</test>
                <test>The evaluator shall verify the Client’s handling of ServerHello messages received during the initial handshake that include the “renegotiation_info” extension.  The evaluator shall modify the length portion of this field in the ServerHello message to be non-zero and verify that the client sends a failure and terminates the connection.  The evaluator shall verify that a properly formatted field results in a successful TLS connection.</test>
                <test>The evaluator shall verify that ServerHello messages received during secure renegotiation contain the “renegotiation_info” extension.  The evaluator shall modify either the “client_verify_data” or “server_verify_data” value and verify that the client terminates the connection.</test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_dtlsc_ext.1" name="DTLS Client Protocol" status="sel-based">
          <selection-depends req="fcs_tls_ext.1.1"/>
          <f-element id="fcs_dtlsc_ext.1.1">
            <title>The product shall implement the DTLS protocol in accordance with
              DTLS 1.2 (RFC 6347).
            </title>
            <aactivity>
              <testlist>
                <test>
                  The evaluator shall attempt to establish a connection with a DTLS server, observe
                  the traffic with a packet analyzer, and verify that the connection succeeds and
                  that the traffic is identified as DTLS.
                </test>
                <h:br />
                Other tests are performed in conjunction with the Assurance Activity listed for
                <linkref linkend="FCS_TLSC_EXT.1"/>.
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_dtlsc_ext.1.2">
            <title>The product shall implement the requirements in <linkref linkend="FCS_TLSC_EXT.1"/> for the
              DTLS implementation, except where variations are allowed according to DTLS 1.2
              (RFC 6347).
            </title>
            <note role="application">
              Differences between DTLS 1.2 and TLS 1.2 are outlined in RFC 6347; otherwise the
              protocols are the same. In particular, for the applicable security characteristics
              defined for the <abbr linkend="TSF"/>, the two protocols do not differ. Therefore, all
              application notes and assurance activities that are listed for
              <abbr title="Transport Layer Security">TLS</abbr> apply to the DTLS implementation.
            </note>
            <aactivity>
              The evaluator shall perform the assurance activities listed for <linkref linkend="FCS_TLSC_EXT.1"/>.
            </aactivity>
          </f-element>
          <f-element id="fcs_dtlsc_ext.1.3">
            <title>The product shall not establish a trusted communication channel if the peer
              certificate is deemed invalid.
            </title>
            <note role="application">
              Validity is determined by the certificate path, the expiration date, and the
              revocation status in accordance with RFC 5280.
            </note>
            <aactivity>
              Certificate validity shall be tested in accordance with testing performed for
              <linkref linkend="FIA_X509_EXT.1"/>, and the evaluator shall perform the following test.
              <testlist>
                <test>
                  The evaluator shall demonstrate that using a certificate without a valid
                  certification path results in the function failing. Using the administrative
                  guidance, the evaluator shall then load a certificate or certificates to the
                  Trust Anchor Database needed to validate the certificate to be used in the
                  function, and demonstrate that the function succeeds. The evaluator then shall
                  delete one of the certificates, and show that the function fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_dtlss_ext.1" name="DTLS Server Protocol" status="sel-based">
          <selection-depends req="fcs_tls_ext.1.1"/>
          <f-element id="fcs_dtlss_ext.1.1">
            <title>The product shall implement the DTLS protocol in accordance with
              DTLS 1.2 (RFC 6347).
            </title>
            <aactivity>
              <testlist>
                <test>
                  The evaluator shall attempt to establish a connection with a DTLS server, observe
                  the traffic with a packet analyzer, and verify that the connection succeeds and
                  that the traffic is identified as DTLS.
                </test>
                <h:br />
                Other tests are performed in conjunction with the Assurance Activity listed for
                <linkref linkend="FCS_TLSS_EXT.1"/>.
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_dtlss_ext.1.2">
            <title>The product shall implement the requirements in <linkref linkend="FCS_TLSS_EXT.1"/> for the
              DTLS implementation, except where variations are allowed according to DTLS 1.2
              (RFC 6347).
            </title>
            <note role="application">
              Differences between DTLS 1.2 and TLS 1.2 are outlined in RFC 6347; otherwise the
              protocols are the same. In particular, for the applicable security characteristics
              defined for the <abbr linkend="TSF"/>, the two protocols do not differ. Therefore, all
              application notes and assurance activities that are listed for
              <abbr title="Transport Layer Security">TLS</abbr> apply to the DTLS implementation.
            </note>
            <aactivity>
              The evaluator shall perform the assurance activities listed for <linkref linkend="FCS_TLSS_EXT.1"/>.
            </aactivity>
          </f-element>
          <f-element id="fcs_dtlss_ext.1.3">
            <title>The product shall not establish a trusted communication channel if the peer
              certificate is deemed invalid.
            </title>
            <note role="application">
              Validity is determined by the certificate path, the expiration date, and the
              revocation status in accordance with RFC 5280.
            </note>
            <aactivity>
              Certificate validity shall be tested in accordance with testing performed for
              <linkref linkend="FIA_X509_EXT.1"/>, and the evaluator shall perform the following test.
              <testlist>
                <test>
                  The evaluator shall demonstrate that using a certificate without a valid
                  certification path results in the function failing. Using the administrative
                  guidance, the evaluator shall then load a certificate or certificates to the
                  Trust Anchor Database needed to validate the certificate to be used in the
                  function, and demonstrate that the function succeeds. The evaluator then shall
                  delete one of the certificates, and show that the function fails.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>

        <f-component id="fcs_tlss_ext.1" name="TLS Server Protocol" status="sel-based">
          <selection-depends req="fcs_tls_ext.1.1"/>
          <f-element id="fcs_tlss_ext.1.1">
            <title> The product shall implement <abbr title="Transport Layer Security">TLS</abbr> 1.2
              (RFC 5246)  supporting the following cipher suites:
              <h:p/>Mandatory cipher suites: TLS_RSA_WITH_AES_128_CBC_SHA as defined in RFC 5246
              <h:p/>Optional cipher suites:
              <selectables linebreak="yes">
                <selectable>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as defined in RFC 5289</selectable>
                <selectable>TLS_RSA_WITH_AES_128_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>TLS_RSA_WITH_AES_256_CBC_SHA256 as defined in RFC 5246</selectable>
                <selectable>no other cipher suite</selectable>
              </selectables> .
            </title>
            <note role="application">The cipher suites to be tested in the evaluated configuration
              are limited by this requirement. The <abbr title="Security Target" linkend="ST">ST
              </abbr> author should select the optional cipher suites that are supported; if there
              are no cipher suites supported other than the mandatory suites,
              then “No other cipher suite” should be selected.
              It is necessary to limit the cipher suites that can be used in an evaluated
              configuration administratively on the server in the test environment. The Suite B
              algorithms listed above (RFC 6460) are the preferred algorithms for implementation.
              TLS_RSA_WITH_AES_128_CBC_SHA is required in order to ensure compliance with RFC 5246.
              <h:br/> These requirements will be revisited as new <abbr
                title="Transport Layer Security">TLS</abbr> versions are standardized by the IETF.
              <h:br/> If any cipher suites are selected using ECDHE, then <linkref
                linkend="FCS_TLSC_EXT.2.1"/> is required.
            </note>
            <aactivity>
              The evaluator shall check the description of the implementation of this protocol in
              the <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr> to ensure that
              the cipher suites supported are specified. The evaluator shall check the
              <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr> to ensure that the
              cipher suites specified include those listed for this component. The evaluator shall
              also check the operational guidance to ensure that it contains instructions on
              configuring the <h:abbr title="Target of Evaluation" linkend="TOE">TOE</h:abbr> so that
              TLS conforms to the description in the
              <h:abbr title="TOE Summary Specification" linkend="TSS">TSS</h:abbr>. The evaluator shall
              also perform the following tests:
              <testlist>
                <test>
                  The evaluator shall establish a
                  <h:abbr title="Transport Layer Security">TLS</h:abbr> connection using each of the
                  cipher suites specified by the requirement. This connection may be established as
                  part of the establishment of a higher-level protocol, e.g., as part of an EAP
                  session. It is sufficient to observe the successful negotiation of a cipher suite
                  to satisfy the intent of the test; it is not necessary to examine the
                  characteristics of the encrypted traffic in an attempt to discern the cipher suite
                  being used (for example, that the cryptographic algorithm is 128-bit AES and not
                  256-bit AES).
                </test>
                <test>
                  The evaluator shall send a Client Hello to the server with a list of
                  ciphersuites that does not contain any of the ciphersuites in the server’s ST
                  and verify that the server denies the connection. Additionally, the evaluator
                  shall send a Client Hello to the server containing only the
                  TLS_NULL_WITH_NULL_NULL ciphersuite and verify that the server
                  denies the connection.
                </test>
                <test>
                  The evaluator shall use a client to send a key exchange message in
                  the TLS connection that does not match the server-selected ciphersuite
                  (for example, send an ECDHE key exchange while using the
                  TLS_RSA_WITH_AES_128_CBC_SHA ciphersuite or send a RSA key
                  exchange while using one of the ECDSA ciphersuites.) The evaluator shall
                  verify that the application disconnects after receiving the key exchange
                  message.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic:
                  <testlist>
                    <test>
                      Change the <h:abbr title="Transport Layer Security">TLS</h:abbr> version selected
                      by the server in the Server Hello to a non-supported
                      <h:abbr title="Transport Layer Security">TLS</h:abbr> version (for example 1.3
                      represented by the two bytes 03 04) and verify that the client rejects the
                      connection.
                    </test>
                    <test>
                      Modify at least one byte in the client’s nonce in the Client Hello handshake
                      message, and verify that the server rejects the client's Certificate Verify handshake message
                      (if using mutual authentication) or that the server denies the client's
                      Finished handshake message.
                    </test>
                    <test>
                      Modify the signature block in the Client’s Key Exchange handshake message, and
                      verify that the server rejects the client's Certificate Verify handshake message
                      (if using mutual authentication) or that the server denies the client's
                      Finished handshake message.
                    </test>
                    <test>
                      Modify a byte in the Client Finished handshake message, and verify that the
                      server rejects the connection and does not send any application data.
                    </test>
                    <test>
                      After generating a fatal alert by sending a Finished message from the client
                      before the client send a ChangeCipherSpec message, send a Client Hello with
                      the session identifier from the previous test, and verify that the server
                      denies the connection.
                    </test>
                    <test>
                      Send an garbled message from the client after the client has issued the
                      ChangeCipherSpec message and verify that the Server denies the connection.
                    </test>
                  </testlist>
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.1.2">
            <title>The product shall deny connections from clients requesting
              SSL 2.0, SSL 3.0, TLS 1.0, TLS 1.1, and
              <selectables>
                <selectable>TLS 1.2</selectable>
                <selectable>none</selectable>
              </selectables>
              .
            </title>
            <note role="application">All SSL versions and TLS 1.0 and 1.1 are denied. Any TLS version
              not selected in <linkref linkend="FCS_TLSS_EXT.1.1"/> should be selected here.
            </note>
            <aactivity>
              The evaluator shall verify that the TSS contains a description of the denial
              of old SSL and TLS versions, and any configuration necessary to meet the
              requirement must be contained in the AGD guidance.
              <testlist>
                <test>
                  The evaluator shall send a Client Hello requesting a connection with
                  version SSL 2.0 and verify that the server denies the connection. The
                  evaluator shall repeat this test with SSL 3.0, TLS 1.0, TLS 1.1, and
                  TLS 1.2 if it was selected.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.1.3">
            <title>The product shall generate key establishment parameters using RSA
              with size 2048 bits and
              <selectables>
                <selectable>3072 bits</selectable>
                <selectable>4096 bits</selectable>
                <selectable>no other sizes</selectable>
              </selectables>
              and
              <selectables>
                <selectable>over NIST curves
                  <selectables>
                    <selectable>secp256r</selectable>
                    <selectable>secp384r</selectable>
                  </selectables> and no other curves</selectable>
                <selectable>Diffie-Hellman parameters of size 2048 and
                  <selectables>
                    <selectable>3072 bits</selectable>
                    <selectable>no other size</selectable>
                  </selectables>
                </selectable>
                <selectable>no other</selectable>
              </selectables>
            </title>
            <note role="application">
              If the ST lists a DHE ciphersuite in <linkref linkend="FCS_TLSS_EXT.1.1"/>,
              the ST must include the Diffie-Hellman selection in the requirement
            </note>
            <aactivity>
              The evaluator shall verify that the TSS describes the key agreement parameters
              of the server key exchange message.
              <h:br />
              The evaluator shall verify that any configuration guidance necessary to meet
              the requirement must be contained in the AGD guidance.
              <testlist>
                <test>
                  The evaluator shall attempt a connection using an ECDHE ciphersuite and
                  a configured curve and, using a packet analyzer, verify that the key
                  agreement parameters in the Key Exchange message are the ones configured.
                  (Determining that the size matches the expected size for the configured curve
                  is sufficient.) The evaluator shall repeat this test for each supported NIST
                  Elliptic Curve and each supported Diffie-Hellman key size.
                </test>
              </testlist>
            </aactivity>
          </f-element>
        </f-component>

       <f-component id="FCS_TLSS_EXT.2" name="TLS Server Support for Mutual Authentication" status="optional">
          <f-element id="fcs_tlss_ext.2.1">
            <title>The product shall support authentication of
              TLS clients using X.509v3 certificates.
            </title>
          </f-element>
          <f-element id="fcs_tlss_ext.2.2">
            <title>The product shall not establish a trusted channel
              if the peer certificate is invalid.
            </title>
            <note role="application">
              The use of X.509v3 certificates for TLS is addressed in
              <linkref linkend="FIA_X509_EXT.2.1"/>
              This requirement adds that this use must include support for client-side
              certificates for TLS mutual authentication. Validity is determined by the
              certificate path, the expiration date, and the revocation status in
              accordance with RFC 5280. Certificate validity shall be tested in accordance
              with testing performed for <linkref linkend="FIA_X509_EXT.1"/>.
            </note>
            <aactivity>
              The evaluator shall ensure that the TSS description required per FIA_X509_EXT.2.1
              includes the use of client-side certificates for TLS mutual authentication.
              <h:br />
              The evaluator shall verify that the AGD guidance required per FIA_X509_EXT.2.1
              includes instructions for configuring the client-side certificates for TLS mutual
              authentication.
              <testlist>
                <test>
                  The evaluator shall configure the server to send a certificate request
                  to the client and shall attempt a connection without sending a certificate from
                  the client. The evaluator shall verify that the connection is denied.
                </test>
                <test>
                  The evaluator shall configure the server to send a certificate request
                  to the client without the supported_signature_algorithm used by the client’s
                  certificate. The evaluator shall attempt a connection using the client
                  certificate and verify that the connection is denied.
                </test>
                <test>
                  The evaluator shall demonstrate that using a certificate without a
                  valid certification path results in the function failing. Using the
                  administrative guidance, the evaluator shall then load a certificate or
                  certificates needed to validate the certificate to be used in the function, and
                  demonstrate that the function succeeds. The evaluator then shall delete one
                  of the certificates, and show that the function fails.
                </test>
                <test>
                  The evaluator shall configure the client to send a certificate that does
                  not chain to one of the Certificate Authorities (either a Root or Intermediate
                  CA) in the server’s Certificate Request message. The evaluator shall verify
                  that the attempted connection is denied.
                </test>
                <test>
                  The evaluator shall configure the client to send a certificate with the
                  Client Authentication purpose in the extendedKeyUsage field and verify that
                  the server accepts the attempted connection. The evaluator shall repeat this
                  test without the Client Authentication purpose and shall verify that the server
                  denies the connection. Ideally, the two certificates should be identical except
                  for the Client Authentication purpose.
                </test>
                <test>
                  The evaluator shall perform the following modifications to the traffic:
                  a) Configure the server to require mutual authentication and then
                  modify a byte in the client’s certificate. The evaluator shall verify
                  that the server rejects the connection.
                  b) Configure the server to require mutual authentication and then
                  modify a byte in the client’s Certificate Verify handshake message.
                  The evaluator shall verify that the server rejects the connection.
                </test>
              </testlist>
            </aactivity>
          </f-element>
          <f-element id="fcs_tlss_ext.2.3">
            <title>The product shall not establish a trusted channel if
              the distinguished name (DN) or Subject Alternative Name (SAN)
              contained in a certificate does not match the expected identifier
              for the peer.
            </title>
            <note role="application">
              The peer identifier may be in the Subject field or the Subject
              Alternative Name extension of the certificate. The expected
              identifier may either be configured, may be compared to the
              Domain Name, IP address, username, or email address used by
              the peer, or may be passed to a directory server for comparison.
              Matching should be performed by a bit-wise comparison.
            </note>
            <aactivity>
              If the product implements mutual authentication, the evaluator shall
              verify that the TSS describes how the DN and SAN in the certificate
              is compared to the expected identifier.
              <h:br />
              If the DN is not compared automatically to the Domain Name,
              IP address, username, or email address, the evaluator shall
              ensure that the AGD guidance includes configuration of the
              expected identifier or the directory server for the connection.
              <testlist>
                <test>
                  The evaluator shall send a client certificate with an
                  identifier that does not match an expected identifier
                  and verify that the server denies the connection.
                </test>
              </testlist>
            </aactivity>
          </f-element>


        </f-component>
      </subsection>
    </section>
  </chapter>

  <appendix title="Optional Requirements" id="optional">Baseline requirements
    which must must be performed by the product are
    contained in the main body of this EP in <secref linkend="req"/>. As described in
    <secref linkend="conf"/> there are three other types of requirements
    specified in <appref linkend="optional"/>, <appref linkend="sel-based"/>, and <appref
      linkend="objective"/>. The first type (in this Appendix) are requirements that can be included
    in the <abbr linkend="ST"/>, but are not required in order for a product to claim conformance to
    this EP. The second type (in <appref linkend="sel-based"/>) are requirements based on selections
    in the body of the EP: if certain selections are made, then additional requirements in that
    appendix must be included. The third type (in <appref linkend="objective"/> are components that
    are not required in order to conform to this EP, but will be included in the baseline
    requirements in future versions of this EP, so adoption by vendors is encouraged. Note that the
    ST author is responsible for ensuring that requirements that may be associated with those in
      <appref linkend="optional"/>, <appref linkend="sel-based"/>, and <appref linkend="objective"/>
    but are not listed (e.g., FMT-type requirements) are also included in the ST. </appendix>

  <appendix title="Selection-Based Requirements" id="sel-based"> As indicated in the introduction to
    this EP, the baseline requirements (those that must be performed by the product or its underlying
    platform) are contained in the body of this EP. There are additional requirements based on
    selections in the body of the EP: if certain selections are made, then additional requirements
    below will need to be included. </appendix>

  <appendix title="Objective Requirements" id="objective"> This appendix includes requirements that
    specify security functionality which also addresses threats. The requirements are not currently
    mandated in the body of this EP as they describe security functionality not yet widely-available
    in commercial technology. However, these requirements may be included in the ST such that the
    product is still conformant to this EP, and it is expected that they be included as soon as
    possible. </appendix>


  <appendix id="biblio" title="References">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation -
          <h:ul>
            <h:li>
              <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part 1:
                Introduction and General Model</h:a>, CCMB-2012-09-001, Version 3.1 Revision 4, September
              2012.</h:li>
            <h:li>
              <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part 2:
                Security Functional Components</h:a>, CCMB-2012-09-002, Version 3.1 Revision 4, September
              2012.</h:li>
            <h:li>
              <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part 3:
                Security Assurance Components</h:a>, CCMB-2012-09-003, Version 3.1 Revision 4, September
              2012.</h:li>
          </h:ul></description>
      </entry>
      <entry id="bibGPOS">
        <tag>GPOSPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/pp/">Protection Profile for General
            Purpose Operating Systems
          </h:a>
        </description>
      </entry>
      <entry id="bibMDF">
        <tag>MDFPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/pp/">Protection Profile for Mobile
            Device Fundamentals
          </h:a>
        </description>
      </entry>
      <entry id="bibMDM">
        <tag>MDMPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/pp/">Protection Profile for Mobile
            Device Management
          </h:a>
        </description>
      </entry>
      <entry id="bibAppPP">
        <tag>AppPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/pp/">Protection Profile for Application
            Software</h:a>
        </description>
      </entry>
    </bibliography>
  </appendix>
  <appendix title="Acronyms" id="acronyms">
    <acronyms>
      <entry>
        <term>AES</term>
        <description>Advanced Encryption Standard</description>
      </entry>
      <entry>
        <term>CBC</term>
        <description>Cipher Block Chaining</description>
      </entry>
      <entry>
        <term>ECDSA</term>
        <description>Elliptic Curve Digital Signature Algorithm</description>
      </entry>
      <entry>
        <term>GCM</term>
        <description>Galois/Counter Mode</description>
      </entry>
      <entry>
        <term>IETF</term>
        <description>Internet Engineering Task Force</description>
      </entry>
      <entry>
        <term>IV</term>
        <description>Initialization Vector</description>
      </entry>
      <entry>
        <term>MAC</term>
        <description>Message Authentication Code</description>
      </entry>
      <entry>
        <term>NIST</term>
        <description>National Institute of Standards and Technology</description>
      </entry>
      <entry>
        <term>PBKDF</term>
        <description>Password-Based Key Derivation Function</description>
      </entry>
      <entry>
        <term>RFC</term>
        <description>Request for Comment (IETF)</description>
      </entry>
      <entry>
        <term>RSA</term>
        <description>Rivest Shamir Adelman</description>
      </entry>
    </acronyms>
  </appendix>
</PP>
